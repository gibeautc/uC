
Sensor_Board.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00001a58  00001aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800154  00800154  00001b40  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015b9  00000000  00000000  00001cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006af  00000000  00000000  000032b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001630  00000000  00000000  00003964  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  00004f94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011e14  00000000  00000000  00005248  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000107d  00000000  00000000  0001705c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000180d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004a72  00000000  00000000  000181c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 b0 01 	jmp	0x360	; 0x360 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e8 e5       	ldi	r30, 0x58	; 88
     17e:	fa e1       	ldi	r31, 0x1A	; 26
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a4 35       	cpi	r26, 0x54	; 84
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a4 e5       	ldi	r26, 0x54	; 84
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a8 35       	cpi	r26, 0x58	; 88
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d5 01 	call	0x3aa	; 0x3aa <main>
     1a0:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <init_Feedback>:
		PinLOW(PORTD, Vibration);
		break;
		case Pulse_Long:
		PinLOW(PORTD, Vibration);
		_delay_ms(1000);
		PinHIGH(PORTD, Vibration);
     1a8:	8a b1       	in	r24, 0x0a	; 10
     1aa:	80 6e       	ori	r24, 0xE0	; 224
     1ac:	8a b9       	out	0x0a, r24	; 10
     1ae:	8b b1       	in	r24, 0x0b	; 11
     1b0:	80 6c       	ori	r24, 0xC0	; 192
     1b2:	8b b9       	out	0x0b, r24	; 11
     1b4:	08 95       	ret

000001b6 <LED>:
     1b6:	61 30       	cpi	r22, 0x01	; 1
     1b8:	19 f1       	breq	.+70     	; 0x200 <LED+0x4a>
     1ba:	38 f0       	brcs	.+14     	; 0x1ca <LED+0x14>
     1bc:	62 30       	cpi	r22, 0x02	; 2
     1be:	09 f4       	brne	.+2      	; 0x1c2 <LED+0xc>
     1c0:	6b c0       	rjmp	.+214    	; 0x298 <LED+0xe2>
     1c2:	64 30       	cpi	r22, 0x04	; 4
     1c4:	09 f4       	brne	.+2      	; 0x1c8 <LED+0x12>
     1c6:	83 c0       	rjmp	.+262    	; 0x2ce <LED+0x118>
     1c8:	08 95       	ret
     1ca:	4b b1       	in	r20, 0x0b	; 11
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	b9 01       	movw	r22, r18
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <LED+0x22>
     1d4:	66 0f       	add	r22, r22
     1d6:	77 1f       	adc	r23, r23
     1d8:	8a 95       	dec	r24
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <LED+0x1e>
     1dc:	cb 01       	movw	r24, r22
     1de:	96 2f       	mov	r25, r22
     1e0:	90 95       	com	r25
     1e2:	94 23       	and	r25, r20
     1e4:	9b b9       	out	0x0b, r25	; 11
     1e6:	7f ef       	ldi	r23, 0xFF	; 255
     1e8:	21 ee       	ldi	r18, 0xE1	; 225
     1ea:	34 e0       	ldi	r19, 0x04	; 4
     1ec:	71 50       	subi	r23, 0x01	; 1
     1ee:	20 40       	sbci	r18, 0x00	; 0
     1f0:	30 40       	sbci	r19, 0x00	; 0
     1f2:	e1 f7       	brne	.-8      	; 0x1ec <LED+0x36>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <LED+0x40>
     1f6:	00 00       	nop
     1f8:	9b b1       	in	r25, 0x0b	; 11
     1fa:	89 2b       	or	r24, r25
     1fc:	8b b9       	out	0x0b, r24	; 11
     1fe:	08 95       	ret
     200:	4b b1       	in	r20, 0x0b	; 11
     202:	21 e0       	ldi	r18, 0x01	; 1
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	b9 01       	movw	r22, r18
     208:	02 c0       	rjmp	.+4      	; 0x20e <LED+0x58>
     20a:	66 0f       	add	r22, r22
     20c:	77 1f       	adc	r23, r23
     20e:	8a 95       	dec	r24
     210:	e2 f7       	brpl	.-8      	; 0x20a <LED+0x54>
     212:	cb 01       	movw	r24, r22
     214:	26 2f       	mov	r18, r22
     216:	20 95       	com	r18
     218:	92 2f       	mov	r25, r18
     21a:	94 23       	and	r25, r20
     21c:	9b b9       	out	0x0b, r25	; 11
     21e:	7f ef       	ldi	r23, 0xFF	; 255
     220:	31 ee       	ldi	r19, 0xE1	; 225
     222:	44 e0       	ldi	r20, 0x04	; 4
     224:	71 50       	subi	r23, 0x01	; 1
     226:	30 40       	sbci	r19, 0x00	; 0
     228:	40 40       	sbci	r20, 0x00	; 0
     22a:	e1 f7       	brne	.-8      	; 0x224 <LED+0x6e>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <LED+0x78>
     22e:	00 00       	nop
     230:	9b b1       	in	r25, 0x0b	; 11
     232:	98 2b       	or	r25, r24
     234:	9b b9       	out	0x0b, r25	; 11
     236:	5f ef       	ldi	r21, 0xFF	; 255
     238:	61 ee       	ldi	r22, 0xE1	; 225
     23a:	74 e0       	ldi	r23, 0x04	; 4
     23c:	51 50       	subi	r21, 0x01	; 1
     23e:	60 40       	sbci	r22, 0x00	; 0
     240:	70 40       	sbci	r23, 0x00	; 0
     242:	e1 f7       	brne	.-8      	; 0x23c <LED+0x86>
     244:	00 c0       	rjmp	.+0      	; 0x246 <LED+0x90>
     246:	00 00       	nop
     248:	9b b1       	in	r25, 0x0b	; 11
     24a:	92 23       	and	r25, r18
     24c:	9b b9       	out	0x0b, r25	; 11
     24e:	3f ef       	ldi	r19, 0xFF	; 255
     250:	41 ee       	ldi	r20, 0xE1	; 225
     252:	54 e0       	ldi	r21, 0x04	; 4
     254:	31 50       	subi	r19, 0x01	; 1
     256:	40 40       	sbci	r20, 0x00	; 0
     258:	50 40       	sbci	r21, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <LED+0x9e>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <LED+0xa8>
     25e:	00 00       	nop
     260:	9b b1       	in	r25, 0x0b	; 11
     262:	98 2b       	or	r25, r24
     264:	9b b9       	out	0x0b, r25	; 11
     266:	6f ef       	ldi	r22, 0xFF	; 255
     268:	71 ee       	ldi	r23, 0xE1	; 225
     26a:	34 e0       	ldi	r19, 0x04	; 4
     26c:	61 50       	subi	r22, 0x01	; 1
     26e:	70 40       	sbci	r23, 0x00	; 0
     270:	30 40       	sbci	r19, 0x00	; 0
     272:	e1 f7       	brne	.-8      	; 0x26c <LED+0xb6>
     274:	00 c0       	rjmp	.+0      	; 0x276 <LED+0xc0>
     276:	00 00       	nop
     278:	9b b1       	in	r25, 0x0b	; 11
     27a:	92 23       	and	r25, r18
     27c:	9b b9       	out	0x0b, r25	; 11
     27e:	4f ef       	ldi	r20, 0xFF	; 255
     280:	51 ee       	ldi	r21, 0xE1	; 225
     282:	64 e0       	ldi	r22, 0x04	; 4
     284:	41 50       	subi	r20, 0x01	; 1
     286:	50 40       	sbci	r21, 0x00	; 0
     288:	60 40       	sbci	r22, 0x00	; 0
     28a:	e1 f7       	brne	.-8      	; 0x284 <LED+0xce>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <LED+0xd8>
     28e:	00 00       	nop
     290:	9b b1       	in	r25, 0x0b	; 11
     292:	89 2b       	or	r24, r25
     294:	8b b9       	out	0x0b, r24	; 11
     296:	08 95       	ret
     298:	4b b1       	in	r20, 0x0b	; 11
     29a:	21 e0       	ldi	r18, 0x01	; 1
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	b9 01       	movw	r22, r18
     2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <LED+0xf0>
     2a2:	66 0f       	add	r22, r22
     2a4:	77 1f       	adc	r23, r23
     2a6:	8a 95       	dec	r24
     2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <LED+0xec>
     2aa:	cb 01       	movw	r24, r22
     2ac:	96 2f       	mov	r25, r22
     2ae:	90 95       	com	r25
     2b0:	94 23       	and	r25, r20
     2b2:	9b b9       	out	0x0b, r25	; 11
     2b4:	7f ef       	ldi	r23, 0xFF	; 255
     2b6:	29 e6       	ldi	r18, 0x69	; 105
     2b8:	38 e1       	ldi	r19, 0x18	; 24
     2ba:	71 50       	subi	r23, 0x01	; 1
     2bc:	20 40       	sbci	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <LED+0x104>
     2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <LED+0x10e>
     2c4:	00 00       	nop
     2c6:	9b b1       	in	r25, 0x0b	; 11
     2c8:	89 2b       	or	r24, r25
     2ca:	8b b9       	out	0x0b, r24	; 11
     2cc:	08 95       	ret
     2ce:	5f 98       	cbi	0x0b, 7	; 11
     2d0:	4f ef       	ldi	r20, 0xFF	; 255
     2d2:	51 ee       	ldi	r21, 0xE1	; 225
     2d4:	64 e0       	ldi	r22, 0x04	; 4
     2d6:	41 50       	subi	r20, 0x01	; 1
     2d8:	50 40       	sbci	r21, 0x00	; 0
     2da:	60 40       	sbci	r22, 0x00	; 0
     2dc:	e1 f7       	brne	.-8      	; 0x2d6 <LED+0x120>
     2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LED+0x12a>
     2e0:	00 00       	nop
     2e2:	5f 9a       	sbi	0x0b, 7	; 11
     2e4:	8f e1       	ldi	r24, 0x1F	; 31
     2e6:	9e e4       	ldi	r25, 0x4E	; 78
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LED+0x132>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LED+0x138>
     2ee:	00 00       	nop
     2f0:	5e 98       	cbi	0x0b, 6	; 11
     2f2:	9f ef       	ldi	r25, 0xFF	; 255
     2f4:	21 ee       	ldi	r18, 0xE1	; 225
     2f6:	34 e0       	ldi	r19, 0x04	; 4
     2f8:	91 50       	subi	r25, 0x01	; 1
     2fa:	20 40       	sbci	r18, 0x00	; 0
     2fc:	30 40       	sbci	r19, 0x00	; 0
     2fe:	e1 f7       	brne	.-8      	; 0x2f8 <LED+0x142>
     300:	00 c0       	rjmp	.+0      	; 0x302 <LED+0x14c>
     302:	00 00       	nop
     304:	5e 9a       	sbi	0x0b, 6	; 11
     306:	5f 98       	cbi	0x0b, 7	; 11
     308:	4f ef       	ldi	r20, 0xFF	; 255
     30a:	51 ee       	ldi	r21, 0xE1	; 225
     30c:	64 e0       	ldi	r22, 0x04	; 4
     30e:	41 50       	subi	r20, 0x01	; 1
     310:	50 40       	sbci	r21, 0x00	; 0
     312:	60 40       	sbci	r22, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <LED+0x158>
     316:	00 c0       	rjmp	.+0      	; 0x318 <LED+0x162>
     318:	00 00       	nop
     31a:	5f 9a       	sbi	0x0b, 7	; 11
     31c:	8f e1       	ldi	r24, 0x1F	; 31
     31e:	9e e4       	ldi	r25, 0x4E	; 78
     320:	01 97       	sbiw	r24, 0x01	; 1
     322:	f1 f7       	brne	.-4      	; 0x320 <LED+0x16a>
     324:	00 c0       	rjmp	.+0      	; 0x326 <LED+0x170>
     326:	00 00       	nop
     328:	5e 98       	cbi	0x0b, 6	; 11
     32a:	9f ef       	ldi	r25, 0xFF	; 255
     32c:	21 ee       	ldi	r18, 0xE1	; 225
     32e:	34 e0       	ldi	r19, 0x04	; 4
     330:	91 50       	subi	r25, 0x01	; 1
     332:	20 40       	sbci	r18, 0x00	; 0
     334:	30 40       	sbci	r19, 0x00	; 0
     336:	e1 f7       	brne	.-8      	; 0x330 <LED+0x17a>
     338:	00 c0       	rjmp	.+0      	; 0x33a <LED+0x184>
     33a:	00 00       	nop
     33c:	5e 9a       	sbi	0x0b, 6	; 11
     33e:	08 95       	ret

00000340 <init_tcnt2>:
	return;
}

void init_tcnt2()
{
	ASSR |=(0<<AS2);//Run of 32khz osc
     340:	e6 eb       	ldi	r30, 0xB6	; 182
     342:	f0 e0       	ldi	r31, 0x00	; 0
     344:	80 81       	ld	r24, Z
     346:	80 83       	st	Z, r24
	TIMSK2=0x00;  //reset TIMSK
     348:	e0 e7       	ldi	r30, 0x70	; 112
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	10 82       	st	Z, r1
	TIMSK2 |=(1<<TOIE2);//turns on comp match interupt
     34e:	80 81       	ld	r24, Z
     350:	81 60       	ori	r24, 0x01	; 1
     352:	80 83       	st	Z, r24
	TCCR2A=0;
     354:	10 92 b0 00 	sts	0x00B0, r1
	TCCR2B=(1<<CS21)|(1<<CS20);//Normal mode prescale 32 should give a 1ms count
     358:	83 e0       	ldi	r24, 0x03	; 3
     35a:	80 93 b1 00 	sts	0x00B1, r24
     35e:	08 95       	ret

00000360 <__vector_9>:
#define BUFSZ 128

volatile unsigned long count_t=0;

ISR(TIMER2_OVF_vect)
{
     360:	1f 92       	push	r1
     362:	0f 92       	push	r0
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	0f 92       	push	r0
     368:	11 24       	eor	r1, r1
     36a:	8f 93       	push	r24
     36c:	9f 93       	push	r25
     36e:	af 93       	push	r26
     370:	bf 93       	push	r27
	count_t++;
     372:	80 91 54 01 	lds	r24, 0x0154
     376:	90 91 55 01 	lds	r25, 0x0155
     37a:	a0 91 56 01 	lds	r26, 0x0156
     37e:	b0 91 57 01 	lds	r27, 0x0157
     382:	01 96       	adiw	r24, 0x01	; 1
     384:	a1 1d       	adc	r26, r1
     386:	b1 1d       	adc	r27, r1
     388:	80 93 54 01 	sts	0x0154, r24
     38c:	90 93 55 01 	sts	0x0155, r25
     390:	a0 93 56 01 	sts	0x0156, r26
     394:	b0 93 57 01 	sts	0x0157, r27
}
     398:	bf 91       	pop	r27
     39a:	af 91       	pop	r26
     39c:	9f 91       	pop	r25
     39e:	8f 91       	pop	r24
     3a0:	0f 90       	pop	r0
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	0f 90       	pop	r0
     3a6:	1f 90       	pop	r1
     3a8:	18 95       	reti

000003aa <main>:

int main(void)
{
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	cd b7       	in	r28, 0x3d	; 61
     3b0:	de b7       	in	r29, 0x3e	; 62
     3b2:	cf 59       	subi	r28, 0x9F	; 159
     3b4:	d1 09       	sbc	r29, r1
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	f8 94       	cli
     3ba:	de bf       	out	0x3e, r29	; 62
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c0:	8f e1       	ldi	r24, 0x1F	; 31
     3c2:	9e e4       	ldi	r25, 0x4E	; 78
     3c4:	01 97       	sbiw	r24, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <main+0x1a>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <main+0x20>
     3ca:	00 00       	nop
	float gx,gy,gz;
	float mx,my,mz;
	short data[3];
	char buf[BUFSZ];
	
	init_Feedback();
     3cc:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init_Feedback>
	init_SPI();
     3d0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <init_SPI>
	uart_init();
     3d4:	0e 94 b8 06 	call	0xd70	; 0xd70 <uart_init>
	init_tcnt2();
     3d8:	0e 94 a0 01 	call	0x340	; 0x340 <init_tcnt2>
     3dc:	af e1       	ldi	r26, 0x1F	; 31
     3de:	be e4       	ldi	r27, 0x4E	; 78
     3e0:	11 97       	sbiw	r26, 0x01	; 1
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <main+0x36>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <main+0x3c>
     3e6:	00 00       	nop
	_delay_ms(10);
	//mpu_init(NULL);
	SPIinit_MPU(sensor1_cs, MPU9250_FULL_SCALE_4G, MPU9250_GYRO_FULL_SCALE_500DPS);
     3e8:	48 e0       	ldi	r20, 0x08	; 8
     3ea:	68 e0       	ldi	r22, 0x08	; 8
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	0e 94 7d 04 	call	0x8fa	; 0x8fa <SPIinit_MPU>
	sei();
     3f2:	78 94       	sei
	
	//Initializations Successful
	LED(G_LED, Pulse_3);
     3f4:	61 e0       	ldi	r22, 0x01	; 1
     3f6:	86 e0       	ldi	r24, 0x06	; 6
     3f8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LED>
		SPIgetMag(data, sensor1_cs);
		mx = (float)data[0]*MPU9250M_4800uT;
		my = (float)data[1]*MPU9250M_4800uT;
		mz = (float)data[2]*MPU9250M_4800uT;
		
		memset(buf, 0, BUFSZ);
     3fc:	4e 01       	movw	r8, r28
     3fe:	b7 e0       	ldi	r27, 0x07	; 7
     400:	8b 0e       	add	r8, r27
     402:	91 1c       	adc	r9, r1
     404:	68 94       	set
     406:	bb 24       	eor	r11, r11
     408:	b7 f8       	bld	r11, 7
	//Initializations Successful
	LED(G_LED, Pulse_3);
	
    while (1) 
    {
		if(count_t>20000)
     40a:	80 91 54 01 	lds	r24, 0x0154
     40e:	90 91 55 01 	lds	r25, 0x0155
     412:	a0 91 56 01 	lds	r26, 0x0156
     416:	b0 91 57 01 	lds	r27, 0x0157
     41a:	81 32       	cpi	r24, 0x21	; 33
     41c:	9e 44       	sbci	r25, 0x4E	; 78
     41e:	a1 05       	cpc	r26, r1
     420:	b1 05       	cpc	r27, r1
     422:	40 f0       	brcs	.+16     	; 0x434 <main+0x8a>
			count_t=0;
     424:	10 92 54 01 	sts	0x0154, r1
     428:	10 92 55 01 	sts	0x0155, r1
     42c:	10 92 56 01 	sts	0x0156, r1
     430:	10 92 57 01 	sts	0x0157, r1
		//mpu_get_accel_reg(data, NULL);
		//uart_puts("\nAccel:::");
		SPIgetAccel(data, sensor1_cs);
     434:	62 e0       	ldi	r22, 0x02	; 2
     436:	ce 01       	movw	r24, r28
     438:	01 96       	adiw	r24, 0x01	; 1
     43a:	0e 94 3b 05 	call	0xa76	; 0xa76 <SPIgetAccel>
		ax = (float)data[0]*MPU9250A_4g_scale;
     43e:	69 81       	ldd	r22, Y+1	; 0x01
     440:	7a 81       	ldd	r23, Y+2	; 0x02
     442:	07 2e       	mov	r0, r23
     444:	00 0c       	add	r0, r0
     446:	88 0b       	sbc	r24, r24
     448:	99 0b       	sbc	r25, r25
     44a:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	40 e0       	ldi	r20, 0x00	; 0
     454:	59 e3       	ldi	r21, 0x39	; 57
     456:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     45a:	c9 57       	subi	r28, 0x79	; 121
     45c:	df 4f       	sbci	r29, 0xFF	; 255
     45e:	68 83       	st	Y, r22
     460:	c7 58       	subi	r28, 0x87	; 135
     462:	d0 40       	sbci	r29, 0x00	; 0
     464:	c8 57       	subi	r28, 0x78	; 120
     466:	df 4f       	sbci	r29, 0xFF	; 255
     468:	78 83       	st	Y, r23
     46a:	c8 58       	subi	r28, 0x88	; 136
     46c:	d0 40       	sbci	r29, 0x00	; 0
     46e:	c7 57       	subi	r28, 0x77	; 119
     470:	df 4f       	sbci	r29, 0xFF	; 255
     472:	88 83       	st	Y, r24
     474:	c9 58       	subi	r28, 0x89	; 137
     476:	d0 40       	sbci	r29, 0x00	; 0
     478:	e9 2e       	mov	r14, r25
		ay = (float)data[1]*MPU9250A_4g_scale;
     47a:	6b 81       	ldd	r22, Y+3	; 0x03
     47c:	7c 81       	ldd	r23, Y+4	; 0x04
     47e:	07 2e       	mov	r0, r23
     480:	00 0c       	add	r0, r0
     482:	88 0b       	sbc	r24, r24
     484:	99 0b       	sbc	r25, r25
     486:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	59 e3       	ldi	r21, 0x39	; 57
     492:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     496:	d6 2e       	mov	r13, r22
     498:	c7 2e       	mov	r12, r23
     49a:	a8 2e       	mov	r10, r24
     49c:	79 2e       	mov	r7, r25
		az = (float)data[2]*MPU9250A_4g_scale;
     49e:	6d 81       	ldd	r22, Y+5	; 0x05
     4a0:	7e 81       	ldd	r23, Y+6	; 0x06
     4a2:	07 2e       	mov	r0, r23
     4a4:	00 0c       	add	r0, r0
     4a6:	88 0b       	sbc	r24, r24
     4a8:	99 0b       	sbc	r25, r25
     4aa:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	40 e0       	ldi	r20, 0x00	; 0
     4b4:	59 e3       	ldi	r21, 0x39	; 57
     4b6:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     4ba:	66 2e       	mov	r6, r22
     4bc:	57 2e       	mov	r5, r23
     4be:	48 2e       	mov	r4, r24
     4c0:	39 2e       	mov	r3, r25
		
		SPIgetGyro(data, sensor1_cs);
     4c2:	62 e0       	ldi	r22, 0x02	; 2
     4c4:	ce 01       	movw	r24, r28
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	0e 94 71 05 	call	0xae2	; 0xae2 <SPIgetGyro>
		gx = (float)data[0]*MPU9250G_500dps_scale;
     4cc:	69 81       	ldd	r22, Y+1	; 0x01
     4ce:	7a 81       	ldd	r23, Y+2	; 0x02
     4d0:	07 2e       	mov	r0, r23
     4d2:	00 0c       	add	r0, r0
     4d4:	88 0b       	sbc	r24, r24
     4d6:	99 0b       	sbc	r25, r25
     4d8:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     4dc:	2d e2       	ldi	r18, 0x2D	; 45
     4de:	33 e2       	ldi	r19, 0x23	; 35
     4e0:	4a e7       	ldi	r20, 0x7A	; 122
     4e2:	5c e3       	ldi	r21, 0x3C	; 60
     4e4:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     4e8:	c6 57       	subi	r28, 0x76	; 118
     4ea:	df 4f       	sbci	r29, 0xFF	; 255
     4ec:	68 83       	st	Y, r22
     4ee:	ca 58       	subi	r28, 0x8A	; 138
     4f0:	d0 40       	sbci	r29, 0x00	; 0
     4f2:	c5 57       	subi	r28, 0x75	; 117
     4f4:	df 4f       	sbci	r29, 0xFF	; 255
     4f6:	78 83       	st	Y, r23
     4f8:	cb 58       	subi	r28, 0x8B	; 139
     4fa:	d0 40       	sbci	r29, 0x00	; 0
     4fc:	c4 57       	subi	r28, 0x74	; 116
     4fe:	df 4f       	sbci	r29, 0xFF	; 255
     500:	88 83       	st	Y, r24
     502:	cc 58       	subi	r28, 0x8C	; 140
     504:	d0 40       	sbci	r29, 0x00	; 0
     506:	c3 57       	subi	r28, 0x73	; 115
     508:	df 4f       	sbci	r29, 0xFF	; 255
     50a:	98 83       	st	Y, r25
     50c:	cd 58       	subi	r28, 0x8D	; 141
     50e:	d0 40       	sbci	r29, 0x00	; 0
		gy = (float)data[1]*MPU9250G_500dps_scale;
     510:	6b 81       	ldd	r22, Y+3	; 0x03
     512:	7c 81       	ldd	r23, Y+4	; 0x04
     514:	07 2e       	mov	r0, r23
     516:	00 0c       	add	r0, r0
     518:	88 0b       	sbc	r24, r24
     51a:	99 0b       	sbc	r25, r25
     51c:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     520:	2d e2       	ldi	r18, 0x2D	; 45
     522:	33 e2       	ldi	r19, 0x23	; 35
     524:	4a e7       	ldi	r20, 0x7A	; 122
     526:	5c e3       	ldi	r21, 0x3C	; 60
     528:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     52c:	c2 57       	subi	r28, 0x72	; 114
     52e:	df 4f       	sbci	r29, 0xFF	; 255
     530:	68 83       	st	Y, r22
     532:	ce 58       	subi	r28, 0x8E	; 142
     534:	d0 40       	sbci	r29, 0x00	; 0
     536:	c1 57       	subi	r28, 0x71	; 113
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	78 83       	st	Y, r23
     53c:	cf 58       	subi	r28, 0x8F	; 143
     53e:	d0 40       	sbci	r29, 0x00	; 0
     540:	c0 57       	subi	r28, 0x70	; 112
     542:	df 4f       	sbci	r29, 0xFF	; 255
     544:	88 83       	st	Y, r24
     546:	c0 59       	subi	r28, 0x90	; 144
     548:	d0 40       	sbci	r29, 0x00	; 0
     54a:	cf 56       	subi	r28, 0x6F	; 111
     54c:	df 4f       	sbci	r29, 0xFF	; 255
     54e:	98 83       	st	Y, r25
     550:	c1 59       	subi	r28, 0x91	; 145
     552:	d0 40       	sbci	r29, 0x00	; 0
		gz = (float)data[2]*MPU9250G_500dps_scale;
     554:	6d 81       	ldd	r22, Y+5	; 0x05
     556:	7e 81       	ldd	r23, Y+6	; 0x06
     558:	07 2e       	mov	r0, r23
     55a:	00 0c       	add	r0, r0
     55c:	88 0b       	sbc	r24, r24
     55e:	99 0b       	sbc	r25, r25
     560:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     564:	2d e2       	ldi	r18, 0x2D	; 45
     566:	33 e2       	ldi	r19, 0x23	; 35
     568:	4a e7       	ldi	r20, 0x7A	; 122
     56a:	5c e3       	ldi	r21, 0x3C	; 60
     56c:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     570:	ce 56       	subi	r28, 0x6E	; 110
     572:	df 4f       	sbci	r29, 0xFF	; 255
     574:	68 83       	st	Y, r22
     576:	c2 59       	subi	r28, 0x92	; 146
     578:	d0 40       	sbci	r29, 0x00	; 0
     57a:	cd 56       	subi	r28, 0x6D	; 109
     57c:	df 4f       	sbci	r29, 0xFF	; 255
     57e:	78 83       	st	Y, r23
     580:	c3 59       	subi	r28, 0x93	; 147
     582:	d0 40       	sbci	r29, 0x00	; 0
     584:	cc 56       	subi	r28, 0x6C	; 108
     586:	df 4f       	sbci	r29, 0xFF	; 255
     588:	88 83       	st	Y, r24
     58a:	c4 59       	subi	r28, 0x94	; 148
     58c:	d0 40       	sbci	r29, 0x00	; 0
     58e:	cb 56       	subi	r28, 0x6B	; 107
     590:	df 4f       	sbci	r29, 0xFF	; 255
     592:	98 83       	st	Y, r25
     594:	c5 59       	subi	r28, 0x95	; 149
     596:	d0 40       	sbci	r29, 0x00	; 0
		
		SPIgetMag(data, sensor1_cs);
     598:	62 e0       	ldi	r22, 0x02	; 2
     59a:	ce 01       	movw	r24, r28
     59c:	01 96       	adiw	r24, 0x01	; 1
     59e:	0e 94 a7 05 	call	0xb4e	; 0xb4e <SPIgetMag>
		mx = (float)data[0]*MPU9250M_4800uT;
     5a2:	69 81       	ldd	r22, Y+1	; 0x01
     5a4:	7a 81       	ldd	r23, Y+2	; 0x02
     5a6:	07 2e       	mov	r0, r23
     5a8:	00 0c       	add	r0, r0
     5aa:	88 0b       	sbc	r24, r24
     5ac:	99 0b       	sbc	r25, r25
     5ae:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     5b2:	2a e9       	ldi	r18, 0x9A	; 154
     5b4:	39 e9       	ldi	r19, 0x99	; 153
     5b6:	49 e1       	ldi	r20, 0x19	; 25
     5b8:	5f e3       	ldi	r21, 0x3F	; 63
     5ba:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     5be:	ca 56       	subi	r28, 0x6A	; 106
     5c0:	df 4f       	sbci	r29, 0xFF	; 255
     5c2:	68 83       	st	Y, r22
     5c4:	c6 59       	subi	r28, 0x96	; 150
     5c6:	d0 40       	sbci	r29, 0x00	; 0
     5c8:	c9 56       	subi	r28, 0x69	; 105
     5ca:	df 4f       	sbci	r29, 0xFF	; 255
     5cc:	78 83       	st	Y, r23
     5ce:	c7 59       	subi	r28, 0x97	; 151
     5d0:	d0 40       	sbci	r29, 0x00	; 0
     5d2:	c8 56       	subi	r28, 0x68	; 104
     5d4:	df 4f       	sbci	r29, 0xFF	; 255
     5d6:	88 83       	st	Y, r24
     5d8:	c8 59       	subi	r28, 0x98	; 152
     5da:	d0 40       	sbci	r29, 0x00	; 0
     5dc:	c7 56       	subi	r28, 0x67	; 103
     5de:	df 4f       	sbci	r29, 0xFF	; 255
     5e0:	98 83       	st	Y, r25
     5e2:	c9 59       	subi	r28, 0x99	; 153
     5e4:	d0 40       	sbci	r29, 0x00	; 0
		my = (float)data[1]*MPU9250M_4800uT;
     5e6:	6b 81       	ldd	r22, Y+3	; 0x03
     5e8:	7c 81       	ldd	r23, Y+4	; 0x04
     5ea:	07 2e       	mov	r0, r23
     5ec:	00 0c       	add	r0, r0
     5ee:	88 0b       	sbc	r24, r24
     5f0:	99 0b       	sbc	r25, r25
     5f2:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     5f6:	2a e9       	ldi	r18, 0x9A	; 154
     5f8:	39 e9       	ldi	r19, 0x99	; 153
     5fa:	49 e1       	ldi	r20, 0x19	; 25
     5fc:	5f e3       	ldi	r21, 0x3F	; 63
     5fe:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     602:	c6 56       	subi	r28, 0x66	; 102
     604:	df 4f       	sbci	r29, 0xFF	; 255
     606:	68 83       	st	Y, r22
     608:	ca 59       	subi	r28, 0x9A	; 154
     60a:	d0 40       	sbci	r29, 0x00	; 0
     60c:	c5 56       	subi	r28, 0x65	; 101
     60e:	df 4f       	sbci	r29, 0xFF	; 255
     610:	78 83       	st	Y, r23
     612:	cb 59       	subi	r28, 0x9B	; 155
     614:	d0 40       	sbci	r29, 0x00	; 0
     616:	28 2e       	mov	r2, r24
     618:	c4 56       	subi	r28, 0x64	; 100
     61a:	df 4f       	sbci	r29, 0xFF	; 255
     61c:	98 83       	st	Y, r25
     61e:	cc 59       	subi	r28, 0x9C	; 156
     620:	d0 40       	sbci	r29, 0x00	; 0
		mz = (float)data[2]*MPU9250M_4800uT;
     622:	6d 81       	ldd	r22, Y+5	; 0x05
     624:	7e 81       	ldd	r23, Y+6	; 0x06
     626:	07 2e       	mov	r0, r23
     628:	00 0c       	add	r0, r0
     62a:	88 0b       	sbc	r24, r24
     62c:	99 0b       	sbc	r25, r25
     62e:	0e 94 ca 06 	call	0xd94	; 0xd94 <__floatsisf>
     632:	2a e9       	ldi	r18, 0x9A	; 154
     634:	39 e9       	ldi	r19, 0x99	; 153
     636:	49 e1       	ldi	r20, 0x19	; 25
     638:	5f e3       	ldi	r21, 0x3F	; 63
     63a:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3>
     63e:	c3 56       	subi	r28, 0x63	; 99
     640:	df 4f       	sbci	r29, 0xFF	; 255
     642:	68 83       	st	Y, r22
     644:	cd 59       	subi	r28, 0x9D	; 157
     646:	d0 40       	sbci	r29, 0x00	; 0
     648:	c2 56       	subi	r28, 0x62	; 98
     64a:	df 4f       	sbci	r29, 0xFF	; 255
     64c:	78 83       	st	Y, r23
     64e:	ce 59       	subi	r28, 0x9E	; 158
     650:	d0 40       	sbci	r29, 0x00	; 0
     652:	c1 56       	subi	r28, 0x61	; 97
     654:	df 4f       	sbci	r29, 0xFF	; 255
     656:	88 83       	st	Y, r24
     658:	cf 59       	subi	r28, 0x9F	; 159
     65a:	d0 40       	sbci	r29, 0x00	; 0
     65c:	f9 2e       	mov	r15, r25
		
		memset(buf, 0, BUFSZ);
     65e:	d4 01       	movw	r26, r8
     660:	eb 2d       	mov	r30, r11
     662:	1d 92       	st	X+, r1
     664:	ea 95       	dec	r30
     666:	e9 f7       	brne	.-6      	; 0x662 <main+0x2b8>
		snprintf(buf, BUFSZ, "*HX%luY%f,X%luY%f,X%luY%f*\n", count_t, ax, count_t, ay, count_t, az);
     668:	00 91 54 01 	lds	r16, 0x0154
     66c:	10 91 55 01 	lds	r17, 0x0155
     670:	20 91 56 01 	lds	r18, 0x0156
     674:	30 91 57 01 	lds	r19, 0x0157
     678:	40 91 54 01 	lds	r20, 0x0154
     67c:	50 91 55 01 	lds	r21, 0x0155
     680:	60 91 56 01 	lds	r22, 0x0156
     684:	70 91 57 01 	lds	r23, 0x0157
     688:	80 91 54 01 	lds	r24, 0x0154
     68c:	90 91 55 01 	lds	r25, 0x0155
     690:	a0 91 56 01 	lds	r26, 0x0156
     694:	b0 91 57 01 	lds	r27, 0x0157
     698:	3f 92       	push	r3
     69a:	4f 92       	push	r4
     69c:	5f 92       	push	r5
     69e:	6f 92       	push	r6
     6a0:	3f 93       	push	r19
     6a2:	2f 93       	push	r18
     6a4:	1f 93       	push	r17
     6a6:	0f 93       	push	r16
     6a8:	7f 92       	push	r7
     6aa:	af 92       	push	r10
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	7f 93       	push	r23
     6b2:	6f 93       	push	r22
     6b4:	5f 93       	push	r21
     6b6:	4f 93       	push	r20
     6b8:	ef 92       	push	r14
     6ba:	c7 57       	subi	r28, 0x77	; 119
     6bc:	df 4f       	sbci	r29, 0xFF	; 255
     6be:	f8 81       	ld	r31, Y
     6c0:	c9 58       	subi	r28, 0x89	; 137
     6c2:	d0 40       	sbci	r29, 0x00	; 0
     6c4:	ff 93       	push	r31
     6c6:	c8 57       	subi	r28, 0x78	; 120
     6c8:	df 4f       	sbci	r29, 0xFF	; 255
     6ca:	28 81       	ld	r18, Y
     6cc:	c8 58       	subi	r28, 0x88	; 136
     6ce:	d0 40       	sbci	r29, 0x00	; 0
     6d0:	2f 93       	push	r18
     6d2:	c9 57       	subi	r28, 0x79	; 121
     6d4:	df 4f       	sbci	r29, 0xFF	; 255
     6d6:	e8 81       	ld	r30, Y
     6d8:	c7 58       	subi	r28, 0x87	; 135
     6da:	d0 40       	sbci	r29, 0x00	; 0
     6dc:	ef 93       	push	r30
     6de:	bf 93       	push	r27
     6e0:	af 93       	push	r26
     6e2:	9f 93       	push	r25
     6e4:	8f 93       	push	r24
     6e6:	a0 e0       	ldi	r26, 0x00	; 0
     6e8:	b1 e0       	ldi	r27, 0x01	; 1
     6ea:	bf 93       	push	r27
     6ec:	af 93       	push	r26
     6ee:	1f 92       	push	r1
     6f0:	bf 92       	push	r11
     6f2:	9f 92       	push	r9
     6f4:	8f 92       	push	r8
     6f6:	0e 94 9c 0c 	call	0x1938	; 0x1938 <snprintf>
		uart_puts(buf);
     6fa:	c4 01       	movw	r24, r8
     6fc:	0e 94 a9 06 	call	0xd52	; 0xd52 <uart_puts>
		
		memset(buf, 0, BUFSZ);
     700:	d4 01       	movw	r26, r8
     702:	eb 2d       	mov	r30, r11
     704:	1d 92       	st	X+, r1
     706:	ea 95       	dec	r30
     708:	e9 f7       	brne	.-6      	; 0x704 <main+0x35a>
		snprintf(buf, BUFSZ, "*JX%luY%f,X%luY%f,X%luY%f*\n", count_t, gx, count_t, gy, count_t, gz);
     70a:	40 90 54 01 	lds	r4, 0x0154
     70e:	50 90 55 01 	lds	r5, 0x0155
     712:	60 90 56 01 	lds	r6, 0x0156
     716:	70 90 57 01 	lds	r7, 0x0157
     71a:	40 91 54 01 	lds	r20, 0x0154
     71e:	50 91 55 01 	lds	r21, 0x0155
     722:	60 91 56 01 	lds	r22, 0x0156
     726:	70 91 57 01 	lds	r23, 0x0157
     72a:	80 91 54 01 	lds	r24, 0x0154
     72e:	90 91 55 01 	lds	r25, 0x0155
     732:	a0 91 56 01 	lds	r26, 0x0156
     736:	b0 91 57 01 	lds	r27, 0x0157
     73a:	cb 56       	subi	r28, 0x6B	; 107
     73c:	df 4f       	sbci	r29, 0xFF	; 255
     73e:	f8 81       	ld	r31, Y
     740:	c5 59       	subi	r28, 0x95	; 149
     742:	d0 40       	sbci	r29, 0x00	; 0
     744:	ff 93       	push	r31
     746:	cc 56       	subi	r28, 0x6C	; 108
     748:	df 4f       	sbci	r29, 0xFF	; 255
     74a:	28 81       	ld	r18, Y
     74c:	c4 59       	subi	r28, 0x94	; 148
     74e:	d0 40       	sbci	r29, 0x00	; 0
     750:	2f 93       	push	r18
     752:	cd 56       	subi	r28, 0x6D	; 109
     754:	df 4f       	sbci	r29, 0xFF	; 255
     756:	e8 81       	ld	r30, Y
     758:	c3 59       	subi	r28, 0x93	; 147
     75a:	d0 40       	sbci	r29, 0x00	; 0
     75c:	ef 93       	push	r30
     75e:	ce 56       	subi	r28, 0x6E	; 110
     760:	df 4f       	sbci	r29, 0xFF	; 255
     762:	f8 81       	ld	r31, Y
     764:	c2 59       	subi	r28, 0x92	; 146
     766:	d0 40       	sbci	r29, 0x00	; 0
     768:	ff 93       	push	r31
     76a:	7f 92       	push	r7
     76c:	6f 92       	push	r6
     76e:	5f 92       	push	r5
     770:	4f 92       	push	r4
     772:	cf 56       	subi	r28, 0x6F	; 111
     774:	df 4f       	sbci	r29, 0xFF	; 255
     776:	28 81       	ld	r18, Y
     778:	c1 59       	subi	r28, 0x91	; 145
     77a:	d0 40       	sbci	r29, 0x00	; 0
     77c:	2f 93       	push	r18
     77e:	c0 57       	subi	r28, 0x70	; 112
     780:	df 4f       	sbci	r29, 0xFF	; 255
     782:	e8 81       	ld	r30, Y
     784:	c0 59       	subi	r28, 0x90	; 144
     786:	d0 40       	sbci	r29, 0x00	; 0
     788:	ef 93       	push	r30
     78a:	c1 57       	subi	r28, 0x71	; 113
     78c:	df 4f       	sbci	r29, 0xFF	; 255
     78e:	f8 81       	ld	r31, Y
     790:	cf 58       	subi	r28, 0x8F	; 143
     792:	d0 40       	sbci	r29, 0x00	; 0
     794:	ff 93       	push	r31
     796:	c2 57       	subi	r28, 0x72	; 114
     798:	df 4f       	sbci	r29, 0xFF	; 255
     79a:	28 81       	ld	r18, Y
     79c:	ce 58       	subi	r28, 0x8E	; 142
     79e:	d0 40       	sbci	r29, 0x00	; 0
     7a0:	2f 93       	push	r18
     7a2:	7f 93       	push	r23
     7a4:	6f 93       	push	r22
     7a6:	5f 93       	push	r21
     7a8:	4f 93       	push	r20
     7aa:	c3 57       	subi	r28, 0x73	; 115
     7ac:	df 4f       	sbci	r29, 0xFF	; 255
     7ae:	e8 81       	ld	r30, Y
     7b0:	cd 58       	subi	r28, 0x8D	; 141
     7b2:	d0 40       	sbci	r29, 0x00	; 0
     7b4:	ef 93       	push	r30
     7b6:	c4 57       	subi	r28, 0x74	; 116
     7b8:	df 4f       	sbci	r29, 0xFF	; 255
     7ba:	f8 81       	ld	r31, Y
     7bc:	cc 58       	subi	r28, 0x8C	; 140
     7be:	d0 40       	sbci	r29, 0x00	; 0
     7c0:	ff 93       	push	r31
     7c2:	c5 57       	subi	r28, 0x75	; 117
     7c4:	df 4f       	sbci	r29, 0xFF	; 255
     7c6:	28 81       	ld	r18, Y
     7c8:	cb 58       	subi	r28, 0x8B	; 139
     7ca:	d0 40       	sbci	r29, 0x00	; 0
     7cc:	2f 93       	push	r18
     7ce:	c6 57       	subi	r28, 0x76	; 118
     7d0:	df 4f       	sbci	r29, 0xFF	; 255
     7d2:	e8 81       	ld	r30, Y
     7d4:	ca 58       	subi	r28, 0x8A	; 138
     7d6:	d0 40       	sbci	r29, 0x00	; 0
     7d8:	ef 93       	push	r30
     7da:	bf 93       	push	r27
     7dc:	af 93       	push	r26
     7de:	9f 93       	push	r25
     7e0:	8f 93       	push	r24
     7e2:	ac e1       	ldi	r26, 0x1C	; 28
     7e4:	b1 e0       	ldi	r27, 0x01	; 1
     7e6:	bf 93       	push	r27
     7e8:	af 93       	push	r26
     7ea:	1f 92       	push	r1
     7ec:	bf 92       	push	r11
     7ee:	9f 92       	push	r9
     7f0:	8f 92       	push	r8
     7f2:	0e 94 9c 0c 	call	0x1938	; 0x1938 <snprintf>
		uart_puts(buf);
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	f8 94       	cli
     7fa:	de bf       	out	0x3e, r29	; 62
     7fc:	0f be       	out	0x3f, r0	; 63
     7fe:	cd bf       	out	0x3d, r28	; 61
     800:	c4 01       	movw	r24, r8
     802:	0e 94 a9 06 	call	0xd52	; 0xd52 <uart_puts>
		
		memset(buf, 0, BUFSZ);
     806:	d4 01       	movw	r26, r8
     808:	eb 2d       	mov	r30, r11
     80a:	1d 92       	st	X+, r1
     80c:	ea 95       	dec	r30
     80e:	e9 f7       	brne	.-6      	; 0x80a <main+0x460>
		snprintf(buf, BUFSZ, "*KX%luY%f,X%luY%f,X%luY%f*\n", count_t, mx, count_t, my, count_t, mz);
     810:	40 90 54 01 	lds	r4, 0x0154
     814:	50 90 55 01 	lds	r5, 0x0155
     818:	60 90 56 01 	lds	r6, 0x0156
     81c:	70 90 57 01 	lds	r7, 0x0157
     820:	40 91 54 01 	lds	r20, 0x0154
     824:	50 91 55 01 	lds	r21, 0x0155
     828:	60 91 56 01 	lds	r22, 0x0156
     82c:	70 91 57 01 	lds	r23, 0x0157
     830:	80 91 54 01 	lds	r24, 0x0154
     834:	90 91 55 01 	lds	r25, 0x0155
     838:	a0 91 56 01 	lds	r26, 0x0156
     83c:	b0 91 57 01 	lds	r27, 0x0157
     840:	ff 92       	push	r15
     842:	c1 56       	subi	r28, 0x61	; 97
     844:	df 4f       	sbci	r29, 0xFF	; 255
     846:	f8 81       	ld	r31, Y
     848:	cf 59       	subi	r28, 0x9F	; 159
     84a:	d0 40       	sbci	r29, 0x00	; 0
     84c:	ff 93       	push	r31
     84e:	c2 56       	subi	r28, 0x62	; 98
     850:	df 4f       	sbci	r29, 0xFF	; 255
     852:	28 81       	ld	r18, Y
     854:	ce 59       	subi	r28, 0x9E	; 158
     856:	d0 40       	sbci	r29, 0x00	; 0
     858:	2f 93       	push	r18
     85a:	c3 56       	subi	r28, 0x63	; 99
     85c:	df 4f       	sbci	r29, 0xFF	; 255
     85e:	e8 81       	ld	r30, Y
     860:	cd 59       	subi	r28, 0x9D	; 157
     862:	d0 40       	sbci	r29, 0x00	; 0
     864:	ef 93       	push	r30
     866:	7f 92       	push	r7
     868:	6f 92       	push	r6
     86a:	5f 92       	push	r5
     86c:	4f 92       	push	r4
     86e:	c4 56       	subi	r28, 0x64	; 100
     870:	df 4f       	sbci	r29, 0xFF	; 255
     872:	f8 81       	ld	r31, Y
     874:	cc 59       	subi	r28, 0x9C	; 156
     876:	d0 40       	sbci	r29, 0x00	; 0
     878:	ff 93       	push	r31
     87a:	2f 92       	push	r2
     87c:	c5 56       	subi	r28, 0x65	; 101
     87e:	df 4f       	sbci	r29, 0xFF	; 255
     880:	28 81       	ld	r18, Y
     882:	cb 59       	subi	r28, 0x9B	; 155
     884:	d0 40       	sbci	r29, 0x00	; 0
     886:	2f 93       	push	r18
     888:	c6 56       	subi	r28, 0x66	; 102
     88a:	df 4f       	sbci	r29, 0xFF	; 255
     88c:	e8 81       	ld	r30, Y
     88e:	ca 59       	subi	r28, 0x9A	; 154
     890:	d0 40       	sbci	r29, 0x00	; 0
     892:	ef 93       	push	r30
     894:	7f 93       	push	r23
     896:	6f 93       	push	r22
     898:	5f 93       	push	r21
     89a:	4f 93       	push	r20
     89c:	c7 56       	subi	r28, 0x67	; 103
     89e:	df 4f       	sbci	r29, 0xFF	; 255
     8a0:	f8 81       	ld	r31, Y
     8a2:	c9 59       	subi	r28, 0x99	; 153
     8a4:	d0 40       	sbci	r29, 0x00	; 0
     8a6:	ff 93       	push	r31
     8a8:	c8 56       	subi	r28, 0x68	; 104
     8aa:	df 4f       	sbci	r29, 0xFF	; 255
     8ac:	28 81       	ld	r18, Y
     8ae:	c8 59       	subi	r28, 0x98	; 152
     8b0:	d0 40       	sbci	r29, 0x00	; 0
     8b2:	2f 93       	push	r18
     8b4:	c9 56       	subi	r28, 0x69	; 105
     8b6:	df 4f       	sbci	r29, 0xFF	; 255
     8b8:	e8 81       	ld	r30, Y
     8ba:	c7 59       	subi	r28, 0x97	; 151
     8bc:	d0 40       	sbci	r29, 0x00	; 0
     8be:	ef 93       	push	r30
     8c0:	ca 56       	subi	r28, 0x6A	; 106
     8c2:	df 4f       	sbci	r29, 0xFF	; 255
     8c4:	f8 81       	ld	r31, Y
     8c6:	c6 59       	subi	r28, 0x96	; 150
     8c8:	d0 40       	sbci	r29, 0x00	; 0
     8ca:	ff 93       	push	r31
     8cc:	bf 93       	push	r27
     8ce:	af 93       	push	r26
     8d0:	9f 93       	push	r25
     8d2:	8f 93       	push	r24
     8d4:	a8 e3       	ldi	r26, 0x38	; 56
     8d6:	b1 e0       	ldi	r27, 0x01	; 1
     8d8:	bf 93       	push	r27
     8da:	af 93       	push	r26
     8dc:	1f 92       	push	r1
     8de:	bf 92       	push	r11
     8e0:	9f 92       	push	r9
     8e2:	8f 92       	push	r8
     8e4:	0e 94 9c 0c 	call	0x1938	; 0x1938 <snprintf>
		uart_puts(buf);
     8e8:	c4 01       	movw	r24, r8
     8ea:	0e 94 a9 06 	call	0xd52	; 0xd52 <uart_puts>
		
		uart_puts("\n\n\n\n");
		_delay_ms(1000);
		*/
		
    }
     8ee:	0f b6       	in	r0, 0x3f	; 63
     8f0:	f8 94       	cli
     8f2:	de bf       	out	0x3e, r29	; 62
     8f4:	0f be       	out	0x3f, r0	; 63
     8f6:	cd bf       	out	0x3d, r28	; 61
     8f8:	88 cd       	rjmp	.-1264   	; 0x40a <main+0x60>

000008fa <SPIinit_MPU>:

int16_t AG_SelfTest[6]; //Holds the self test results for accelerometer/Gyro
int16_t magCalib[3]={0,0,0}, magBias[3]={0,0,0};
int16_t accBias[3]={0,0,0}, gyroBias[3]={0,0,0};

void SPIinit_MPU(unsigned char sel, unsigned char A_range, unsigned char G_range){
     8fa:	ef 92       	push	r14
     8fc:	ff 92       	push	r15
     8fe:	0f 93       	push	r16
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	00 d0       	rcall	.+0      	; 0x908 <__stack+0x9>
     908:	00 d0       	rcall	.+0      	; 0x90a <__stack+0xb>
     90a:	00 d0       	rcall	.+0      	; 0x90c <__stack+0xd>
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	18 2f       	mov	r17, r24
     912:	f6 2e       	mov	r15, r22
     914:	e4 2e       	mov	r14, r20
	unsigned char data[6];
	//uint8_t i;
	
	data[0] = 0x80;
     916:	80 e8       	ldi	r24, 0x80	; 128
     918:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_PWR_MGMT_1, 1, data);
     91a:	9e 01       	movw	r18, r28
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	41 e0       	ldi	r20, 0x01	; 1
     922:	6b e6       	ldi	r22, 0x6B	; 107
     924:	81 2f       	mov	r24, r17
     926:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x01;
     92a:	01 e0       	ldi	r16, 0x01	; 1
     92c:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_PWR_MGMT_1, 1, data);
     92e:	9e 01       	movw	r18, r28
     930:	2f 5f       	subi	r18, 0xFF	; 255
     932:	3f 4f       	sbci	r19, 0xFF	; 255
     934:	41 e0       	ldi	r20, 0x01	; 1
     936:	6b e6       	ldi	r22, 0x6B	; 107
     938:	81 2f       	mov	r24, r17
     93a:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x00;
     93e:	19 82       	std	Y+1, r1	; 0x01
	spi_writeRegs(sel, MPU9250_PWR_MGMT_2, 1, data);
     940:	9e 01       	movw	r18, r28
     942:	2f 5f       	subi	r18, 0xFF	; 255
     944:	3f 4f       	sbci	r19, 0xFF	; 255
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	6c e6       	ldi	r22, 0x6C	; 108
     94a:	81 2f       	mov	r24, r17
     94c:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x01;
     950:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_CONFIG, 1, data);
     952:	9e 01       	movw	r18, r28
     954:	2f 5f       	subi	r18, 0xFF	; 255
     956:	3f 4f       	sbci	r19, 0xFF	; 255
     958:	41 e0       	ldi	r20, 0x01	; 1
     95a:	6a e1       	ldi	r22, 0x1A	; 26
     95c:	81 2f       	mov	r24, r17
     95e:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x01;
     962:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_USER_CTRL, 1, data);
     964:	9e 01       	movw	r18, r28
     966:	2f 5f       	subi	r18, 0xFF	; 255
     968:	3f 4f       	sbci	r19, 0xFF	; 255
     96a:	41 e0       	ldi	r20, 0x01	; 1
     96c:	6a e6       	ldi	r22, 0x6A	; 106
     96e:	81 2f       	mov	r24, r17
     970:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = G_range;
     974:	e9 82       	std	Y+1, r14	; 0x01
	spi_writeRegs(sel, MPU9250_GYRO_CONFIG, 1, data);
     976:	9e 01       	movw	r18, r28
     978:	2f 5f       	subi	r18, 0xFF	; 255
     97a:	3f 4f       	sbci	r19, 0xFF	; 255
     97c:	41 e0       	ldi	r20, 0x01	; 1
     97e:	6b e1       	ldi	r22, 0x1B	; 27
     980:	81 2f       	mov	r24, r17
     982:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = A_range;
     986:	f9 82       	std	Y+1, r15	; 0x01
	spi_writeRegs(sel, MPU9250_ACCEL_CONFIG, 1, data);
     988:	9e 01       	movw	r18, r28
     98a:	2f 5f       	subi	r18, 0xFF	; 255
     98c:	3f 4f       	sbci	r19, 0xFF	; 255
     98e:	41 e0       	ldi	r20, 0x01	; 1
     990:	6c e1       	ldi	r22, 0x1C	; 28
     992:	81 2f       	mov	r24, r17
     994:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x09;
     998:	89 e0       	ldi	r24, 0x09	; 9
     99a:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_ACCEL_CONFIG2, 1, data);
     99c:	9e 01       	movw	r18, r28
     99e:	2f 5f       	subi	r18, 0xFF	; 255
     9a0:	3f 4f       	sbci	r19, 0xFF	; 255
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	6d e1       	ldi	r22, 0x1D	; 29
     9a6:	81 2f       	mov	r24, r17
     9a8:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0X12;
	spi_writeRegs(sel, MPU9250_MAG_CNTL1, 1, data);
	data[0] = 0X08;
	spi_writeRegs(sel, MPU9250_I2C_MST_CTRL, 1, data);*/
	
	data[0] = 0x20;
     9ac:	80 e2       	ldi	r24, 0x20	; 32
     9ae:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_USER_CTRL, 1, data);
     9b0:	9e 01       	movw	r18, r28
     9b2:	2f 5f       	subi	r18, 0xFF	; 255
     9b4:	3f 4f       	sbci	r19, 0xFF	; 255
     9b6:	41 e0       	ldi	r20, 0x01	; 1
     9b8:	6a e6       	ldi	r22, 0x6A	; 106
     9ba:	81 2f       	mov	r24, r17
     9bc:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0x0D;
     9c0:	8d e0       	ldi	r24, 0x0D	; 13
     9c2:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_MST_CTRL, 1, data);
     9c4:	9e 01       	movw	r18, r28
     9c6:	2f 5f       	subi	r18, 0xFF	; 255
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	41 e0       	ldi	r20, 0x01	; 1
     9cc:	64 e2       	ldi	r22, 0x24	; 36
     9ce:	81 2f       	mov	r24, r17
     9d0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = MPU9250_MAG_ADDRESS;
     9d4:	8c e0       	ldi	r24, 0x0C	; 12
     9d6:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_ADDR, 1, data);
     9d8:	9e 01       	movw	r18, r28
     9da:	2f 5f       	subi	r18, 0xFF	; 255
     9dc:	3f 4f       	sbci	r19, 0xFF	; 255
     9de:	41 e0       	ldi	r20, 0x01	; 1
     9e0:	65 e2       	ldi	r22, 0x25	; 37
     9e2:	81 2f       	mov	r24, r17
     9e4:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = MPU9250_MAG_CNTL2;
     9e8:	8b e0       	ldi	r24, 0x0B	; 11
     9ea:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_REG, 1, data);
     9ec:	9e 01       	movw	r18, r28
     9ee:	2f 5f       	subi	r18, 0xFF	; 255
     9f0:	3f 4f       	sbci	r19, 0xFF	; 255
     9f2:	41 e0       	ldi	r20, 0x01	; 1
     9f4:	66 e2       	ldi	r22, 0x26	; 38
     9f6:	81 2f       	mov	r24, r17
     9f8:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0X01;
     9fc:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_DO, 1, data);
     9fe:	9e 01       	movw	r18, r28
     a00:	2f 5f       	subi	r18, 0xFF	; 255
     a02:	3f 4f       	sbci	r19, 0xFF	; 255
     a04:	41 e0       	ldi	r20, 0x01	; 1
     a06:	63 e6       	ldi	r22, 0x63	; 99
     a08:	81 2f       	mov	r24, r17
     a0a:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0X81;
     a0e:	01 e8       	ldi	r16, 0x81	; 129
     a10:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_CTRL, 1, data);
     a12:	9e 01       	movw	r18, r28
     a14:	2f 5f       	subi	r18, 0xFF	; 255
     a16:	3f 4f       	sbci	r19, 0xFF	; 255
     a18:	41 e0       	ldi	r20, 0x01	; 1
     a1a:	67 e2       	ldi	r22, 0x27	; 39
     a1c:	81 2f       	mov	r24, r17
     a1e:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = MPU9250_MAG_CNTL1;
     a22:	8a e0       	ldi	r24, 0x0A	; 10
     a24:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_REG, 1, data);
     a26:	9e 01       	movw	r18, r28
     a28:	2f 5f       	subi	r18, 0xFF	; 255
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	41 e0       	ldi	r20, 0x01	; 1
     a2e:	66 e2       	ldi	r22, 0x26	; 38
     a30:	81 2f       	mov	r24, r17
     a32:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0X12;
     a36:	82 e1       	ldi	r24, 0x12	; 18
     a38:	89 83       	std	Y+1, r24	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_DO, 1, data);
     a3a:	9e 01       	movw	r18, r28
     a3c:	2f 5f       	subi	r18, 0xFF	; 255
     a3e:	3f 4f       	sbci	r19, 0xFF	; 255
     a40:	41 e0       	ldi	r20, 0x01	; 1
     a42:	63 e6       	ldi	r22, 0x63	; 99
     a44:	81 2f       	mov	r24, r17
     a46:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	data[0] = 0X81;
     a4a:	09 83       	std	Y+1, r16	; 0x01
	spi_writeRegs(sel, MPU9250_I2C_SLV0_CTRL, 1, data);
     a4c:	9e 01       	movw	r18, r28
     a4e:	2f 5f       	subi	r18, 0xFF	; 255
     a50:	3f 4f       	sbci	r19, 0xFF	; 255
     a52:	41 e0       	ldi	r20, 0x01	; 1
     a54:	67 e2       	ldi	r22, 0x27	; 39
     a56:	81 2f       	mov	r24, r17
     a58:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
	
	return;
}
     a5c:	26 96       	adiw	r28, 0x06	; 6
     a5e:	0f b6       	in	r0, 0x3f	; 63
     a60:	f8 94       	cli
     a62:	de bf       	out	0x3e, r29	; 62
     a64:	0f be       	out	0x3f, r0	; 63
     a66:	cd bf       	out	0x3d, r28	; 61
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	ff 90       	pop	r15
     a72:	ef 90       	pop	r14
     a74:	08 95       	ret

00000a76 <SPIgetAccel>:

void SPIgetAccel(short* data, unsigned char sel){
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	00 d0       	rcall	.+0      	; 0xa80 <SPIgetAccel+0xa>
     a80:	00 d0       	rcall	.+0      	; 0xa82 <SPIgetAccel+0xc>
     a82:	00 d0       	rcall	.+0      	; 0xa84 <SPIgetAccel+0xe>
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
     a88:	8c 01       	movw	r16, r24
     a8a:	86 2f       	mov	r24, r22
	uint8_t AccelData[6];
	
	spi_readRegs(sel, MPU9250_ACCEL_XOUT_H, 6, AccelData);
     a8c:	9e 01       	movw	r18, r28
     a8e:	2f 5f       	subi	r18, 0xFF	; 255
     a90:	3f 4f       	sbci	r19, 0xFF	; 255
     a92:	46 e0       	ldi	r20, 0x06	; 6
     a94:	6b e3       	ldi	r22, 0x3B	; 59
     a96:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <spi_readRegs>
	
	data[0] = (((int16_t)AccelData[0]) << 8) | AccelData[1];
     a9a:	89 81       	ldd	r24, Y+1	; 0x01
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	98 2f       	mov	r25, r24
     aa0:	88 27       	eor	r24, r24
     aa2:	2a 81       	ldd	r18, Y+2	; 0x02
     aa4:	82 2b       	or	r24, r18
     aa6:	f8 01       	movw	r30, r16
     aa8:	91 83       	std	Z+1, r25	; 0x01
     aaa:	80 83       	st	Z, r24
	data[1] = (((int16_t)AccelData[2]) << 8) | AccelData[3];
     aac:	2b 81       	ldd	r18, Y+3	; 0x03
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	32 2f       	mov	r19, r18
     ab2:	22 27       	eor	r18, r18
     ab4:	8c 81       	ldd	r24, Y+4	; 0x04
     ab6:	28 2b       	or	r18, r24
     ab8:	33 83       	std	Z+3, r19	; 0x03
     aba:	22 83       	std	Z+2, r18	; 0x02
	data[2] = (((int16_t)AccelData[4]) << 8) | AccelData[5];
     abc:	2d 81       	ldd	r18, Y+5	; 0x05
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	32 2f       	mov	r19, r18
     ac2:	22 27       	eor	r18, r18
     ac4:	8e 81       	ldd	r24, Y+6	; 0x06
     ac6:	28 2b       	or	r18, r24
     ac8:	35 83       	std	Z+5, r19	; 0x05
     aca:	24 83       	std	Z+4, r18	; 0x04
	return;
}
     acc:	26 96       	adiw	r28, 0x06	; 6
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	de bf       	out	0x3e, r29	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	cd bf       	out	0x3d, r28	; 61
     ad8:	df 91       	pop	r29
     ada:	cf 91       	pop	r28
     adc:	1f 91       	pop	r17
     ade:	0f 91       	pop	r16
     ae0:	08 95       	ret

00000ae2 <SPIgetGyro>:

void SPIgetGyro(short* data, unsigned char sel){
     ae2:	0f 93       	push	r16
     ae4:	1f 93       	push	r17
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	00 d0       	rcall	.+0      	; 0xaec <SPIgetGyro+0xa>
     aec:	00 d0       	rcall	.+0      	; 0xaee <SPIgetGyro+0xc>
     aee:	00 d0       	rcall	.+0      	; 0xaf0 <SPIgetGyro+0xe>
     af0:	cd b7       	in	r28, 0x3d	; 61
     af2:	de b7       	in	r29, 0x3e	; 62
     af4:	8c 01       	movw	r16, r24
     af6:	86 2f       	mov	r24, r22
	uint8_t GyroData[6];
	
	spi_readRegs(sel, MPU9250_GYRO_XOUT_H, 6, GyroData);
     af8:	9e 01       	movw	r18, r28
     afa:	2f 5f       	subi	r18, 0xFF	; 255
     afc:	3f 4f       	sbci	r19, 0xFF	; 255
     afe:	46 e0       	ldi	r20, 0x06	; 6
     b00:	63 e4       	ldi	r22, 0x43	; 67
     b02:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <spi_readRegs>
	
	data[0] = (((int16_t)GyroData[0]) << 8) | GyroData[1];
     b06:	89 81       	ldd	r24, Y+1	; 0x01
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	98 2f       	mov	r25, r24
     b0c:	88 27       	eor	r24, r24
     b0e:	2a 81       	ldd	r18, Y+2	; 0x02
     b10:	82 2b       	or	r24, r18
     b12:	f8 01       	movw	r30, r16
     b14:	91 83       	std	Z+1, r25	; 0x01
     b16:	80 83       	st	Z, r24
	data[1] = (((int16_t)GyroData[2]) << 8) | GyroData[3];
     b18:	2b 81       	ldd	r18, Y+3	; 0x03
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	32 2f       	mov	r19, r18
     b1e:	22 27       	eor	r18, r18
     b20:	8c 81       	ldd	r24, Y+4	; 0x04
     b22:	28 2b       	or	r18, r24
     b24:	33 83       	std	Z+3, r19	; 0x03
     b26:	22 83       	std	Z+2, r18	; 0x02
	data[2] = (((int16_t)GyroData[4]) << 8) | GyroData[5];
     b28:	2d 81       	ldd	r18, Y+5	; 0x05
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	32 2f       	mov	r19, r18
     b2e:	22 27       	eor	r18, r18
     b30:	8e 81       	ldd	r24, Y+6	; 0x06
     b32:	28 2b       	or	r18, r24
     b34:	35 83       	std	Z+5, r19	; 0x05
     b36:	24 83       	std	Z+4, r18	; 0x04
	return;
}
     b38:	26 96       	adiw	r28, 0x06	; 6
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	08 95       	ret

00000b4e <SPIgetMag>:

void SPIgetMag(short* data, unsigned char sel){
     b4e:	ff 92       	push	r15
     b50:	0f 93       	push	r16
     b52:	1f 93       	push	r17
     b54:	cf 93       	push	r28
     b56:	df 93       	push	r29
     b58:	cd b7       	in	r28, 0x3d	; 61
     b5a:	de b7       	in	r29, 0x3e	; 62
     b5c:	27 97       	sbiw	r28, 0x07	; 7
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	f8 94       	cli
     b62:	de bf       	out	0x3e, r29	; 62
     b64:	0f be       	out	0x3f, r0	; 63
     b66:	cd bf       	out	0x3d, r28	; 61
     b68:	8c 01       	movw	r16, r24
     b6a:	f6 2e       	mov	r15, r22
//uint8_t ST1[2];
uint8_t MagData[7];

MagData[0]=MPU9250_MAG_ADDRESS|READ_FLAG;
     b6c:	8c e8       	ldi	r24, 0x8C	; 140
     b6e:	89 83       	std	Y+1, r24	; 0x01
spi_writeRegs(sel, MPU9250_I2C_SLV0_ADDR, 1, MagData); //Set the I2C slave addres of AK8963 and set for read.
     b70:	9e 01       	movw	r18, r28
     b72:	2f 5f       	subi	r18, 0xFF	; 255
     b74:	3f 4f       	sbci	r19, 0xFF	; 255
     b76:	41 e0       	ldi	r20, 0x01	; 1
     b78:	65 e2       	ldi	r22, 0x25	; 37
     b7a:	8f 2d       	mov	r24, r15
     b7c:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
MagData[0]=MPU9250_MAG_XOUT_L;
     b80:	83 e0       	ldi	r24, 0x03	; 3
     b82:	89 83       	std	Y+1, r24	; 0x01
spi_writeRegs(sel, MPU9250_I2C_SLV0_REG, 1, MagData); //I2C slave 0 register address from where to begin data transfer
     b84:	9e 01       	movw	r18, r28
     b86:	2f 5f       	subi	r18, 0xFF	; 255
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	41 e0       	ldi	r20, 0x01	; 1
     b8c:	66 e2       	ldi	r22, 0x26	; 38
     b8e:	8f 2d       	mov	r24, r15
     b90:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
MagData[0]=0x87;
     b94:	87 e8       	ldi	r24, 0x87	; 135
     b96:	89 83       	std	Y+1, r24	; 0x01
spi_writeRegs(sel, MPU9250_I2C_SLV0_CTRL, 1, MagData);
     b98:	9e 01       	movw	r18, r28
     b9a:	2f 5f       	subi	r18, 0xFF	; 255
     b9c:	3f 4f       	sbci	r19, 0xFF	; 255
     b9e:	41 e0       	ldi	r20, 0x01	; 1
     ba0:	67 e2       	ldi	r22, 0x27	; 39
     ba2:	8f 2d       	mov	r24, r15
     ba4:	0e 94 3d 06 	call	0xc7a	; 0xc7a <spi_writeRegs>
     ba8:	8f ec       	ldi	r24, 0xCF	; 207
     baa:	97 e0       	ldi	r25, 0x07	; 7
     bac:	01 97       	sbiw	r24, 0x01	; 1
     bae:	f1 f7       	brne	.-4      	; 0xbac <SPIgetMag+0x5e>
     bb0:	00 c0       	rjmp	.+0      	; 0xbb2 <SPIgetMag+0x64>
     bb2:	00 00       	nop

_delay_ms(1);
spi_readRegs(sel, MPU9250_EXT_SENS_DATA_00, 7, MagData);
     bb4:	9e 01       	movw	r18, r28
     bb6:	2f 5f       	subi	r18, 0xFF	; 255
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	47 e0       	ldi	r20, 0x07	; 7
     bbc:	69 e4       	ldi	r22, 0x49	; 73
     bbe:	8f 2d       	mov	r24, r15
     bc0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <spi_readRegs>

data[0] = (((int16_t)MagData[1]) << 8) | MagData[0];
     bc4:	8a 81       	ldd	r24, Y+2	; 0x02
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	98 2f       	mov	r25, r24
     bca:	88 27       	eor	r24, r24
     bcc:	29 81       	ldd	r18, Y+1	; 0x01
     bce:	82 2b       	or	r24, r18
     bd0:	f8 01       	movw	r30, r16
     bd2:	91 83       	std	Z+1, r25	; 0x01
     bd4:	80 83       	st	Z, r24
data[1] = (((int16_t)MagData[3]) << 8) | MagData[2];
     bd6:	2c 81       	ldd	r18, Y+4	; 0x04
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	32 2f       	mov	r19, r18
     bdc:	22 27       	eor	r18, r18
     bde:	8b 81       	ldd	r24, Y+3	; 0x03
     be0:	28 2b       	or	r18, r24
     be2:	33 83       	std	Z+3, r19	; 0x03
     be4:	22 83       	std	Z+2, r18	; 0x02
data[2] = (((int16_t)MagData[5]) << 8) | MagData[4];
     be6:	2e 81       	ldd	r18, Y+6	; 0x06
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	32 2f       	mov	r19, r18
     bec:	22 27       	eor	r18, r18
     bee:	8d 81       	ldd	r24, Y+5	; 0x05
     bf0:	28 2b       	or	r18, r24
     bf2:	35 83       	std	Z+5, r19	; 0x05
     bf4:	24 83       	std	Z+4, r18	; 0x04
}
     bf6:	27 96       	adiw	r28, 0x07	; 7
     bf8:	0f b6       	in	r0, 0x3f	; 63
     bfa:	f8 94       	cli
     bfc:	de bf       	out	0x3e, r29	; 62
     bfe:	0f be       	out	0x3f, r0	; 63
     c00:	cd bf       	out	0x3d, r28	; 61
     c02:	df 91       	pop	r29
     c04:	cf 91       	pop	r28
     c06:	1f 91       	pop	r17
     c08:	0f 91       	pop	r16
     c0a:	ff 90       	pop	r15
     c0c:	08 95       	ret

00000c0e <select>:
	receivedchar=SPDR;
	return (receivedchar);
}//End SPI_send

void select(uint8_t slvdevice){
	switch (slvdevice)
     c0e:	82 30       	cpi	r24, 0x02	; 2
     c10:	49 f0       	breq	.+18     	; 0xc24 <select+0x16>
     c12:	18 f4       	brcc	.+6      	; 0xc1a <select+0xc>
     c14:	88 23       	and	r24, r24
     c16:	61 f0       	breq	.+24     	; 0xc30 <select+0x22>
     c18:	08 95       	ret
     c1a:	86 30       	cpi	r24, 0x06	; 6
     c1c:	39 f0       	breq	.+14     	; 0xc2c <select+0x1e>
     c1e:	87 30       	cpi	r24, 0x07	; 7
     c20:	19 f0       	breq	.+6      	; 0xc28 <select+0x1a>
     c22:	08 95       	ret
	{
	case sensor1_cs:
		PinLOW(PORTB, sensor1_cs);
     c24:	2a 98       	cbi	0x05, 2	; 5
		break;
     c26:	08 95       	ret
	case sensor2_cs:
		PinLOW(PORTB, sensor2_cs);
     c28:	2f 98       	cbi	0x05, 7	; 5
		break;
     c2a:	08 95       	ret
	case sensor3_cs:
		PinLOW(PORTB, sensor3_cs);
     c2c:	2e 98       	cbi	0x05, 6	; 5
		break;
     c2e:	08 95       	ret
	case sram_cs:
		PinLOW(PORTC, sram_cs);
     c30:	40 98       	cbi	0x08, 0	; 8
     c32:	08 95       	ret

00000c34 <deselect>:
	return;
}

void deselect(uint8_t slvdevice){
{
		switch (slvdevice)
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	49 f0       	breq	.+18     	; 0xc4a <deselect+0x16>
     c38:	18 f4       	brcc	.+6      	; 0xc40 <deselect+0xc>
     c3a:	88 23       	and	r24, r24
     c3c:	61 f0       	breq	.+24     	; 0xc56 <deselect+0x22>
     c3e:	08 95       	ret
     c40:	86 30       	cpi	r24, 0x06	; 6
     c42:	39 f0       	breq	.+14     	; 0xc52 <deselect+0x1e>
     c44:	87 30       	cpi	r24, 0x07	; 7
     c46:	19 f0       	breq	.+6      	; 0xc4e <deselect+0x1a>
     c48:	08 95       	ret
		{
			case sensor1_cs:
			PinHIGH(PORTB, sensor1_cs);
     c4a:	2a 9a       	sbi	0x05, 2	; 5
			break;
     c4c:	08 95       	ret
			case sensor2_cs:
			PinHIGH(PORTB, sensor2_cs);
     c4e:	2f 9a       	sbi	0x05, 7	; 5
			break;
     c50:	08 95       	ret
			case sensor3_cs:
			PinHIGH(PORTB, sensor3_cs);
     c52:	2e 9a       	sbi	0x05, 6	; 5
			break;
     c54:	08 95       	ret
			case sram_cs:
			PinHIGH(PORTC, sram_cs);
     c56:	40 9a       	sbi	0x08, 0	; 8
     c58:	08 95       	ret

00000c5a <init_SPI>:
#define readbit 0x80

void init_SPI(void)
{
	//DDRB houses SPI pins SCK-5 MOSI-3 MISO-4 used for programing
	DDRB|=(1<<5)|(1<<3)|(0<<4)|(1<<sensor1_cs)|(1<<1)|(1<<sensor2_cs);
     c5a:	84 b1       	in	r24, 0x04	; 4
     c5c:	8e 6a       	ori	r24, 0xAE	; 174
     c5e:	84 b9       	out	0x04, r24	; 4
	deselect(sensor1_cs);
     c60:	82 e0       	ldi	r24, 0x02	; 2
     c62:	0e 94 1a 06 	call	0xc34	; 0xc34 <deselect>
	deselect(sensor2_cs);
     c66:	87 e0       	ldi	r24, 0x07	; 7
     c68:	0e 94 1a 06 	call	0xc34	; 0xc34 <deselect>
	DDRC |=(1<<sram_cs);//Sets up chip select for sram
     c6c:	38 9a       	sbi	0x07, 0	; 7
	PORTC|=(1<<sram_cs);//deselect
     c6e:	40 9a       	sbi	0x08, 0	; 8
	SPCR=0;
     c70:	1c bc       	out	0x2c, r1	; 44
	SPCR=(1<<SPE)|(1<<MSTR)|(1<<SPR0);  //master mode sets 2x speed
     c72:	81 e5       	ldi	r24, 0x51	; 81
     c74:	8c bd       	out	0x2c, r24	; 44
	//(1<<SPR0);
	//SPSR=(1<<SPI2X);
	SPSR=0;
     c76:	1d bc       	out	0x2d, r1	; 45
     c78:	08 95       	ret

00000c7a <spi_writeRegs>:
 * @ data, data pointer where the data is written to reg addr
 *   and sequentially hence forth if greater than 1
 * @ return, success or failure
 */
int spi_writeRegs(unsigned char sel, unsigned char reg_addr,
		unsigned char length, unsigned char const *data) {
     c7a:	ff 92       	push	r15
     c7c:	0f 93       	push	r16
     c7e:	1f 93       	push	r17
     c80:	cf 93       	push	r28
     c82:	df 93       	push	r29
     c84:	d8 2f       	mov	r29, r24
     c86:	f6 2e       	mov	r15, r22
     c88:	c4 2f       	mov	r28, r20
     c8a:	89 01       	movw	r16, r18
	uint8_t i;
	select(sel);
     c8c:	0e 94 07 06 	call	0xc0e	; 0xc0e <select>
	
	SPDR=reg_addr;
     c90:	fe bc       	out	0x2e, r15	; 46
	while(bit_is_clear(SPSR,SPIF)){}
     c92:	0d b4       	in	r0, 0x2d	; 45
     c94:	07 fe       	sbrs	r0, 7
     c96:	fd cf       	rjmp	.-6      	; 0xc92 <spi_writeRegs+0x18>
	for(i=0; i<length; i++)
     c98:	cc 23       	and	r28, r28
     c9a:	99 f0       	breq	.+38     	; 0xcc2 <spi_writeRegs+0x48>
     c9c:	f8 01       	movw	r30, r16
     c9e:	c1 50       	subi	r28, 0x01	; 1
     ca0:	4c 2f       	mov	r20, r28
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	4f 5f       	subi	r20, 0xFF	; 255
     ca6:	5f 4f       	sbci	r21, 0xFF	; 255
     ca8:	98 01       	movw	r18, r16
     caa:	24 0f       	add	r18, r20
     cac:	35 1f       	adc	r19, r21
	{
		SPDR=data[i];
		SPDR=0xFF;
     cae:	4f ef       	ldi	r20, 0xFF	; 255
	
	SPDR=reg_addr;
	while(bit_is_clear(SPSR,SPIF)){}
	for(i=0; i<length; i++)
	{
		SPDR=data[i];
     cb0:	91 91       	ld	r25, Z+
     cb2:	9e bd       	out	0x2e, r25	; 46
		SPDR=0xFF;
     cb4:	4e bd       	out	0x2e, r20	; 46
		while(bit_is_clear(SPSR,SPIF)){};
     cb6:	0d b4       	in	r0, 0x2d	; 45
     cb8:	07 fe       	sbrs	r0, 7
     cba:	fd cf       	rjmp	.-6      	; 0xcb6 <spi_writeRegs+0x3c>
	uint8_t i;
	select(sel);
	
	SPDR=reg_addr;
	while(bit_is_clear(SPSR,SPIF)){}
	for(i=0; i<length; i++)
     cbc:	e2 17       	cp	r30, r18
     cbe:	f3 07       	cpc	r31, r19
     cc0:	b9 f7       	brne	.-18     	; 0xcb0 <spi_writeRegs+0x36>
	{
		SPDR=data[i];
		SPDR=0xFF;
		while(bit_is_clear(SPSR,SPIF)){};
	}
	deselect(sel);
     cc2:	8d 2f       	mov	r24, r29
     cc4:	0e 94 1a 06 	call	0xc34	; 0xc34 <deselect>
	return 0;
}
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	df 91       	pop	r29
     cce:	cf 91       	pop	r28
     cd0:	1f 91       	pop	r17
     cd2:	0f 91       	pop	r16
     cd4:	ff 90       	pop	r15
     cd6:	08 95       	ret

00000cd8 <spi_readRegs>:
 * @ data, data pointer where the data is read from reg addr
 *   and sequentially hence forth if greater than 1
 * @ return, success or failure
 */
int spi_readRegs(unsigned char sel, unsigned char reg_addr,
		unsigned char length, unsigned char *data) {
     cd8:	ff 92       	push	r15
     cda:	0f 93       	push	r16
     cdc:	1f 93       	push	r17
     cde:	cf 93       	push	r28
     ce0:	df 93       	push	r29
     ce2:	08 2f       	mov	r16, r24
     ce4:	16 2f       	mov	r17, r22
     ce6:	f4 2e       	mov	r15, r20
     ce8:	e9 01       	movw	r28, r18
	int i=0;
	
	select(sel);
     cea:	0e 94 07 06 	call	0xc0e	; 0xc0e <select>
	
	SPDR=(reg_addr | readbit);
     cee:	10 68       	ori	r17, 0x80	; 128
     cf0:	1e bd       	out	0x2e, r17	; 46
	while(bit_is_clear(SPSR,SPIF)){};
     cf2:	0d b4       	in	r0, 0x2d	; 45
     cf4:	07 fe       	sbrs	r0, 7
     cf6:	fd cf       	rjmp	.-6      	; 0xcf2 <spi_readRegs+0x1a>
	SPDR=0xFF;
     cf8:	8f ef       	ldi	r24, 0xFF	; 255
     cfa:	8e bd       	out	0x2e, r24	; 46
	while(bit_is_clear(SPSR,SPIF)){};
     cfc:	0d b4       	in	r0, 0x2d	; 45
     cfe:	07 fe       	sbrs	r0, 7
     d00:	fd cf       	rjmp	.-6      	; 0xcfc <spi_readRegs+0x24>
	for(i=0; i<length; i++)
     d02:	ff 20       	and	r15, r15
     d04:	71 f0       	breq	.+28     	; 0xd22 <spi_readRegs+0x4a>
     d06:	fe 01       	movw	r30, r28
     d08:	9e 01       	movw	r18, r28
     d0a:	2f 0d       	add	r18, r15
     d0c:	31 1d       	adc	r19, r1
	{
		data[i]=SPDR;
		SPDR=0xFF;
     d0e:	4f ef       	ldi	r20, 0xFF	; 255
	while(bit_is_clear(SPSR,SPIF)){};
	SPDR=0xFF;
	while(bit_is_clear(SPSR,SPIF)){};
	for(i=0; i<length; i++)
	{
		data[i]=SPDR;
     d10:	9e b5       	in	r25, 0x2e	; 46
     d12:	91 93       	st	Z+, r25
		SPDR=0xFF;
     d14:	4e bd       	out	0x2e, r20	; 46
		while(bit_is_clear(SPSR,SPIF)){};
     d16:	0d b4       	in	r0, 0x2d	; 45
     d18:	07 fe       	sbrs	r0, 7
     d1a:	fd cf       	rjmp	.-6      	; 0xd16 <spi_readRegs+0x3e>
	
	SPDR=(reg_addr | readbit);
	while(bit_is_clear(SPSR,SPIF)){};
	SPDR=0xFF;
	while(bit_is_clear(SPSR,SPIF)){};
	for(i=0; i<length; i++)
     d1c:	e2 17       	cp	r30, r18
     d1e:	f3 07       	cpc	r31, r19
     d20:	b9 f7       	brne	.-18     	; 0xd10 <spi_readRegs+0x38>
	{
		data[i]=SPDR;
		SPDR=0xFF;
		while(bit_is_clear(SPSR,SPIF)){};
	}
	deselect(sel);
     d22:	80 2f       	mov	r24, r16
     d24:	0e 94 1a 06 	call	0xc34	; 0xc34 <deselect>
	return 0;
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	1f 91       	pop	r17
     d32:	0f 91       	pop	r16
     d34:	ff 90       	pop	r15
     d36:	08 95       	ret

00000d38 <uart_putc>:
//void uart_puts(unsigned char *str) {
void uart_puts_p(const char *str) {
    while(pgm_read_byte(str) != 0x00) { // Loop through string, sending each character
        uart_putc(pgm_read_byte(str++));
    }
}
     d38:	e0 ec       	ldi	r30, 0xC0	; 192
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	90 81       	ld	r25, Z
     d3e:	95 ff       	sbrs	r25, 5
     d40:	fd cf       	rjmp	.-6      	; 0xd3c <uart_putc+0x4>
     d42:	80 93 c6 00 	sts	0x00C6, r24
     d46:	e0 ec       	ldi	r30, 0xC0	; 192
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	85 ff       	sbrs	r24, 5
     d4e:	fd cf       	rjmp	.-6      	; 0xd4a <uart_putc+0x12>
     d50:	08 95       	ret

00000d52 <uart_puts>:
     d52:	cf 93       	push	r28
     d54:	df 93       	push	r29
     d56:	ec 01       	movw	r28, r24
     d58:	88 81       	ld	r24, Y
     d5a:	88 23       	and	r24, r24
     d5c:	31 f0       	breq	.+12     	; 0xd6a <uart_puts+0x18>
     d5e:	21 96       	adiw	r28, 0x01	; 1
     d60:	0e 94 9c 06 	call	0xd38	; 0xd38 <uart_putc>
     d64:	89 91       	ld	r24, Y+
     d66:	81 11       	cpse	r24, r1
     d68:	fb cf       	rjmp	.-10     	; 0xd60 <uart_puts+0xe>
     d6a:	df 91       	pop	r29
     d6c:	cf 91       	pop	r28
     d6e:	08 95       	ret

00000d70 <uart_init>:
//must be in place for the MAX232 chip to get data.

void uart_init(){
//rx and tx enable, receive interrupt enabled, 8 bit characters
//  UCSR0B |= (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
  UCSR0B |= (1<<RXEN0) | (1<<TXEN0);  //INTERRUPS DISABLED!!!
     d70:	e1 ec       	ldi	r30, 0xC1	; 193
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	88 61       	ori	r24, 0x18	; 24
     d78:	80 83       	st	Z, r24

//  UCSR0B |= (1<<RXEN0) | (1<<TXEN0) ;
//async operation, no parity,  one stop bit, 8-bit characters
UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
     d7a:	e2 ec       	ldi	r30, 0xC2	; 194
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	86 60       	ori	r24, 0x06	; 6
     d82:	80 83       	st	Z, r24
UBRR0H = (BAUDVALUE >>8 ); //load upper byte of the baud rate into UBRR 
     d84:	10 92 c5 00 	sts	0x00C5, r1
UBRR0L =  BAUDVALUE;       //load lower byte of the baud rate into UBRR 
     d88:	8c e0       	ldi	r24, 0x0C	; 12
     d8a:	80 93 c4 00 	sts	0x00C4, r24
     d8e:	08 95       	ret

00000d90 <__floatunsisf>:
     d90:	e8 94       	clt
     d92:	09 c0       	rjmp	.+18     	; 0xda6 <__floatsisf+0x12>

00000d94 <__floatsisf>:
     d94:	97 fb       	bst	r25, 7
     d96:	3e f4       	brtc	.+14     	; 0xda6 <__floatsisf+0x12>
     d98:	90 95       	com	r25
     d9a:	80 95       	com	r24
     d9c:	70 95       	com	r23
     d9e:	61 95       	neg	r22
     da0:	7f 4f       	sbci	r23, 0xFF	; 255
     da2:	8f 4f       	sbci	r24, 0xFF	; 255
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	99 23       	and	r25, r25
     da8:	a9 f0       	breq	.+42     	; 0xdd4 <__floatsisf+0x40>
     daa:	f9 2f       	mov	r31, r25
     dac:	96 e9       	ldi	r25, 0x96	; 150
     dae:	bb 27       	eor	r27, r27
     db0:	93 95       	inc	r25
     db2:	f6 95       	lsr	r31
     db4:	87 95       	ror	r24
     db6:	77 95       	ror	r23
     db8:	67 95       	ror	r22
     dba:	b7 95       	ror	r27
     dbc:	f1 11       	cpse	r31, r1
     dbe:	f8 cf       	rjmp	.-16     	; 0xdb0 <__floatsisf+0x1c>
     dc0:	fa f4       	brpl	.+62     	; 0xe00 <__floatsisf+0x6c>
     dc2:	bb 0f       	add	r27, r27
     dc4:	11 f4       	brne	.+4      	; 0xdca <__floatsisf+0x36>
     dc6:	60 ff       	sbrs	r22, 0
     dc8:	1b c0       	rjmp	.+54     	; 0xe00 <__floatsisf+0x6c>
     dca:	6f 5f       	subi	r22, 0xFF	; 255
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	8f 4f       	sbci	r24, 0xFF	; 255
     dd0:	9f 4f       	sbci	r25, 0xFF	; 255
     dd2:	16 c0       	rjmp	.+44     	; 0xe00 <__floatsisf+0x6c>
     dd4:	88 23       	and	r24, r24
     dd6:	11 f0       	breq	.+4      	; 0xddc <__floatsisf+0x48>
     dd8:	96 e9       	ldi	r25, 0x96	; 150
     dda:	11 c0       	rjmp	.+34     	; 0xdfe <__floatsisf+0x6a>
     ddc:	77 23       	and	r23, r23
     dde:	21 f0       	breq	.+8      	; 0xde8 <__floatsisf+0x54>
     de0:	9e e8       	ldi	r25, 0x8E	; 142
     de2:	87 2f       	mov	r24, r23
     de4:	76 2f       	mov	r23, r22
     de6:	05 c0       	rjmp	.+10     	; 0xdf2 <__floatsisf+0x5e>
     de8:	66 23       	and	r22, r22
     dea:	71 f0       	breq	.+28     	; 0xe08 <__floatsisf+0x74>
     dec:	96 e8       	ldi	r25, 0x86	; 134
     dee:	86 2f       	mov	r24, r22
     df0:	70 e0       	ldi	r23, 0x00	; 0
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	2a f0       	brmi	.+10     	; 0xe00 <__floatsisf+0x6c>
     df6:	9a 95       	dec	r25
     df8:	66 0f       	add	r22, r22
     dfa:	77 1f       	adc	r23, r23
     dfc:	88 1f       	adc	r24, r24
     dfe:	da f7       	brpl	.-10     	; 0xdf6 <__floatsisf+0x62>
     e00:	88 0f       	add	r24, r24
     e02:	96 95       	lsr	r25
     e04:	87 95       	ror	r24
     e06:	97 f9       	bld	r25, 7
     e08:	08 95       	ret

00000e0a <__mulsf3>:
     e0a:	0e 94 18 07 	call	0xe30	; 0xe30 <__mulsf3x>
     e0e:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__fp_round>
     e12:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fp_pscA>
     e16:	38 f0       	brcs	.+14     	; 0xe26 <__mulsf3+0x1c>
     e18:	0e 94 82 07 	call	0xf04	; 0xf04 <__fp_pscB>
     e1c:	20 f0       	brcs	.+8      	; 0xe26 <__mulsf3+0x1c>
     e1e:	95 23       	and	r25, r21
     e20:	11 f0       	breq	.+4      	; 0xe26 <__mulsf3+0x1c>
     e22:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_inf>
     e26:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__fp_nan>
     e2a:	11 24       	eor	r1, r1
     e2c:	0c 94 bd 07 	jmp	0xf7a	; 0xf7a <__fp_szero>

00000e30 <__mulsf3x>:
     e30:	0e 94 9a 07 	call	0xf34	; 0xf34 <__fp_split3>
     e34:	70 f3       	brcs	.-36     	; 0xe12 <__mulsf3+0x8>

00000e36 <__mulsf3_pse>:
     e36:	95 9f       	mul	r25, r21
     e38:	c1 f3       	breq	.-16     	; 0xe2a <__mulsf3+0x20>
     e3a:	95 0f       	add	r25, r21
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	55 1f       	adc	r21, r21
     e40:	62 9f       	mul	r22, r18
     e42:	f0 01       	movw	r30, r0
     e44:	72 9f       	mul	r23, r18
     e46:	bb 27       	eor	r27, r27
     e48:	f0 0d       	add	r31, r0
     e4a:	b1 1d       	adc	r27, r1
     e4c:	63 9f       	mul	r22, r19
     e4e:	aa 27       	eor	r26, r26
     e50:	f0 0d       	add	r31, r0
     e52:	b1 1d       	adc	r27, r1
     e54:	aa 1f       	adc	r26, r26
     e56:	64 9f       	mul	r22, r20
     e58:	66 27       	eor	r22, r22
     e5a:	b0 0d       	add	r27, r0
     e5c:	a1 1d       	adc	r26, r1
     e5e:	66 1f       	adc	r22, r22
     e60:	82 9f       	mul	r24, r18
     e62:	22 27       	eor	r18, r18
     e64:	b0 0d       	add	r27, r0
     e66:	a1 1d       	adc	r26, r1
     e68:	62 1f       	adc	r22, r18
     e6a:	73 9f       	mul	r23, r19
     e6c:	b0 0d       	add	r27, r0
     e6e:	a1 1d       	adc	r26, r1
     e70:	62 1f       	adc	r22, r18
     e72:	83 9f       	mul	r24, r19
     e74:	a0 0d       	add	r26, r0
     e76:	61 1d       	adc	r22, r1
     e78:	22 1f       	adc	r18, r18
     e7a:	74 9f       	mul	r23, r20
     e7c:	33 27       	eor	r19, r19
     e7e:	a0 0d       	add	r26, r0
     e80:	61 1d       	adc	r22, r1
     e82:	23 1f       	adc	r18, r19
     e84:	84 9f       	mul	r24, r20
     e86:	60 0d       	add	r22, r0
     e88:	21 1d       	adc	r18, r1
     e8a:	82 2f       	mov	r24, r18
     e8c:	76 2f       	mov	r23, r22
     e8e:	6a 2f       	mov	r22, r26
     e90:	11 24       	eor	r1, r1
     e92:	9f 57       	subi	r25, 0x7F	; 127
     e94:	50 40       	sbci	r21, 0x00	; 0
     e96:	9a f0       	brmi	.+38     	; 0xebe <__mulsf3_pse+0x88>
     e98:	f1 f0       	breq	.+60     	; 0xed6 <__mulsf3_pse+0xa0>
     e9a:	88 23       	and	r24, r24
     e9c:	4a f0       	brmi	.+18     	; 0xeb0 <__mulsf3_pse+0x7a>
     e9e:	ee 0f       	add	r30, r30
     ea0:	ff 1f       	adc	r31, r31
     ea2:	bb 1f       	adc	r27, r27
     ea4:	66 1f       	adc	r22, r22
     ea6:	77 1f       	adc	r23, r23
     ea8:	88 1f       	adc	r24, r24
     eaa:	91 50       	subi	r25, 0x01	; 1
     eac:	50 40       	sbci	r21, 0x00	; 0
     eae:	a9 f7       	brne	.-22     	; 0xe9a <__mulsf3_pse+0x64>
     eb0:	9e 3f       	cpi	r25, 0xFE	; 254
     eb2:	51 05       	cpc	r21, r1
     eb4:	80 f0       	brcs	.+32     	; 0xed6 <__mulsf3_pse+0xa0>
     eb6:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_inf>
     eba:	0c 94 bd 07 	jmp	0xf7a	; 0xf7a <__fp_szero>
     ebe:	5f 3f       	cpi	r21, 0xFF	; 255
     ec0:	e4 f3       	brlt	.-8      	; 0xeba <__mulsf3_pse+0x84>
     ec2:	98 3e       	cpi	r25, 0xE8	; 232
     ec4:	d4 f3       	brlt	.-12     	; 0xeba <__mulsf3_pse+0x84>
     ec6:	86 95       	lsr	r24
     ec8:	77 95       	ror	r23
     eca:	67 95       	ror	r22
     ecc:	b7 95       	ror	r27
     ece:	f7 95       	ror	r31
     ed0:	e7 95       	ror	r30
     ed2:	9f 5f       	subi	r25, 0xFF	; 255
     ed4:	c1 f7       	brne	.-16     	; 0xec6 <__mulsf3_pse+0x90>
     ed6:	fe 2b       	or	r31, r30
     ed8:	88 0f       	add	r24, r24
     eda:	91 1d       	adc	r25, r1
     edc:	96 95       	lsr	r25
     ede:	87 95       	ror	r24
     ee0:	97 f9       	bld	r25, 7
     ee2:	08 95       	ret

00000ee4 <__fp_inf>:
     ee4:	97 f9       	bld	r25, 7
     ee6:	9f 67       	ori	r25, 0x7F	; 127
     ee8:	80 e8       	ldi	r24, 0x80	; 128
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	08 95       	ret

00000ef0 <__fp_nan>:
     ef0:	9f ef       	ldi	r25, 0xFF	; 255
     ef2:	80 ec       	ldi	r24, 0xC0	; 192
     ef4:	08 95       	ret

00000ef6 <__fp_pscA>:
     ef6:	00 24       	eor	r0, r0
     ef8:	0a 94       	dec	r0
     efa:	16 16       	cp	r1, r22
     efc:	17 06       	cpc	r1, r23
     efe:	18 06       	cpc	r1, r24
     f00:	09 06       	cpc	r0, r25
     f02:	08 95       	ret

00000f04 <__fp_pscB>:
     f04:	00 24       	eor	r0, r0
     f06:	0a 94       	dec	r0
     f08:	12 16       	cp	r1, r18
     f0a:	13 06       	cpc	r1, r19
     f0c:	14 06       	cpc	r1, r20
     f0e:	05 06       	cpc	r0, r21
     f10:	08 95       	ret

00000f12 <__fp_round>:
     f12:	09 2e       	mov	r0, r25
     f14:	03 94       	inc	r0
     f16:	00 0c       	add	r0, r0
     f18:	11 f4       	brne	.+4      	; 0xf1e <__fp_round+0xc>
     f1a:	88 23       	and	r24, r24
     f1c:	52 f0       	brmi	.+20     	; 0xf32 <__fp_round+0x20>
     f1e:	bb 0f       	add	r27, r27
     f20:	40 f4       	brcc	.+16     	; 0xf32 <__fp_round+0x20>
     f22:	bf 2b       	or	r27, r31
     f24:	11 f4       	brne	.+4      	; 0xf2a <__fp_round+0x18>
     f26:	60 ff       	sbrs	r22, 0
     f28:	04 c0       	rjmp	.+8      	; 0xf32 <__fp_round+0x20>
     f2a:	6f 5f       	subi	r22, 0xFF	; 255
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	8f 4f       	sbci	r24, 0xFF	; 255
     f30:	9f 4f       	sbci	r25, 0xFF	; 255
     f32:	08 95       	ret

00000f34 <__fp_split3>:
     f34:	57 fd       	sbrc	r21, 7
     f36:	90 58       	subi	r25, 0x80	; 128
     f38:	44 0f       	add	r20, r20
     f3a:	55 1f       	adc	r21, r21
     f3c:	59 f0       	breq	.+22     	; 0xf54 <__fp_splitA+0x10>
     f3e:	5f 3f       	cpi	r21, 0xFF	; 255
     f40:	71 f0       	breq	.+28     	; 0xf5e <__fp_splitA+0x1a>
     f42:	47 95       	ror	r20

00000f44 <__fp_splitA>:
     f44:	88 0f       	add	r24, r24
     f46:	97 fb       	bst	r25, 7
     f48:	99 1f       	adc	r25, r25
     f4a:	61 f0       	breq	.+24     	; 0xf64 <__fp_splitA+0x20>
     f4c:	9f 3f       	cpi	r25, 0xFF	; 255
     f4e:	79 f0       	breq	.+30     	; 0xf6e <__fp_splitA+0x2a>
     f50:	87 95       	ror	r24
     f52:	08 95       	ret
     f54:	12 16       	cp	r1, r18
     f56:	13 06       	cpc	r1, r19
     f58:	14 06       	cpc	r1, r20
     f5a:	55 1f       	adc	r21, r21
     f5c:	f2 cf       	rjmp	.-28     	; 0xf42 <__fp_split3+0xe>
     f5e:	46 95       	lsr	r20
     f60:	f1 df       	rcall	.-30     	; 0xf44 <__fp_splitA>
     f62:	08 c0       	rjmp	.+16     	; 0xf74 <__fp_splitA+0x30>
     f64:	16 16       	cp	r1, r22
     f66:	17 06       	cpc	r1, r23
     f68:	18 06       	cpc	r1, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	f1 cf       	rjmp	.-30     	; 0xf50 <__fp_splitA+0xc>
     f6e:	86 95       	lsr	r24
     f70:	71 05       	cpc	r23, r1
     f72:	61 05       	cpc	r22, r1
     f74:	08 94       	sec
     f76:	08 95       	ret

00000f78 <__fp_zero>:
     f78:	e8 94       	clt

00000f7a <__fp_szero>:
     f7a:	bb 27       	eor	r27, r27
     f7c:	66 27       	eor	r22, r22
     f7e:	77 27       	eor	r23, r23
     f80:	cb 01       	movw	r24, r22
     f82:	97 f9       	bld	r25, 7
     f84:	08 95       	ret

00000f86 <vfprintf>:
     f86:	a3 e1       	ldi	r26, 0x13	; 19
     f88:	b0 e0       	ldi	r27, 0x00	; 0
     f8a:	e9 ec       	ldi	r30, 0xC9	; 201
     f8c:	f7 e0       	ldi	r31, 0x07	; 7
     f8e:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__prologue_saves__>
     f92:	6c 01       	movw	r12, r24
     f94:	4b 01       	movw	r8, r22
     f96:	2a 01       	movw	r4, r20
     f98:	fc 01       	movw	r30, r24
     f9a:	17 82       	std	Z+7, r1	; 0x07
     f9c:	16 82       	std	Z+6, r1	; 0x06
     f9e:	83 81       	ldd	r24, Z+3	; 0x03
     fa0:	81 ff       	sbrs	r24, 1
     fa2:	43 c3       	rjmp	.+1670   	; 0x162a <vfprintf+0x6a4>
     fa4:	ae 01       	movw	r20, r28
     fa6:	4f 5f       	subi	r20, 0xFF	; 255
     fa8:	5f 4f       	sbci	r21, 0xFF	; 255
     faa:	3a 01       	movw	r6, r20
     fac:	f6 01       	movw	r30, r12
     fae:	93 81       	ldd	r25, Z+3	; 0x03
     fb0:	f4 01       	movw	r30, r8
     fb2:	93 fd       	sbrc	r25, 3
     fb4:	85 91       	lpm	r24, Z+
     fb6:	93 ff       	sbrs	r25, 3
     fb8:	81 91       	ld	r24, Z+
     fba:	4f 01       	movw	r8, r30
     fbc:	88 23       	and	r24, r24
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <vfprintf+0x3c>
     fc0:	30 c3       	rjmp	.+1632   	; 0x1622 <vfprintf+0x69c>
     fc2:	85 32       	cpi	r24, 0x25	; 37
     fc4:	39 f4       	brne	.+14     	; 0xfd4 <vfprintf+0x4e>
     fc6:	93 fd       	sbrc	r25, 3
     fc8:	85 91       	lpm	r24, Z+
     fca:	93 ff       	sbrs	r25, 3
     fcc:	81 91       	ld	r24, Z+
     fce:	4f 01       	movw	r8, r30
     fd0:	85 32       	cpi	r24, 0x25	; 37
     fd2:	39 f4       	brne	.+14     	; 0xfe2 <vfprintf+0x5c>
     fd4:	b6 01       	movw	r22, r12
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
     fdc:	52 01       	movw	r10, r4
     fde:	25 01       	movw	r4, r10
     fe0:	e5 cf       	rjmp	.-54     	; 0xfac <vfprintf+0x26>
     fe2:	10 e0       	ldi	r17, 0x00	; 0
     fe4:	f1 2c       	mov	r15, r1
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	20 32       	cpi	r18, 0x20	; 32
     fea:	a0 f4       	brcc	.+40     	; 0x1014 <vfprintf+0x8e>
     fec:	8b 32       	cpi	r24, 0x2B	; 43
     fee:	69 f0       	breq	.+26     	; 0x100a <vfprintf+0x84>
     ff0:	30 f4       	brcc	.+12     	; 0xffe <vfprintf+0x78>
     ff2:	80 32       	cpi	r24, 0x20	; 32
     ff4:	59 f0       	breq	.+22     	; 0x100c <vfprintf+0x86>
     ff6:	83 32       	cpi	r24, 0x23	; 35
     ff8:	69 f4       	brne	.+26     	; 0x1014 <vfprintf+0x8e>
     ffa:	20 61       	ori	r18, 0x10	; 16
     ffc:	2c c0       	rjmp	.+88     	; 0x1056 <vfprintf+0xd0>
     ffe:	8d 32       	cpi	r24, 0x2D	; 45
    1000:	39 f0       	breq	.+14     	; 0x1010 <vfprintf+0x8a>
    1002:	80 33       	cpi	r24, 0x30	; 48
    1004:	39 f4       	brne	.+14     	; 0x1014 <vfprintf+0x8e>
    1006:	21 60       	ori	r18, 0x01	; 1
    1008:	26 c0       	rjmp	.+76     	; 0x1056 <vfprintf+0xd0>
    100a:	22 60       	ori	r18, 0x02	; 2
    100c:	24 60       	ori	r18, 0x04	; 4
    100e:	23 c0       	rjmp	.+70     	; 0x1056 <vfprintf+0xd0>
    1010:	28 60       	ori	r18, 0x08	; 8
    1012:	21 c0       	rjmp	.+66     	; 0x1056 <vfprintf+0xd0>
    1014:	27 fd       	sbrc	r18, 7
    1016:	27 c0       	rjmp	.+78     	; 0x1066 <vfprintf+0xe0>
    1018:	30 ed       	ldi	r19, 0xD0	; 208
    101a:	38 0f       	add	r19, r24
    101c:	3a 30       	cpi	r19, 0x0A	; 10
    101e:	78 f4       	brcc	.+30     	; 0x103e <vfprintf+0xb8>
    1020:	26 ff       	sbrs	r18, 6
    1022:	06 c0       	rjmp	.+12     	; 0x1030 <vfprintf+0xaa>
    1024:	fa e0       	ldi	r31, 0x0A	; 10
    1026:	1f 9f       	mul	r17, r31
    1028:	30 0d       	add	r19, r0
    102a:	11 24       	eor	r1, r1
    102c:	13 2f       	mov	r17, r19
    102e:	13 c0       	rjmp	.+38     	; 0x1056 <vfprintf+0xd0>
    1030:	4a e0       	ldi	r20, 0x0A	; 10
    1032:	f4 9e       	mul	r15, r20
    1034:	30 0d       	add	r19, r0
    1036:	11 24       	eor	r1, r1
    1038:	f3 2e       	mov	r15, r19
    103a:	20 62       	ori	r18, 0x20	; 32
    103c:	0c c0       	rjmp	.+24     	; 0x1056 <vfprintf+0xd0>
    103e:	8e 32       	cpi	r24, 0x2E	; 46
    1040:	21 f4       	brne	.+8      	; 0x104a <vfprintf+0xc4>
    1042:	26 fd       	sbrc	r18, 6
    1044:	ee c2       	rjmp	.+1500   	; 0x1622 <vfprintf+0x69c>
    1046:	20 64       	ori	r18, 0x40	; 64
    1048:	06 c0       	rjmp	.+12     	; 0x1056 <vfprintf+0xd0>
    104a:	8c 36       	cpi	r24, 0x6C	; 108
    104c:	11 f4       	brne	.+4      	; 0x1052 <vfprintf+0xcc>
    104e:	20 68       	ori	r18, 0x80	; 128
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0xd0>
    1052:	88 36       	cpi	r24, 0x68	; 104
    1054:	41 f4       	brne	.+16     	; 0x1066 <vfprintf+0xe0>
    1056:	f4 01       	movw	r30, r8
    1058:	93 fd       	sbrc	r25, 3
    105a:	85 91       	lpm	r24, Z+
    105c:	93 ff       	sbrs	r25, 3
    105e:	81 91       	ld	r24, Z+
    1060:	4f 01       	movw	r8, r30
    1062:	81 11       	cpse	r24, r1
    1064:	c1 cf       	rjmp	.-126    	; 0xfe8 <vfprintf+0x62>
    1066:	9b eb       	ldi	r25, 0xBB	; 187
    1068:	98 0f       	add	r25, r24
    106a:	93 30       	cpi	r25, 0x03	; 3
    106c:	18 f4       	brcc	.+6      	; 0x1074 <vfprintf+0xee>
    106e:	20 61       	ori	r18, 0x10	; 16
    1070:	80 5e       	subi	r24, 0xE0	; 224
    1072:	06 c0       	rjmp	.+12     	; 0x1080 <vfprintf+0xfa>
    1074:	9b e9       	ldi	r25, 0x9B	; 155
    1076:	98 0f       	add	r25, r24
    1078:	93 30       	cpi	r25, 0x03	; 3
    107a:	08 f0       	brcs	.+2      	; 0x107e <vfprintf+0xf8>
    107c:	71 c1       	rjmp	.+738    	; 0x1360 <vfprintf+0x3da>
    107e:	2f 7e       	andi	r18, 0xEF	; 239
    1080:	26 ff       	sbrs	r18, 6
    1082:	16 e0       	ldi	r17, 0x06	; 6
    1084:	2f 73       	andi	r18, 0x3F	; 63
    1086:	32 2e       	mov	r3, r18
    1088:	85 36       	cpi	r24, 0x65	; 101
    108a:	19 f4       	brne	.+6      	; 0x1092 <vfprintf+0x10c>
    108c:	20 64       	ori	r18, 0x40	; 64
    108e:	32 2e       	mov	r3, r18
    1090:	08 c0       	rjmp	.+16     	; 0x10a2 <vfprintf+0x11c>
    1092:	86 36       	cpi	r24, 0x66	; 102
    1094:	21 f4       	brne	.+8      	; 0x109e <vfprintf+0x118>
    1096:	f2 2f       	mov	r31, r18
    1098:	f0 68       	ori	r31, 0x80	; 128
    109a:	3f 2e       	mov	r3, r31
    109c:	02 c0       	rjmp	.+4      	; 0x10a2 <vfprintf+0x11c>
    109e:	11 11       	cpse	r17, r1
    10a0:	11 50       	subi	r17, 0x01	; 1
    10a2:	37 fe       	sbrs	r3, 7
    10a4:	07 c0       	rjmp	.+14     	; 0x10b4 <vfprintf+0x12e>
    10a6:	1c 33       	cpi	r17, 0x3C	; 60
    10a8:	50 f4       	brcc	.+20     	; 0x10be <vfprintf+0x138>
    10aa:	ee 24       	eor	r14, r14
    10ac:	e3 94       	inc	r14
    10ae:	e1 0e       	add	r14, r17
    10b0:	27 e0       	ldi	r18, 0x07	; 7
    10b2:	0b c0       	rjmp	.+22     	; 0x10ca <vfprintf+0x144>
    10b4:	18 30       	cpi	r17, 0x08	; 8
    10b6:	38 f0       	brcs	.+14     	; 0x10c6 <vfprintf+0x140>
    10b8:	27 e0       	ldi	r18, 0x07	; 7
    10ba:	17 e0       	ldi	r17, 0x07	; 7
    10bc:	05 c0       	rjmp	.+10     	; 0x10c8 <vfprintf+0x142>
    10be:	27 e0       	ldi	r18, 0x07	; 7
    10c0:	4c e3       	ldi	r20, 0x3C	; 60
    10c2:	e4 2e       	mov	r14, r20
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <vfprintf+0x144>
    10c6:	21 2f       	mov	r18, r17
    10c8:	e1 2c       	mov	r14, r1
    10ca:	52 01       	movw	r10, r4
    10cc:	44 e0       	ldi	r20, 0x04	; 4
    10ce:	a4 0e       	add	r10, r20
    10d0:	b1 1c       	adc	r11, r1
    10d2:	f2 01       	movw	r30, r4
    10d4:	60 81       	ld	r22, Z
    10d6:	71 81       	ldd	r23, Z+1	; 0x01
    10d8:	82 81       	ldd	r24, Z+2	; 0x02
    10da:	93 81       	ldd	r25, Z+3	; 0x03
    10dc:	0e 2d       	mov	r16, r14
    10de:	a3 01       	movw	r20, r6
    10e0:	0e 94 76 0b 	call	0x16ec	; 0x16ec <__ftoa_engine>
    10e4:	2c 01       	movw	r4, r24
    10e6:	09 81       	ldd	r16, Y+1	; 0x01
    10e8:	00 ff       	sbrs	r16, 0
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <vfprintf+0x16a>
    10ec:	03 ff       	sbrs	r16, 3
    10ee:	07 c0       	rjmp	.+14     	; 0x10fe <vfprintf+0x178>
    10f0:	31 fc       	sbrc	r3, 1
    10f2:	08 c0       	rjmp	.+16     	; 0x1104 <vfprintf+0x17e>
    10f4:	32 fe       	sbrs	r3, 2
    10f6:	09 c0       	rjmp	.+18     	; 0x110a <vfprintf+0x184>
    10f8:	30 e2       	ldi	r19, 0x20	; 32
    10fa:	23 2e       	mov	r2, r19
    10fc:	07 c0       	rjmp	.+14     	; 0x110c <vfprintf+0x186>
    10fe:	2d e2       	ldi	r18, 0x2D	; 45
    1100:	22 2e       	mov	r2, r18
    1102:	04 c0       	rjmp	.+8      	; 0x110c <vfprintf+0x186>
    1104:	9b e2       	ldi	r25, 0x2B	; 43
    1106:	29 2e       	mov	r2, r25
    1108:	01 c0       	rjmp	.+2      	; 0x110c <vfprintf+0x186>
    110a:	21 2c       	mov	r2, r1
    110c:	80 2f       	mov	r24, r16
    110e:	8c 70       	andi	r24, 0x0C	; 12
    1110:	19 f0       	breq	.+6      	; 0x1118 <vfprintf+0x192>
    1112:	21 10       	cpse	r2, r1
    1114:	68 c2       	rjmp	.+1232   	; 0x15e6 <vfprintf+0x660>
    1116:	a8 c2       	rjmp	.+1360   	; 0x1668 <vfprintf+0x6e2>
    1118:	37 fe       	sbrs	r3, 7
    111a:	0f c0       	rjmp	.+30     	; 0x113a <vfprintf+0x1b4>
    111c:	e4 0c       	add	r14, r4
    111e:	04 ff       	sbrs	r16, 4
    1120:	04 c0       	rjmp	.+8      	; 0x112a <vfprintf+0x1a4>
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	81 33       	cpi	r24, 0x31	; 49
    1126:	09 f4       	brne	.+2      	; 0x112a <vfprintf+0x1a4>
    1128:	ea 94       	dec	r14
    112a:	1e 14       	cp	r1, r14
    112c:	74 f5       	brge	.+92     	; 0x118a <vfprintf+0x204>
    112e:	f8 e0       	ldi	r31, 0x08	; 8
    1130:	fe 15       	cp	r31, r14
    1132:	78 f5       	brcc	.+94     	; 0x1192 <vfprintf+0x20c>
    1134:	88 e0       	ldi	r24, 0x08	; 8
    1136:	e8 2e       	mov	r14, r24
    1138:	2c c0       	rjmp	.+88     	; 0x1192 <vfprintf+0x20c>
    113a:	36 fc       	sbrc	r3, 6
    113c:	2a c0       	rjmp	.+84     	; 0x1192 <vfprintf+0x20c>
    113e:	81 2f       	mov	r24, r17
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	84 15       	cp	r24, r4
    1144:	95 05       	cpc	r25, r5
    1146:	9c f0       	brlt	.+38     	; 0x116e <vfprintf+0x1e8>
    1148:	2c ef       	ldi	r18, 0xFC	; 252
    114a:	42 16       	cp	r4, r18
    114c:	2f ef       	ldi	r18, 0xFF	; 255
    114e:	52 06       	cpc	r5, r18
    1150:	74 f0       	brlt	.+28     	; 0x116e <vfprintf+0x1e8>
    1152:	43 2d       	mov	r20, r3
    1154:	40 68       	ori	r20, 0x80	; 128
    1156:	34 2e       	mov	r3, r20
    1158:	0a c0       	rjmp	.+20     	; 0x116e <vfprintf+0x1e8>
    115a:	e2 e0       	ldi	r30, 0x02	; 2
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	ec 0f       	add	r30, r28
    1160:	fd 1f       	adc	r31, r29
    1162:	e1 0f       	add	r30, r17
    1164:	f1 1d       	adc	r31, r1
    1166:	80 81       	ld	r24, Z
    1168:	80 33       	cpi	r24, 0x30	; 48
    116a:	19 f4       	brne	.+6      	; 0x1172 <vfprintf+0x1ec>
    116c:	11 50       	subi	r17, 0x01	; 1
    116e:	11 11       	cpse	r17, r1
    1170:	f4 cf       	rjmp	.-24     	; 0x115a <vfprintf+0x1d4>
    1172:	37 fe       	sbrs	r3, 7
    1174:	0e c0       	rjmp	.+28     	; 0x1192 <vfprintf+0x20c>
    1176:	ee 24       	eor	r14, r14
    1178:	e3 94       	inc	r14
    117a:	e1 0e       	add	r14, r17
    117c:	81 2f       	mov	r24, r17
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	48 16       	cp	r4, r24
    1182:	59 06       	cpc	r5, r25
    1184:	2c f4       	brge	.+10     	; 0x1190 <vfprintf+0x20a>
    1186:	14 19       	sub	r17, r4
    1188:	04 c0       	rjmp	.+8      	; 0x1192 <vfprintf+0x20c>
    118a:	ee 24       	eor	r14, r14
    118c:	e3 94       	inc	r14
    118e:	01 c0       	rjmp	.+2      	; 0x1192 <vfprintf+0x20c>
    1190:	10 e0       	ldi	r17, 0x00	; 0
    1192:	37 fe       	sbrs	r3, 7
    1194:	06 c0       	rjmp	.+12     	; 0x11a2 <vfprintf+0x21c>
    1196:	14 14       	cp	r1, r4
    1198:	15 04       	cpc	r1, r5
    119a:	34 f4       	brge	.+12     	; 0x11a8 <vfprintf+0x222>
    119c:	c2 01       	movw	r24, r4
    119e:	01 96       	adiw	r24, 0x01	; 1
    11a0:	05 c0       	rjmp	.+10     	; 0x11ac <vfprintf+0x226>
    11a2:	85 e0       	ldi	r24, 0x05	; 5
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x226>
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	21 10       	cpse	r2, r1
    11ae:	01 96       	adiw	r24, 0x01	; 1
    11b0:	11 23       	and	r17, r17
    11b2:	31 f0       	breq	.+12     	; 0x11c0 <vfprintf+0x23a>
    11b4:	21 2f       	mov	r18, r17
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	2f 5f       	subi	r18, 0xFF	; 255
    11ba:	3f 4f       	sbci	r19, 0xFF	; 255
    11bc:	82 0f       	add	r24, r18
    11be:	93 1f       	adc	r25, r19
    11c0:	2f 2d       	mov	r18, r15
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	82 17       	cp	r24, r18
    11c6:	93 07       	cpc	r25, r19
    11c8:	14 f4       	brge	.+4      	; 0x11ce <vfprintf+0x248>
    11ca:	f8 1a       	sub	r15, r24
    11cc:	01 c0       	rjmp	.+2      	; 0x11d0 <vfprintf+0x24a>
    11ce:	f1 2c       	mov	r15, r1
    11d0:	83 2d       	mov	r24, r3
    11d2:	89 70       	andi	r24, 0x09	; 9
    11d4:	49 f4       	brne	.+18     	; 0x11e8 <vfprintf+0x262>
    11d6:	ff 20       	and	r15, r15
    11d8:	39 f0       	breq	.+14     	; 0x11e8 <vfprintf+0x262>
    11da:	b6 01       	movw	r22, r12
    11dc:	80 e2       	ldi	r24, 0x20	; 32
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    11e4:	fa 94       	dec	r15
    11e6:	f7 cf       	rjmp	.-18     	; 0x11d6 <vfprintf+0x250>
    11e8:	22 20       	and	r2, r2
    11ea:	29 f0       	breq	.+10     	; 0x11f6 <vfprintf+0x270>
    11ec:	b6 01       	movw	r22, r12
    11ee:	82 2d       	mov	r24, r2
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    11f6:	33 fc       	sbrc	r3, 3
    11f8:	09 c0       	rjmp	.+18     	; 0x120c <vfprintf+0x286>
    11fa:	ff 20       	and	r15, r15
    11fc:	39 f0       	breq	.+14     	; 0x120c <vfprintf+0x286>
    11fe:	b6 01       	movw	r22, r12
    1200:	80 e3       	ldi	r24, 0x30	; 48
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1208:	fa 94       	dec	r15
    120a:	f7 cf       	rjmp	.-18     	; 0x11fa <vfprintf+0x274>
    120c:	37 fe       	sbrs	r3, 7
    120e:	5a c0       	rjmp	.+180    	; 0x12c4 <vfprintf+0x33e>
    1210:	94 2d       	mov	r25, r4
    1212:	85 2d       	mov	r24, r5
    1214:	57 fe       	sbrs	r5, 7
    1216:	02 c0       	rjmp	.+4      	; 0x121c <vfprintf+0x296>
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	29 2e       	mov	r2, r25
    121e:	38 2e       	mov	r3, r24
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	a2 01       	movw	r20, r4
    1226:	4e 19       	sub	r20, r14
    1228:	51 09       	sbc	r21, r1
    122a:	5d 87       	std	Y+13, r21	; 0x0d
    122c:	4c 87       	std	Y+12, r20	; 0x0c
    122e:	a2 01       	movw	r20, r4
    1230:	42 19       	sub	r20, r2
    1232:	53 09       	sbc	r21, r3
    1234:	5f 87       	std	Y+15, r21	; 0x0f
    1236:	4e 87       	std	Y+14, r20	; 0x0e
    1238:	61 2f       	mov	r22, r17
    123a:	70 e0       	ldi	r23, 0x00	; 0
    123c:	44 27       	eor	r20, r20
    123e:	55 27       	eor	r21, r21
    1240:	46 1b       	sub	r20, r22
    1242:	57 0b       	sbc	r21, r23
    1244:	59 8b       	std	Y+17, r21	; 0x11
    1246:	48 8b       	std	Y+16, r20	; 0x10
    1248:	5f ef       	ldi	r21, 0xFF	; 255
    124a:	25 16       	cp	r2, r21
    124c:	35 06       	cpc	r3, r21
    124e:	49 f4       	brne	.+18     	; 0x1262 <vfprintf+0x2dc>
    1250:	b6 01       	movw	r22, r12
    1252:	8e e2       	ldi	r24, 0x2E	; 46
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	2a 8b       	std	Y+18, r18	; 0x12
    1258:	3b 8b       	std	Y+19, r19	; 0x13
    125a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    125e:	3b 89       	ldd	r19, Y+19	; 0x13
    1260:	2a 89       	ldd	r18, Y+18	; 0x12
    1262:	42 14       	cp	r4, r2
    1264:	53 04       	cpc	r5, r3
    1266:	6c f0       	brlt	.+26     	; 0x1282 <vfprintf+0x2fc>
    1268:	4c 85       	ldd	r20, Y+12	; 0x0c
    126a:	5d 85       	ldd	r21, Y+13	; 0x0d
    126c:	42 15       	cp	r20, r2
    126e:	53 05       	cpc	r21, r3
    1270:	44 f4       	brge	.+16     	; 0x1282 <vfprintf+0x2fc>
    1272:	ee 85       	ldd	r30, Y+14	; 0x0e
    1274:	ff 85       	ldd	r31, Y+15	; 0x0f
    1276:	e2 0f       	add	r30, r18
    1278:	f3 1f       	adc	r31, r19
    127a:	e6 0d       	add	r30, r6
    127c:	f7 1d       	adc	r31, r7
    127e:	81 81       	ldd	r24, Z+1	; 0x01
    1280:	01 c0       	rjmp	.+2      	; 0x1284 <vfprintf+0x2fe>
    1282:	80 e3       	ldi	r24, 0x30	; 48
    1284:	51 e0       	ldi	r21, 0x01	; 1
    1286:	25 1a       	sub	r2, r21
    1288:	31 08       	sbc	r3, r1
    128a:	2f 5f       	subi	r18, 0xFF	; 255
    128c:	3f 4f       	sbci	r19, 0xFF	; 255
    128e:	48 89       	ldd	r20, Y+16	; 0x10
    1290:	59 89       	ldd	r21, Y+17	; 0x11
    1292:	24 16       	cp	r2, r20
    1294:	35 06       	cpc	r3, r21
    1296:	4c f0       	brlt	.+18     	; 0x12aa <vfprintf+0x324>
    1298:	b6 01       	movw	r22, r12
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	2a 8b       	std	Y+18, r18	; 0x12
    129e:	3b 8b       	std	Y+19, r19	; 0x13
    12a0:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    12a4:	2a 89       	ldd	r18, Y+18	; 0x12
    12a6:	3b 89       	ldd	r19, Y+19	; 0x13
    12a8:	cf cf       	rjmp	.-98     	; 0x1248 <vfprintf+0x2c2>
    12aa:	24 14       	cp	r2, r4
    12ac:	35 04       	cpc	r3, r5
    12ae:	39 f4       	brne	.+14     	; 0x12be <vfprintf+0x338>
    12b0:	9a 81       	ldd	r25, Y+2	; 0x02
    12b2:	96 33       	cpi	r25, 0x36	; 54
    12b4:	18 f4       	brcc	.+6      	; 0x12bc <vfprintf+0x336>
    12b6:	95 33       	cpi	r25, 0x35	; 53
    12b8:	11 f4       	brne	.+4      	; 0x12be <vfprintf+0x338>
    12ba:	04 ff       	sbrs	r16, 4
    12bc:	81 e3       	ldi	r24, 0x31	; 49
    12be:	b6 01       	movw	r22, r12
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	4b c0       	rjmp	.+150    	; 0x135a <vfprintf+0x3d4>
    12c4:	8a 81       	ldd	r24, Y+2	; 0x02
    12c6:	81 33       	cpi	r24, 0x31	; 49
    12c8:	09 f0       	breq	.+2      	; 0x12cc <vfprintf+0x346>
    12ca:	0f 7e       	andi	r16, 0xEF	; 239
    12cc:	b6 01       	movw	r22, r12
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    12d4:	11 11       	cpse	r17, r1
    12d6:	05 c0       	rjmp	.+10     	; 0x12e2 <vfprintf+0x35c>
    12d8:	34 fc       	sbrc	r3, 4
    12da:	18 c0       	rjmp	.+48     	; 0x130c <vfprintf+0x386>
    12dc:	85 e6       	ldi	r24, 0x65	; 101
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	17 c0       	rjmp	.+46     	; 0x1310 <vfprintf+0x38a>
    12e2:	b6 01       	movw	r22, r12
    12e4:	8e e2       	ldi	r24, 0x2E	; 46
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    12ec:	82 e0       	ldi	r24, 0x02	; 2
    12ee:	ee 24       	eor	r14, r14
    12f0:	e3 94       	inc	r14
    12f2:	e8 0e       	add	r14, r24
    12f4:	f3 01       	movw	r30, r6
    12f6:	e8 0f       	add	r30, r24
    12f8:	f1 1d       	adc	r31, r1
    12fa:	80 81       	ld	r24, Z
    12fc:	b6 01       	movw	r22, r12
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1304:	11 50       	subi	r17, 0x01	; 1
    1306:	8e 2d       	mov	r24, r14
    1308:	91 f7       	brne	.-28     	; 0x12ee <vfprintf+0x368>
    130a:	e6 cf       	rjmp	.-52     	; 0x12d8 <vfprintf+0x352>
    130c:	85 e4       	ldi	r24, 0x45	; 69
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	b6 01       	movw	r22, r12
    1312:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1316:	57 fc       	sbrc	r5, 7
    1318:	05 c0       	rjmp	.+10     	; 0x1324 <vfprintf+0x39e>
    131a:	41 14       	cp	r4, r1
    131c:	51 04       	cpc	r5, r1
    131e:	39 f4       	brne	.+14     	; 0x132e <vfprintf+0x3a8>
    1320:	04 ff       	sbrs	r16, 4
    1322:	05 c0       	rjmp	.+10     	; 0x132e <vfprintf+0x3a8>
    1324:	51 94       	neg	r5
    1326:	41 94       	neg	r4
    1328:	51 08       	sbc	r5, r1
    132a:	8d e2       	ldi	r24, 0x2D	; 45
    132c:	01 c0       	rjmp	.+2      	; 0x1330 <vfprintf+0x3aa>
    132e:	8b e2       	ldi	r24, 0x2B	; 43
    1330:	b6 01       	movw	r22, r12
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1338:	80 e3       	ldi	r24, 0x30	; 48
    133a:	9a e0       	ldi	r25, 0x0A	; 10
    133c:	49 16       	cp	r4, r25
    133e:	51 04       	cpc	r5, r1
    1340:	2c f0       	brlt	.+10     	; 0x134c <vfprintf+0x3c6>
    1342:	8f 5f       	subi	r24, 0xFF	; 255
    1344:	5a e0       	ldi	r21, 0x0A	; 10
    1346:	45 1a       	sub	r4, r21
    1348:	51 08       	sbc	r5, r1
    134a:	f7 cf       	rjmp	.-18     	; 0x133a <vfprintf+0x3b4>
    134c:	b6 01       	movw	r22, r12
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1354:	b6 01       	movw	r22, r12
    1356:	c2 01       	movw	r24, r4
    1358:	c0 96       	adiw	r24, 0x30	; 48
    135a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    135e:	57 c1       	rjmp	.+686    	; 0x160e <vfprintf+0x688>
    1360:	83 36       	cpi	r24, 0x63	; 99
    1362:	31 f0       	breq	.+12     	; 0x1370 <vfprintf+0x3ea>
    1364:	83 37       	cpi	r24, 0x73	; 115
    1366:	79 f0       	breq	.+30     	; 0x1386 <vfprintf+0x400>
    1368:	83 35       	cpi	r24, 0x53	; 83
    136a:	09 f0       	breq	.+2      	; 0x136e <vfprintf+0x3e8>
    136c:	58 c0       	rjmp	.+176    	; 0x141e <vfprintf+0x498>
    136e:	21 c0       	rjmp	.+66     	; 0x13b2 <vfprintf+0x42c>
    1370:	52 01       	movw	r10, r4
    1372:	e2 e0       	ldi	r30, 0x02	; 2
    1374:	ae 0e       	add	r10, r30
    1376:	b1 1c       	adc	r11, r1
    1378:	f2 01       	movw	r30, r4
    137a:	80 81       	ld	r24, Z
    137c:	89 83       	std	Y+1, r24	; 0x01
    137e:	01 e0       	ldi	r16, 0x01	; 1
    1380:	10 e0       	ldi	r17, 0x00	; 0
    1382:	23 01       	movw	r4, r6
    1384:	14 c0       	rjmp	.+40     	; 0x13ae <vfprintf+0x428>
    1386:	52 01       	movw	r10, r4
    1388:	f2 e0       	ldi	r31, 0x02	; 2
    138a:	af 0e       	add	r10, r31
    138c:	b1 1c       	adc	r11, r1
    138e:	f2 01       	movw	r30, r4
    1390:	40 80       	ld	r4, Z
    1392:	51 80       	ldd	r5, Z+1	; 0x01
    1394:	26 ff       	sbrs	r18, 6
    1396:	03 c0       	rjmp	.+6      	; 0x139e <vfprintf+0x418>
    1398:	61 2f       	mov	r22, r17
    139a:	70 e0       	ldi	r23, 0x00	; 0
    139c:	02 c0       	rjmp	.+4      	; 0x13a2 <vfprintf+0x41c>
    139e:	6f ef       	ldi	r22, 0xFF	; 255
    13a0:	7f ef       	ldi	r23, 0xFF	; 255
    13a2:	c2 01       	movw	r24, r4
    13a4:	2a 8b       	std	Y+18, r18	; 0x12
    13a6:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <strnlen>
    13aa:	8c 01       	movw	r16, r24
    13ac:	2a 89       	ldd	r18, Y+18	; 0x12
    13ae:	2f 77       	andi	r18, 0x7F	; 127
    13b0:	15 c0       	rjmp	.+42     	; 0x13dc <vfprintf+0x456>
    13b2:	52 01       	movw	r10, r4
    13b4:	f2 e0       	ldi	r31, 0x02	; 2
    13b6:	af 0e       	add	r10, r31
    13b8:	b1 1c       	adc	r11, r1
    13ba:	f2 01       	movw	r30, r4
    13bc:	40 80       	ld	r4, Z
    13be:	51 80       	ldd	r5, Z+1	; 0x01
    13c0:	26 ff       	sbrs	r18, 6
    13c2:	03 c0       	rjmp	.+6      	; 0x13ca <vfprintf+0x444>
    13c4:	61 2f       	mov	r22, r17
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	02 c0       	rjmp	.+4      	; 0x13ce <vfprintf+0x448>
    13ca:	6f ef       	ldi	r22, 0xFF	; 255
    13cc:	7f ef       	ldi	r23, 0xFF	; 255
    13ce:	c2 01       	movw	r24, r4
    13d0:	2a 8b       	std	Y+18, r18	; 0x12
    13d2:	0e 94 4e 0c 	call	0x189c	; 0x189c <strnlen_P>
    13d6:	8c 01       	movw	r16, r24
    13d8:	2a 89       	ldd	r18, Y+18	; 0x12
    13da:	20 68       	ori	r18, 0x80	; 128
    13dc:	32 2e       	mov	r3, r18
    13de:	23 fd       	sbrc	r18, 3
    13e0:	1a c0       	rjmp	.+52     	; 0x1416 <vfprintf+0x490>
    13e2:	8f 2d       	mov	r24, r15
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	08 17       	cp	r16, r24
    13e8:	19 07       	cpc	r17, r25
    13ea:	a8 f4       	brcc	.+42     	; 0x1416 <vfprintf+0x490>
    13ec:	b6 01       	movw	r22, r12
    13ee:	80 e2       	ldi	r24, 0x20	; 32
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    13f6:	fa 94       	dec	r15
    13f8:	f4 cf       	rjmp	.-24     	; 0x13e2 <vfprintf+0x45c>
    13fa:	f2 01       	movw	r30, r4
    13fc:	37 fc       	sbrc	r3, 7
    13fe:	85 91       	lpm	r24, Z+
    1400:	37 fe       	sbrs	r3, 7
    1402:	81 91       	ld	r24, Z+
    1404:	2f 01       	movw	r4, r30
    1406:	b6 01       	movw	r22, r12
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    140e:	f1 10       	cpse	r15, r1
    1410:	fa 94       	dec	r15
    1412:	01 50       	subi	r16, 0x01	; 1
    1414:	11 09       	sbc	r17, r1
    1416:	01 15       	cp	r16, r1
    1418:	11 05       	cpc	r17, r1
    141a:	79 f7       	brne	.-34     	; 0x13fa <vfprintf+0x474>
    141c:	f8 c0       	rjmp	.+496    	; 0x160e <vfprintf+0x688>
    141e:	84 36       	cpi	r24, 0x64	; 100
    1420:	11 f0       	breq	.+4      	; 0x1426 <vfprintf+0x4a0>
    1422:	89 36       	cpi	r24, 0x69	; 105
    1424:	59 f5       	brne	.+86     	; 0x147c <vfprintf+0x4f6>
    1426:	52 01       	movw	r10, r4
    1428:	27 ff       	sbrs	r18, 7
    142a:	09 c0       	rjmp	.+18     	; 0x143e <vfprintf+0x4b8>
    142c:	f4 e0       	ldi	r31, 0x04	; 4
    142e:	af 0e       	add	r10, r31
    1430:	b1 1c       	adc	r11, r1
    1432:	f2 01       	movw	r30, r4
    1434:	60 81       	ld	r22, Z
    1436:	71 81       	ldd	r23, Z+1	; 0x01
    1438:	82 81       	ldd	r24, Z+2	; 0x02
    143a:	93 81       	ldd	r25, Z+3	; 0x03
    143c:	0a c0       	rjmp	.+20     	; 0x1452 <vfprintf+0x4cc>
    143e:	f2 e0       	ldi	r31, 0x02	; 2
    1440:	af 0e       	add	r10, r31
    1442:	b1 1c       	adc	r11, r1
    1444:	f2 01       	movw	r30, r4
    1446:	60 81       	ld	r22, Z
    1448:	71 81       	ldd	r23, Z+1	; 0x01
    144a:	07 2e       	mov	r0, r23
    144c:	00 0c       	add	r0, r0
    144e:	88 0b       	sbc	r24, r24
    1450:	99 0b       	sbc	r25, r25
    1452:	2f 76       	andi	r18, 0x6F	; 111
    1454:	32 2e       	mov	r3, r18
    1456:	97 ff       	sbrs	r25, 7
    1458:	09 c0       	rjmp	.+18     	; 0x146c <vfprintf+0x4e6>
    145a:	90 95       	com	r25
    145c:	80 95       	com	r24
    145e:	70 95       	com	r23
    1460:	61 95       	neg	r22
    1462:	7f 4f       	sbci	r23, 0xFF	; 255
    1464:	8f 4f       	sbci	r24, 0xFF	; 255
    1466:	9f 4f       	sbci	r25, 0xFF	; 255
    1468:	20 68       	ori	r18, 0x80	; 128
    146a:	32 2e       	mov	r3, r18
    146c:	2a e0       	ldi	r18, 0x0A	; 10
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	a3 01       	movw	r20, r6
    1472:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__ultoa_invert>
    1476:	e8 2e       	mov	r14, r24
    1478:	e6 18       	sub	r14, r6
    147a:	3f c0       	rjmp	.+126    	; 0x14fa <vfprintf+0x574>
    147c:	02 2f       	mov	r16, r18
    147e:	85 37       	cpi	r24, 0x75	; 117
    1480:	21 f4       	brne	.+8      	; 0x148a <vfprintf+0x504>
    1482:	0f 7e       	andi	r16, 0xEF	; 239
    1484:	2a e0       	ldi	r18, 0x0A	; 10
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	1d c0       	rjmp	.+58     	; 0x14c4 <vfprintf+0x53e>
    148a:	09 7f       	andi	r16, 0xF9	; 249
    148c:	8f 36       	cpi	r24, 0x6F	; 111
    148e:	91 f0       	breq	.+36     	; 0x14b4 <vfprintf+0x52e>
    1490:	18 f4       	brcc	.+6      	; 0x1498 <vfprintf+0x512>
    1492:	88 35       	cpi	r24, 0x58	; 88
    1494:	59 f0       	breq	.+22     	; 0x14ac <vfprintf+0x526>
    1496:	c5 c0       	rjmp	.+394    	; 0x1622 <vfprintf+0x69c>
    1498:	80 37       	cpi	r24, 0x70	; 112
    149a:	19 f0       	breq	.+6      	; 0x14a2 <vfprintf+0x51c>
    149c:	88 37       	cpi	r24, 0x78	; 120
    149e:	11 f0       	breq	.+4      	; 0x14a4 <vfprintf+0x51e>
    14a0:	c0 c0       	rjmp	.+384    	; 0x1622 <vfprintf+0x69c>
    14a2:	00 61       	ori	r16, 0x10	; 16
    14a4:	04 ff       	sbrs	r16, 4
    14a6:	09 c0       	rjmp	.+18     	; 0x14ba <vfprintf+0x534>
    14a8:	04 60       	ori	r16, 0x04	; 4
    14aa:	07 c0       	rjmp	.+14     	; 0x14ba <vfprintf+0x534>
    14ac:	24 ff       	sbrs	r18, 4
    14ae:	08 c0       	rjmp	.+16     	; 0x14c0 <vfprintf+0x53a>
    14b0:	06 60       	ori	r16, 0x06	; 6
    14b2:	06 c0       	rjmp	.+12     	; 0x14c0 <vfprintf+0x53a>
    14b4:	28 e0       	ldi	r18, 0x08	; 8
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	05 c0       	rjmp	.+10     	; 0x14c4 <vfprintf+0x53e>
    14ba:	20 e1       	ldi	r18, 0x10	; 16
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	02 c0       	rjmp	.+4      	; 0x14c4 <vfprintf+0x53e>
    14c0:	20 e1       	ldi	r18, 0x10	; 16
    14c2:	32 e0       	ldi	r19, 0x02	; 2
    14c4:	52 01       	movw	r10, r4
    14c6:	07 ff       	sbrs	r16, 7
    14c8:	09 c0       	rjmp	.+18     	; 0x14dc <vfprintf+0x556>
    14ca:	f4 e0       	ldi	r31, 0x04	; 4
    14cc:	af 0e       	add	r10, r31
    14ce:	b1 1c       	adc	r11, r1
    14d0:	f2 01       	movw	r30, r4
    14d2:	60 81       	ld	r22, Z
    14d4:	71 81       	ldd	r23, Z+1	; 0x01
    14d6:	82 81       	ldd	r24, Z+2	; 0x02
    14d8:	93 81       	ldd	r25, Z+3	; 0x03
    14da:	08 c0       	rjmp	.+16     	; 0x14ec <vfprintf+0x566>
    14dc:	f2 e0       	ldi	r31, 0x02	; 2
    14de:	af 0e       	add	r10, r31
    14e0:	b1 1c       	adc	r11, r1
    14e2:	f2 01       	movw	r30, r4
    14e4:	60 81       	ld	r22, Z
    14e6:	71 81       	ldd	r23, Z+1	; 0x01
    14e8:	80 e0       	ldi	r24, 0x00	; 0
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	a3 01       	movw	r20, r6
    14ee:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__ultoa_invert>
    14f2:	e8 2e       	mov	r14, r24
    14f4:	e6 18       	sub	r14, r6
    14f6:	0f 77       	andi	r16, 0x7F	; 127
    14f8:	30 2e       	mov	r3, r16
    14fa:	36 fe       	sbrs	r3, 6
    14fc:	0b c0       	rjmp	.+22     	; 0x1514 <vfprintf+0x58e>
    14fe:	33 2d       	mov	r19, r3
    1500:	3e 7f       	andi	r19, 0xFE	; 254
    1502:	e1 16       	cp	r14, r17
    1504:	50 f4       	brcc	.+20     	; 0x151a <vfprintf+0x594>
    1506:	34 fe       	sbrs	r3, 4
    1508:	0a c0       	rjmp	.+20     	; 0x151e <vfprintf+0x598>
    150a:	32 fc       	sbrc	r3, 2
    150c:	08 c0       	rjmp	.+16     	; 0x151e <vfprintf+0x598>
    150e:	33 2d       	mov	r19, r3
    1510:	3e 7e       	andi	r19, 0xEE	; 238
    1512:	05 c0       	rjmp	.+10     	; 0x151e <vfprintf+0x598>
    1514:	0e 2d       	mov	r16, r14
    1516:	33 2d       	mov	r19, r3
    1518:	03 c0       	rjmp	.+6      	; 0x1520 <vfprintf+0x59a>
    151a:	0e 2d       	mov	r16, r14
    151c:	01 c0       	rjmp	.+2      	; 0x1520 <vfprintf+0x59a>
    151e:	01 2f       	mov	r16, r17
    1520:	34 ff       	sbrs	r19, 4
    1522:	0c c0       	rjmp	.+24     	; 0x153c <vfprintf+0x5b6>
    1524:	fe 01       	movw	r30, r28
    1526:	ee 0d       	add	r30, r14
    1528:	f1 1d       	adc	r31, r1
    152a:	80 81       	ld	r24, Z
    152c:	80 33       	cpi	r24, 0x30	; 48
    152e:	11 f4       	brne	.+4      	; 0x1534 <vfprintf+0x5ae>
    1530:	39 7e       	andi	r19, 0xE9	; 233
    1532:	08 c0       	rjmp	.+16     	; 0x1544 <vfprintf+0x5be>
    1534:	32 ff       	sbrs	r19, 2
    1536:	05 c0       	rjmp	.+10     	; 0x1542 <vfprintf+0x5bc>
    1538:	0e 5f       	subi	r16, 0xFE	; 254
    153a:	04 c0       	rjmp	.+8      	; 0x1544 <vfprintf+0x5be>
    153c:	83 2f       	mov	r24, r19
    153e:	86 78       	andi	r24, 0x86	; 134
    1540:	09 f0       	breq	.+2      	; 0x1544 <vfprintf+0x5be>
    1542:	0f 5f       	subi	r16, 0xFF	; 255
    1544:	33 fd       	sbrc	r19, 3
    1546:	13 c0       	rjmp	.+38     	; 0x156e <vfprintf+0x5e8>
    1548:	30 ff       	sbrs	r19, 0
    154a:	06 c0       	rjmp	.+12     	; 0x1558 <vfprintf+0x5d2>
    154c:	1e 2d       	mov	r17, r14
    154e:	0f 15       	cp	r16, r15
    1550:	18 f4       	brcc	.+6      	; 0x1558 <vfprintf+0x5d2>
    1552:	1f 0d       	add	r17, r15
    1554:	10 1b       	sub	r17, r16
    1556:	0f 2d       	mov	r16, r15
    1558:	0f 15       	cp	r16, r15
    155a:	68 f4       	brcc	.+26     	; 0x1576 <vfprintf+0x5f0>
    155c:	b6 01       	movw	r22, r12
    155e:	80 e2       	ldi	r24, 0x20	; 32
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	3b 8b       	std	Y+19, r19	; 0x13
    1564:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1568:	0f 5f       	subi	r16, 0xFF	; 255
    156a:	3b 89       	ldd	r19, Y+19	; 0x13
    156c:	f5 cf       	rjmp	.-22     	; 0x1558 <vfprintf+0x5d2>
    156e:	0f 15       	cp	r16, r15
    1570:	10 f4       	brcc	.+4      	; 0x1576 <vfprintf+0x5f0>
    1572:	f0 1a       	sub	r15, r16
    1574:	01 c0       	rjmp	.+2      	; 0x1578 <vfprintf+0x5f2>
    1576:	f1 2c       	mov	r15, r1
    1578:	34 ff       	sbrs	r19, 4
    157a:	12 c0       	rjmp	.+36     	; 0x15a0 <vfprintf+0x61a>
    157c:	b6 01       	movw	r22, r12
    157e:	80 e3       	ldi	r24, 0x30	; 48
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	3b 8b       	std	Y+19, r19	; 0x13
    1584:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1588:	3b 89       	ldd	r19, Y+19	; 0x13
    158a:	32 ff       	sbrs	r19, 2
    158c:	17 c0       	rjmp	.+46     	; 0x15bc <vfprintf+0x636>
    158e:	31 fd       	sbrc	r19, 1
    1590:	03 c0       	rjmp	.+6      	; 0x1598 <vfprintf+0x612>
    1592:	88 e7       	ldi	r24, 0x78	; 120
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	02 c0       	rjmp	.+4      	; 0x159c <vfprintf+0x616>
    1598:	88 e5       	ldi	r24, 0x58	; 88
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	b6 01       	movw	r22, r12
    159e:	0c c0       	rjmp	.+24     	; 0x15b8 <vfprintf+0x632>
    15a0:	83 2f       	mov	r24, r19
    15a2:	86 78       	andi	r24, 0x86	; 134
    15a4:	59 f0       	breq	.+22     	; 0x15bc <vfprintf+0x636>
    15a6:	31 ff       	sbrs	r19, 1
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <vfprintf+0x628>
    15aa:	8b e2       	ldi	r24, 0x2B	; 43
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <vfprintf+0x62a>
    15ae:	80 e2       	ldi	r24, 0x20	; 32
    15b0:	37 fd       	sbrc	r19, 7
    15b2:	8d e2       	ldi	r24, 0x2D	; 45
    15b4:	b6 01       	movw	r22, r12
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    15bc:	e1 16       	cp	r14, r17
    15be:	38 f4       	brcc	.+14     	; 0x15ce <vfprintf+0x648>
    15c0:	b6 01       	movw	r22, r12
    15c2:	80 e3       	ldi	r24, 0x30	; 48
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    15ca:	11 50       	subi	r17, 0x01	; 1
    15cc:	f7 cf       	rjmp	.-18     	; 0x15bc <vfprintf+0x636>
    15ce:	ea 94       	dec	r14
    15d0:	f3 01       	movw	r30, r6
    15d2:	ee 0d       	add	r30, r14
    15d4:	f1 1d       	adc	r31, r1
    15d6:	80 81       	ld	r24, Z
    15d8:	b6 01       	movw	r22, r12
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    15e0:	e1 10       	cpse	r14, r1
    15e2:	f5 cf       	rjmp	.-22     	; 0x15ce <vfprintf+0x648>
    15e4:	14 c0       	rjmp	.+40     	; 0x160e <vfprintf+0x688>
    15e6:	f4 e0       	ldi	r31, 0x04	; 4
    15e8:	ff 15       	cp	r31, r15
    15ea:	58 f5       	brcc	.+86     	; 0x1642 <vfprintf+0x6bc>
    15ec:	84 e0       	ldi	r24, 0x04	; 4
    15ee:	f8 1a       	sub	r15, r24
    15f0:	33 fe       	sbrs	r3, 3
    15f2:	1e c0       	rjmp	.+60     	; 0x1630 <vfprintf+0x6aa>
    15f4:	21 10       	cpse	r2, r1
    15f6:	26 c0       	rjmp	.+76     	; 0x1644 <vfprintf+0x6be>
    15f8:	03 ff       	sbrs	r16, 3
    15fa:	2a c0       	rjmp	.+84     	; 0x1650 <vfprintf+0x6ca>
    15fc:	08 e6       	ldi	r16, 0x68	; 104
    15fe:	10 e0       	ldi	r17, 0x00	; 0
    1600:	f3 2d       	mov	r31, r3
    1602:	f0 71       	andi	r31, 0x10	; 16
    1604:	3f 2e       	mov	r3, r31
    1606:	f8 01       	movw	r30, r16
    1608:	84 91       	lpm	r24, Z
    160a:	81 11       	cpse	r24, r1
    160c:	24 c0       	rjmp	.+72     	; 0x1656 <vfprintf+0x6d0>
    160e:	ff 20       	and	r15, r15
    1610:	09 f4       	brne	.+2      	; 0x1614 <vfprintf+0x68e>
    1612:	e5 cc       	rjmp	.-1590   	; 0xfde <vfprintf+0x58>
    1614:	b6 01       	movw	r22, r12
    1616:	80 e2       	ldi	r24, 0x20	; 32
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    161e:	fa 94       	dec	r15
    1620:	f6 cf       	rjmp	.-20     	; 0x160e <vfprintf+0x688>
    1622:	f6 01       	movw	r30, r12
    1624:	86 81       	ldd	r24, Z+6	; 0x06
    1626:	97 81       	ldd	r25, Z+7	; 0x07
    1628:	26 c0       	rjmp	.+76     	; 0x1676 <vfprintf+0x6f0>
    162a:	8f ef       	ldi	r24, 0xFF	; 255
    162c:	9f ef       	ldi	r25, 0xFF	; 255
    162e:	23 c0       	rjmp	.+70     	; 0x1676 <vfprintf+0x6f0>
    1630:	b6 01       	movw	r22, r12
    1632:	80 e2       	ldi	r24, 0x20	; 32
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    163a:	fa 94       	dec	r15
    163c:	f1 10       	cpse	r15, r1
    163e:	f8 cf       	rjmp	.-16     	; 0x1630 <vfprintf+0x6aa>
    1640:	d9 cf       	rjmp	.-78     	; 0x15f4 <vfprintf+0x66e>
    1642:	f1 2c       	mov	r15, r1
    1644:	b6 01       	movw	r22, r12
    1646:	82 2d       	mov	r24, r2
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    164e:	d4 cf       	rjmp	.-88     	; 0x15f8 <vfprintf+0x672>
    1650:	0c e6       	ldi	r16, 0x6C	; 108
    1652:	10 e0       	ldi	r17, 0x00	; 0
    1654:	d5 cf       	rjmp	.-86     	; 0x1600 <vfprintf+0x67a>
    1656:	31 10       	cpse	r3, r1
    1658:	80 52       	subi	r24, 0x20	; 32
    165a:	b6 01       	movw	r22, r12
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <fputc>
    1662:	0f 5f       	subi	r16, 0xFF	; 255
    1664:	1f 4f       	sbci	r17, 0xFF	; 255
    1666:	cf cf       	rjmp	.-98     	; 0x1606 <vfprintf+0x680>
    1668:	23 e0       	ldi	r18, 0x03	; 3
    166a:	2f 15       	cp	r18, r15
    166c:	10 f4       	brcc	.+4      	; 0x1672 <vfprintf+0x6ec>
    166e:	83 e0       	ldi	r24, 0x03	; 3
    1670:	be cf       	rjmp	.-132    	; 0x15ee <vfprintf+0x668>
    1672:	f1 2c       	mov	r15, r1
    1674:	c1 cf       	rjmp	.-126    	; 0x15f8 <vfprintf+0x672>
    1676:	63 96       	adiw	r28, 0x13	; 19
    1678:	e2 e1       	ldi	r30, 0x12	; 18
    167a:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__epilogue_restores__>

0000167e <__prologue_saves__>:
    167e:	2f 92       	push	r2
    1680:	3f 92       	push	r3
    1682:	4f 92       	push	r4
    1684:	5f 92       	push	r5
    1686:	6f 92       	push	r6
    1688:	7f 92       	push	r7
    168a:	8f 92       	push	r8
    168c:	9f 92       	push	r9
    168e:	af 92       	push	r10
    1690:	bf 92       	push	r11
    1692:	cf 92       	push	r12
    1694:	df 92       	push	r13
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	ca 1b       	sub	r28, r26
    16a8:	db 0b       	sbc	r29, r27
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	f8 94       	cli
    16ae:	de bf       	out	0x3e, r29	; 62
    16b0:	0f be       	out	0x3f, r0	; 63
    16b2:	cd bf       	out	0x3d, r28	; 61
    16b4:	09 94       	ijmp

000016b6 <__epilogue_restores__>:
    16b6:	2a 88       	ldd	r2, Y+18	; 0x12
    16b8:	39 88       	ldd	r3, Y+17	; 0x11
    16ba:	48 88       	ldd	r4, Y+16	; 0x10
    16bc:	5f 84       	ldd	r5, Y+15	; 0x0f
    16be:	6e 84       	ldd	r6, Y+14	; 0x0e
    16c0:	7d 84       	ldd	r7, Y+13	; 0x0d
    16c2:	8c 84       	ldd	r8, Y+12	; 0x0c
    16c4:	9b 84       	ldd	r9, Y+11	; 0x0b
    16c6:	aa 84       	ldd	r10, Y+10	; 0x0a
    16c8:	b9 84       	ldd	r11, Y+9	; 0x09
    16ca:	c8 84       	ldd	r12, Y+8	; 0x08
    16cc:	df 80       	ldd	r13, Y+7	; 0x07
    16ce:	ee 80       	ldd	r14, Y+6	; 0x06
    16d0:	fd 80       	ldd	r15, Y+5	; 0x05
    16d2:	0c 81       	ldd	r16, Y+4	; 0x04
    16d4:	1b 81       	ldd	r17, Y+3	; 0x03
    16d6:	aa 81       	ldd	r26, Y+2	; 0x02
    16d8:	b9 81       	ldd	r27, Y+1	; 0x01
    16da:	ce 0f       	add	r28, r30
    16dc:	d1 1d       	adc	r29, r1
    16de:	0f b6       	in	r0, 0x3f	; 63
    16e0:	f8 94       	cli
    16e2:	de bf       	out	0x3e, r29	; 62
    16e4:	0f be       	out	0x3f, r0	; 63
    16e6:	cd bf       	out	0x3d, r28	; 61
    16e8:	ed 01       	movw	r28, r26
    16ea:	08 95       	ret

000016ec <__ftoa_engine>:
    16ec:	28 30       	cpi	r18, 0x08	; 8
    16ee:	08 f0       	brcs	.+2      	; 0x16f2 <__ftoa_engine+0x6>
    16f0:	27 e0       	ldi	r18, 0x07	; 7
    16f2:	33 27       	eor	r19, r19
    16f4:	da 01       	movw	r26, r20
    16f6:	99 0f       	add	r25, r25
    16f8:	31 1d       	adc	r19, r1
    16fa:	87 fd       	sbrc	r24, 7
    16fc:	91 60       	ori	r25, 0x01	; 1
    16fe:	00 96       	adiw	r24, 0x00	; 0
    1700:	61 05       	cpc	r22, r1
    1702:	71 05       	cpc	r23, r1
    1704:	39 f4       	brne	.+14     	; 0x1714 <__ftoa_engine+0x28>
    1706:	32 60       	ori	r19, 0x02	; 2
    1708:	2e 5f       	subi	r18, 0xFE	; 254
    170a:	3d 93       	st	X+, r19
    170c:	30 e3       	ldi	r19, 0x30	; 48
    170e:	2a 95       	dec	r18
    1710:	e1 f7       	brne	.-8      	; 0x170a <__ftoa_engine+0x1e>
    1712:	08 95       	ret
    1714:	9f 3f       	cpi	r25, 0xFF	; 255
    1716:	30 f0       	brcs	.+12     	; 0x1724 <__ftoa_engine+0x38>
    1718:	80 38       	cpi	r24, 0x80	; 128
    171a:	71 05       	cpc	r23, r1
    171c:	61 05       	cpc	r22, r1
    171e:	09 f0       	breq	.+2      	; 0x1722 <__ftoa_engine+0x36>
    1720:	3c 5f       	subi	r19, 0xFC	; 252
    1722:	3c 5f       	subi	r19, 0xFC	; 252
    1724:	3d 93       	st	X+, r19
    1726:	91 30       	cpi	r25, 0x01	; 1
    1728:	08 f0       	brcs	.+2      	; 0x172c <__ftoa_engine+0x40>
    172a:	80 68       	ori	r24, 0x80	; 128
    172c:	91 1d       	adc	r25, r1
    172e:	df 93       	push	r29
    1730:	cf 93       	push	r28
    1732:	1f 93       	push	r17
    1734:	0f 93       	push	r16
    1736:	ff 92       	push	r15
    1738:	ef 92       	push	r14
    173a:	19 2f       	mov	r17, r25
    173c:	98 7f       	andi	r25, 0xF8	; 248
    173e:	96 95       	lsr	r25
    1740:	e9 2f       	mov	r30, r25
    1742:	96 95       	lsr	r25
    1744:	96 95       	lsr	r25
    1746:	e9 0f       	add	r30, r25
    1748:	ff 27       	eor	r31, r31
    174a:	e6 53       	subi	r30, 0x36	; 54
    174c:	ff 4f       	sbci	r31, 0xFF	; 255
    174e:	99 27       	eor	r25, r25
    1750:	33 27       	eor	r19, r19
    1752:	ee 24       	eor	r14, r14
    1754:	ff 24       	eor	r15, r15
    1756:	a7 01       	movw	r20, r14
    1758:	e7 01       	movw	r28, r14
    175a:	05 90       	lpm	r0, Z+
    175c:	08 94       	sec
    175e:	07 94       	ror	r0
    1760:	28 f4       	brcc	.+10     	; 0x176c <__ftoa_engine+0x80>
    1762:	36 0f       	add	r19, r22
    1764:	e7 1e       	adc	r14, r23
    1766:	f8 1e       	adc	r15, r24
    1768:	49 1f       	adc	r20, r25
    176a:	51 1d       	adc	r21, r1
    176c:	66 0f       	add	r22, r22
    176e:	77 1f       	adc	r23, r23
    1770:	88 1f       	adc	r24, r24
    1772:	99 1f       	adc	r25, r25
    1774:	06 94       	lsr	r0
    1776:	a1 f7       	brne	.-24     	; 0x1760 <__ftoa_engine+0x74>
    1778:	05 90       	lpm	r0, Z+
    177a:	07 94       	ror	r0
    177c:	28 f4       	brcc	.+10     	; 0x1788 <__ftoa_engine+0x9c>
    177e:	e7 0e       	add	r14, r23
    1780:	f8 1e       	adc	r15, r24
    1782:	49 1f       	adc	r20, r25
    1784:	56 1f       	adc	r21, r22
    1786:	c1 1d       	adc	r28, r1
    1788:	77 0f       	add	r23, r23
    178a:	88 1f       	adc	r24, r24
    178c:	99 1f       	adc	r25, r25
    178e:	66 1f       	adc	r22, r22
    1790:	06 94       	lsr	r0
    1792:	a1 f7       	brne	.-24     	; 0x177c <__ftoa_engine+0x90>
    1794:	05 90       	lpm	r0, Z+
    1796:	07 94       	ror	r0
    1798:	28 f4       	brcc	.+10     	; 0x17a4 <__ftoa_engine+0xb8>
    179a:	f8 0e       	add	r15, r24
    179c:	49 1f       	adc	r20, r25
    179e:	56 1f       	adc	r21, r22
    17a0:	c7 1f       	adc	r28, r23
    17a2:	d1 1d       	adc	r29, r1
    17a4:	88 0f       	add	r24, r24
    17a6:	99 1f       	adc	r25, r25
    17a8:	66 1f       	adc	r22, r22
    17aa:	77 1f       	adc	r23, r23
    17ac:	06 94       	lsr	r0
    17ae:	a1 f7       	brne	.-24     	; 0x1798 <__ftoa_engine+0xac>
    17b0:	05 90       	lpm	r0, Z+
    17b2:	07 94       	ror	r0
    17b4:	20 f4       	brcc	.+8      	; 0x17be <__ftoa_engine+0xd2>
    17b6:	49 0f       	add	r20, r25
    17b8:	56 1f       	adc	r21, r22
    17ba:	c7 1f       	adc	r28, r23
    17bc:	d8 1f       	adc	r29, r24
    17be:	99 0f       	add	r25, r25
    17c0:	66 1f       	adc	r22, r22
    17c2:	77 1f       	adc	r23, r23
    17c4:	88 1f       	adc	r24, r24
    17c6:	06 94       	lsr	r0
    17c8:	a9 f7       	brne	.-22     	; 0x17b4 <__ftoa_engine+0xc8>
    17ca:	84 91       	lpm	r24, Z
    17cc:	10 95       	com	r17
    17ce:	17 70       	andi	r17, 0x07	; 7
    17d0:	41 f0       	breq	.+16     	; 0x17e2 <__ftoa_engine+0xf6>
    17d2:	d6 95       	lsr	r29
    17d4:	c7 95       	ror	r28
    17d6:	57 95       	ror	r21
    17d8:	47 95       	ror	r20
    17da:	f7 94       	ror	r15
    17dc:	e7 94       	ror	r14
    17de:	1a 95       	dec	r17
    17e0:	c1 f7       	brne	.-16     	; 0x17d2 <__ftoa_engine+0xe6>
    17e2:	e0 e7       	ldi	r30, 0x70	; 112
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	68 94       	set
    17e8:	15 90       	lpm	r1, Z+
    17ea:	15 91       	lpm	r17, Z+
    17ec:	35 91       	lpm	r19, Z+
    17ee:	65 91       	lpm	r22, Z+
    17f0:	95 91       	lpm	r25, Z+
    17f2:	05 90       	lpm	r0, Z+
    17f4:	7f e2       	ldi	r23, 0x2F	; 47
    17f6:	73 95       	inc	r23
    17f8:	e1 18       	sub	r14, r1
    17fa:	f1 0a       	sbc	r15, r17
    17fc:	43 0b       	sbc	r20, r19
    17fe:	56 0b       	sbc	r21, r22
    1800:	c9 0b       	sbc	r28, r25
    1802:	d0 09       	sbc	r29, r0
    1804:	c0 f7       	brcc	.-16     	; 0x17f6 <__ftoa_engine+0x10a>
    1806:	e1 0c       	add	r14, r1
    1808:	f1 1e       	adc	r15, r17
    180a:	43 1f       	adc	r20, r19
    180c:	56 1f       	adc	r21, r22
    180e:	c9 1f       	adc	r28, r25
    1810:	d0 1d       	adc	r29, r0
    1812:	7e f4       	brtc	.+30     	; 0x1832 <__ftoa_engine+0x146>
    1814:	70 33       	cpi	r23, 0x30	; 48
    1816:	11 f4       	brne	.+4      	; 0x181c <__ftoa_engine+0x130>
    1818:	8a 95       	dec	r24
    181a:	e6 cf       	rjmp	.-52     	; 0x17e8 <__ftoa_engine+0xfc>
    181c:	e8 94       	clt
    181e:	01 50       	subi	r16, 0x01	; 1
    1820:	30 f0       	brcs	.+12     	; 0x182e <__ftoa_engine+0x142>
    1822:	08 0f       	add	r16, r24
    1824:	0a f4       	brpl	.+2      	; 0x1828 <__ftoa_engine+0x13c>
    1826:	00 27       	eor	r16, r16
    1828:	02 17       	cp	r16, r18
    182a:	08 f4       	brcc	.+2      	; 0x182e <__ftoa_engine+0x142>
    182c:	20 2f       	mov	r18, r16
    182e:	23 95       	inc	r18
    1830:	02 2f       	mov	r16, r18
    1832:	7a 33       	cpi	r23, 0x3A	; 58
    1834:	28 f0       	brcs	.+10     	; 0x1840 <__ftoa_engine+0x154>
    1836:	79 e3       	ldi	r23, 0x39	; 57
    1838:	7d 93       	st	X+, r23
    183a:	2a 95       	dec	r18
    183c:	e9 f7       	brne	.-6      	; 0x1838 <__ftoa_engine+0x14c>
    183e:	10 c0       	rjmp	.+32     	; 0x1860 <__ftoa_engine+0x174>
    1840:	7d 93       	st	X+, r23
    1842:	2a 95       	dec	r18
    1844:	89 f6       	brne	.-94     	; 0x17e8 <__ftoa_engine+0xfc>
    1846:	06 94       	lsr	r0
    1848:	97 95       	ror	r25
    184a:	67 95       	ror	r22
    184c:	37 95       	ror	r19
    184e:	17 95       	ror	r17
    1850:	17 94       	ror	r1
    1852:	e1 18       	sub	r14, r1
    1854:	f1 0a       	sbc	r15, r17
    1856:	43 0b       	sbc	r20, r19
    1858:	56 0b       	sbc	r21, r22
    185a:	c9 0b       	sbc	r28, r25
    185c:	d0 09       	sbc	r29, r0
    185e:	98 f0       	brcs	.+38     	; 0x1886 <__ftoa_engine+0x19a>
    1860:	23 95       	inc	r18
    1862:	7e 91       	ld	r23, -X
    1864:	73 95       	inc	r23
    1866:	7a 33       	cpi	r23, 0x3A	; 58
    1868:	08 f0       	brcs	.+2      	; 0x186c <__ftoa_engine+0x180>
    186a:	70 e3       	ldi	r23, 0x30	; 48
    186c:	7c 93       	st	X, r23
    186e:	20 13       	cpse	r18, r16
    1870:	b8 f7       	brcc	.-18     	; 0x1860 <__ftoa_engine+0x174>
    1872:	7e 91       	ld	r23, -X
    1874:	70 61       	ori	r23, 0x10	; 16
    1876:	7d 93       	st	X+, r23
    1878:	30 f0       	brcs	.+12     	; 0x1886 <__ftoa_engine+0x19a>
    187a:	83 95       	inc	r24
    187c:	71 e3       	ldi	r23, 0x31	; 49
    187e:	7d 93       	st	X+, r23
    1880:	70 e3       	ldi	r23, 0x30	; 48
    1882:	2a 95       	dec	r18
    1884:	e1 f7       	brne	.-8      	; 0x187e <__ftoa_engine+0x192>
    1886:	11 24       	eor	r1, r1
    1888:	ef 90       	pop	r14
    188a:	ff 90       	pop	r15
    188c:	0f 91       	pop	r16
    188e:	1f 91       	pop	r17
    1890:	cf 91       	pop	r28
    1892:	df 91       	pop	r29
    1894:	99 27       	eor	r25, r25
    1896:	87 fd       	sbrc	r24, 7
    1898:	90 95       	com	r25
    189a:	08 95       	ret

0000189c <strnlen_P>:
    189c:	fc 01       	movw	r30, r24
    189e:	05 90       	lpm	r0, Z+
    18a0:	61 50       	subi	r22, 0x01	; 1
    18a2:	70 40       	sbci	r23, 0x00	; 0
    18a4:	01 10       	cpse	r0, r1
    18a6:	d8 f7       	brcc	.-10     	; 0x189e <strnlen_P+0x2>
    18a8:	80 95       	com	r24
    18aa:	90 95       	com	r25
    18ac:	8e 0f       	add	r24, r30
    18ae:	9f 1f       	adc	r25, r31
    18b0:	08 95       	ret

000018b2 <strnlen>:
    18b2:	fc 01       	movw	r30, r24
    18b4:	61 50       	subi	r22, 0x01	; 1
    18b6:	70 40       	sbci	r23, 0x00	; 0
    18b8:	01 90       	ld	r0, Z+
    18ba:	01 10       	cpse	r0, r1
    18bc:	d8 f7       	brcc	.-10     	; 0x18b4 <strnlen+0x2>
    18be:	80 95       	com	r24
    18c0:	90 95       	com	r25
    18c2:	8e 0f       	add	r24, r30
    18c4:	9f 1f       	adc	r25, r31
    18c6:	08 95       	ret

000018c8 <fputc>:
    18c8:	0f 93       	push	r16
    18ca:	1f 93       	push	r17
    18cc:	cf 93       	push	r28
    18ce:	df 93       	push	r29
    18d0:	fb 01       	movw	r30, r22
    18d2:	23 81       	ldd	r18, Z+3	; 0x03
    18d4:	21 fd       	sbrc	r18, 1
    18d6:	03 c0       	rjmp	.+6      	; 0x18de <fputc+0x16>
    18d8:	8f ef       	ldi	r24, 0xFF	; 255
    18da:	9f ef       	ldi	r25, 0xFF	; 255
    18dc:	28 c0       	rjmp	.+80     	; 0x192e <fputc+0x66>
    18de:	22 ff       	sbrs	r18, 2
    18e0:	16 c0       	rjmp	.+44     	; 0x190e <fputc+0x46>
    18e2:	46 81       	ldd	r20, Z+6	; 0x06
    18e4:	57 81       	ldd	r21, Z+7	; 0x07
    18e6:	24 81       	ldd	r18, Z+4	; 0x04
    18e8:	35 81       	ldd	r19, Z+5	; 0x05
    18ea:	42 17       	cp	r20, r18
    18ec:	53 07       	cpc	r21, r19
    18ee:	44 f4       	brge	.+16     	; 0x1900 <fputc+0x38>
    18f0:	a0 81       	ld	r26, Z
    18f2:	b1 81       	ldd	r27, Z+1	; 0x01
    18f4:	9d 01       	movw	r18, r26
    18f6:	2f 5f       	subi	r18, 0xFF	; 255
    18f8:	3f 4f       	sbci	r19, 0xFF	; 255
    18fa:	31 83       	std	Z+1, r19	; 0x01
    18fc:	20 83       	st	Z, r18
    18fe:	8c 93       	st	X, r24
    1900:	26 81       	ldd	r18, Z+6	; 0x06
    1902:	37 81       	ldd	r19, Z+7	; 0x07
    1904:	2f 5f       	subi	r18, 0xFF	; 255
    1906:	3f 4f       	sbci	r19, 0xFF	; 255
    1908:	37 83       	std	Z+7, r19	; 0x07
    190a:	26 83       	std	Z+6, r18	; 0x06
    190c:	10 c0       	rjmp	.+32     	; 0x192e <fputc+0x66>
    190e:	eb 01       	movw	r28, r22
    1910:	09 2f       	mov	r16, r25
    1912:	18 2f       	mov	r17, r24
    1914:	00 84       	ldd	r0, Z+8	; 0x08
    1916:	f1 85       	ldd	r31, Z+9	; 0x09
    1918:	e0 2d       	mov	r30, r0
    191a:	09 95       	icall
    191c:	89 2b       	or	r24, r25
    191e:	e1 f6       	brne	.-72     	; 0x18d8 <fputc+0x10>
    1920:	8e 81       	ldd	r24, Y+6	; 0x06
    1922:	9f 81       	ldd	r25, Y+7	; 0x07
    1924:	01 96       	adiw	r24, 0x01	; 1
    1926:	9f 83       	std	Y+7, r25	; 0x07
    1928:	8e 83       	std	Y+6, r24	; 0x06
    192a:	81 2f       	mov	r24, r17
    192c:	90 2f       	mov	r25, r16
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	1f 91       	pop	r17
    1934:	0f 91       	pop	r16
    1936:	08 95       	ret

00001938 <snprintf>:
    1938:	ae e0       	ldi	r26, 0x0E	; 14
    193a:	b0 e0       	ldi	r27, 0x00	; 0
    193c:	e2 ea       	ldi	r30, 0xA2	; 162
    193e:	fc e0       	ldi	r31, 0x0C	; 12
    1940:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__prologue_saves__+0x1c>
    1944:	0d 89       	ldd	r16, Y+21	; 0x15
    1946:	1e 89       	ldd	r17, Y+22	; 0x16
    1948:	8f 89       	ldd	r24, Y+23	; 0x17
    194a:	98 8d       	ldd	r25, Y+24	; 0x18
    194c:	26 e0       	ldi	r18, 0x06	; 6
    194e:	2c 83       	std	Y+4, r18	; 0x04
    1950:	1a 83       	std	Y+2, r17	; 0x02
    1952:	09 83       	std	Y+1, r16	; 0x01
    1954:	97 ff       	sbrs	r25, 7
    1956:	02 c0       	rjmp	.+4      	; 0x195c <snprintf+0x24>
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	90 e8       	ldi	r25, 0x80	; 128
    195c:	01 97       	sbiw	r24, 0x01	; 1
    195e:	9e 83       	std	Y+6, r25	; 0x06
    1960:	8d 83       	std	Y+5, r24	; 0x05
    1962:	ae 01       	movw	r20, r28
    1964:	45 5e       	subi	r20, 0xE5	; 229
    1966:	5f 4f       	sbci	r21, 0xFF	; 255
    1968:	69 8d       	ldd	r22, Y+25	; 0x19
    196a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    196c:	ce 01       	movw	r24, r28
    196e:	01 96       	adiw	r24, 0x01	; 1
    1970:	0e 94 c3 07 	call	0xf86	; 0xf86 <vfprintf>
    1974:	4d 81       	ldd	r20, Y+5	; 0x05
    1976:	5e 81       	ldd	r21, Y+6	; 0x06
    1978:	57 fd       	sbrc	r21, 7
    197a:	0a c0       	rjmp	.+20     	; 0x1990 <snprintf+0x58>
    197c:	2f 81       	ldd	r18, Y+7	; 0x07
    197e:	38 85       	ldd	r19, Y+8	; 0x08
    1980:	42 17       	cp	r20, r18
    1982:	53 07       	cpc	r21, r19
    1984:	0c f4       	brge	.+2      	; 0x1988 <snprintf+0x50>
    1986:	9a 01       	movw	r18, r20
    1988:	f8 01       	movw	r30, r16
    198a:	e2 0f       	add	r30, r18
    198c:	f3 1f       	adc	r31, r19
    198e:	10 82       	st	Z, r1
    1990:	2e 96       	adiw	r28, 0x0e	; 14
    1992:	e4 e0       	ldi	r30, 0x04	; 4
    1994:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__epilogue_restores__+0x1c>

00001998 <__ultoa_invert>:
    1998:	fa 01       	movw	r30, r20
    199a:	aa 27       	eor	r26, r26
    199c:	28 30       	cpi	r18, 0x08	; 8
    199e:	51 f1       	breq	.+84     	; 0x19f4 <__ultoa_invert+0x5c>
    19a0:	20 31       	cpi	r18, 0x10	; 16
    19a2:	81 f1       	breq	.+96     	; 0x1a04 <__ultoa_invert+0x6c>
    19a4:	e8 94       	clt
    19a6:	6f 93       	push	r22
    19a8:	6e 7f       	andi	r22, 0xFE	; 254
    19aa:	6e 5f       	subi	r22, 0xFE	; 254
    19ac:	7f 4f       	sbci	r23, 0xFF	; 255
    19ae:	8f 4f       	sbci	r24, 0xFF	; 255
    19b0:	9f 4f       	sbci	r25, 0xFF	; 255
    19b2:	af 4f       	sbci	r26, 0xFF	; 255
    19b4:	b1 e0       	ldi	r27, 0x01	; 1
    19b6:	3e d0       	rcall	.+124    	; 0x1a34 <__ultoa_invert+0x9c>
    19b8:	b4 e0       	ldi	r27, 0x04	; 4
    19ba:	3c d0       	rcall	.+120    	; 0x1a34 <__ultoa_invert+0x9c>
    19bc:	67 0f       	add	r22, r23
    19be:	78 1f       	adc	r23, r24
    19c0:	89 1f       	adc	r24, r25
    19c2:	9a 1f       	adc	r25, r26
    19c4:	a1 1d       	adc	r26, r1
    19c6:	68 0f       	add	r22, r24
    19c8:	79 1f       	adc	r23, r25
    19ca:	8a 1f       	adc	r24, r26
    19cc:	91 1d       	adc	r25, r1
    19ce:	a1 1d       	adc	r26, r1
    19d0:	6a 0f       	add	r22, r26
    19d2:	71 1d       	adc	r23, r1
    19d4:	81 1d       	adc	r24, r1
    19d6:	91 1d       	adc	r25, r1
    19d8:	a1 1d       	adc	r26, r1
    19da:	20 d0       	rcall	.+64     	; 0x1a1c <__ultoa_invert+0x84>
    19dc:	09 f4       	brne	.+2      	; 0x19e0 <__ultoa_invert+0x48>
    19de:	68 94       	set
    19e0:	3f 91       	pop	r19
    19e2:	2a e0       	ldi	r18, 0x0A	; 10
    19e4:	26 9f       	mul	r18, r22
    19e6:	11 24       	eor	r1, r1
    19e8:	30 19       	sub	r19, r0
    19ea:	30 5d       	subi	r19, 0xD0	; 208
    19ec:	31 93       	st	Z+, r19
    19ee:	de f6       	brtc	.-74     	; 0x19a6 <__ultoa_invert+0xe>
    19f0:	cf 01       	movw	r24, r30
    19f2:	08 95       	ret
    19f4:	46 2f       	mov	r20, r22
    19f6:	47 70       	andi	r20, 0x07	; 7
    19f8:	40 5d       	subi	r20, 0xD0	; 208
    19fa:	41 93       	st	Z+, r20
    19fc:	b3 e0       	ldi	r27, 0x03	; 3
    19fe:	0f d0       	rcall	.+30     	; 0x1a1e <__ultoa_invert+0x86>
    1a00:	c9 f7       	brne	.-14     	; 0x19f4 <__ultoa_invert+0x5c>
    1a02:	f6 cf       	rjmp	.-20     	; 0x19f0 <__ultoa_invert+0x58>
    1a04:	46 2f       	mov	r20, r22
    1a06:	4f 70       	andi	r20, 0x0F	; 15
    1a08:	40 5d       	subi	r20, 0xD0	; 208
    1a0a:	4a 33       	cpi	r20, 0x3A	; 58
    1a0c:	18 f0       	brcs	.+6      	; 0x1a14 <__ultoa_invert+0x7c>
    1a0e:	49 5d       	subi	r20, 0xD9	; 217
    1a10:	31 fd       	sbrc	r19, 1
    1a12:	40 52       	subi	r20, 0x20	; 32
    1a14:	41 93       	st	Z+, r20
    1a16:	02 d0       	rcall	.+4      	; 0x1a1c <__ultoa_invert+0x84>
    1a18:	a9 f7       	brne	.-22     	; 0x1a04 <__ultoa_invert+0x6c>
    1a1a:	ea cf       	rjmp	.-44     	; 0x19f0 <__ultoa_invert+0x58>
    1a1c:	b4 e0       	ldi	r27, 0x04	; 4
    1a1e:	a6 95       	lsr	r26
    1a20:	97 95       	ror	r25
    1a22:	87 95       	ror	r24
    1a24:	77 95       	ror	r23
    1a26:	67 95       	ror	r22
    1a28:	ba 95       	dec	r27
    1a2a:	c9 f7       	brne	.-14     	; 0x1a1e <__ultoa_invert+0x86>
    1a2c:	00 97       	sbiw	r24, 0x00	; 0
    1a2e:	61 05       	cpc	r22, r1
    1a30:	71 05       	cpc	r23, r1
    1a32:	08 95       	ret
    1a34:	9b 01       	movw	r18, r22
    1a36:	ac 01       	movw	r20, r24
    1a38:	0a 2e       	mov	r0, r26
    1a3a:	06 94       	lsr	r0
    1a3c:	57 95       	ror	r21
    1a3e:	47 95       	ror	r20
    1a40:	37 95       	ror	r19
    1a42:	27 95       	ror	r18
    1a44:	ba 95       	dec	r27
    1a46:	c9 f7       	brne	.-14     	; 0x1a3a <__ultoa_invert+0xa2>
    1a48:	62 0f       	add	r22, r18
    1a4a:	73 1f       	adc	r23, r19
    1a4c:	84 1f       	adc	r24, r20
    1a4e:	95 1f       	adc	r25, r21
    1a50:	a0 1d       	adc	r26, r0
    1a52:	08 95       	ret

00001a54 <_exit>:
    1a54:	f8 94       	cli

00001a56 <__stop_program>:
    1a56:	ff cf       	rjmp	.-2      	; 0x1a56 <__stop_program>
