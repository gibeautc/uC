
Sensor_Board.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017a  00800100  0000214a  000021de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000214a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000051  0080027a  0080027a  00002358  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002358  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  000023f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003642  00000000  00000000  000025d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b71  00000000  00000000  00005c16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002832  00000000  00000000  00006787  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000067c  00000000  00000000  00008fbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001271a  00000000  00000000  00009638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000290f  00000000  00000000  0001bd52  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0001e661  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004f7e  00000000  00000000  0001e7f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 b0 01 	jmp	0x360	; 0x360 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea e4       	ldi	r30, 0x4A	; 74
     17e:	f1 e2       	ldi	r31, 0x21	; 33
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 37       	cpi	r26, 0x7A	; 122
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	aa e7       	ldi	r26, 0x7A	; 122
     190:	b2 e0       	ldi	r27, 0x02	; 2
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ab 3c       	cpi	r26, 0xCB	; 203
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d5 01 	call	0x3aa	; 0x3aa <main>
     1a0:	0c 94 a3 10 	jmp	0x2146	; 0x2146 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <init_Feedback>:
		PinLOW(PORTD, Vibration);
		break;
		case Pulse_Long:
		PinLOW(PORTD, Vibration);
		_delay_ms(1000);
		PinHIGH(PORTD, Vibration);
     1a8:	8a b1       	in	r24, 0x0a	; 10
     1aa:	80 6e       	ori	r24, 0xE0	; 224
     1ac:	8a b9       	out	0x0a, r24	; 10
     1ae:	8b b1       	in	r24, 0x0b	; 11
     1b0:	80 6c       	ori	r24, 0xC0	; 192
     1b2:	8b b9       	out	0x0b, r24	; 11
     1b4:	08 95       	ret

000001b6 <LED>:
     1b6:	61 30       	cpi	r22, 0x01	; 1
     1b8:	19 f1       	breq	.+70     	; 0x200 <LED+0x4a>
     1ba:	38 f0       	brcs	.+14     	; 0x1ca <LED+0x14>
     1bc:	62 30       	cpi	r22, 0x02	; 2
     1be:	09 f4       	brne	.+2      	; 0x1c2 <LED+0xc>
     1c0:	6b c0       	rjmp	.+214    	; 0x298 <LED+0xe2>
     1c2:	64 30       	cpi	r22, 0x04	; 4
     1c4:	09 f4       	brne	.+2      	; 0x1c8 <LED+0x12>
     1c6:	83 c0       	rjmp	.+262    	; 0x2ce <LED+0x118>
     1c8:	08 95       	ret
     1ca:	4b b1       	in	r20, 0x0b	; 11
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	b9 01       	movw	r22, r18
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <LED+0x22>
     1d4:	66 0f       	add	r22, r22
     1d6:	77 1f       	adc	r23, r23
     1d8:	8a 95       	dec	r24
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <LED+0x1e>
     1dc:	cb 01       	movw	r24, r22
     1de:	96 2f       	mov	r25, r22
     1e0:	90 95       	com	r25
     1e2:	94 23       	and	r25, r20
     1e4:	9b b9       	out	0x0b, r25	; 11
     1e6:	7f ef       	ldi	r23, 0xFF	; 255
     1e8:	21 ee       	ldi	r18, 0xE1	; 225
     1ea:	34 e0       	ldi	r19, 0x04	; 4
     1ec:	71 50       	subi	r23, 0x01	; 1
     1ee:	20 40       	sbci	r18, 0x00	; 0
     1f0:	30 40       	sbci	r19, 0x00	; 0
     1f2:	e1 f7       	brne	.-8      	; 0x1ec <LED+0x36>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <LED+0x40>
     1f6:	00 00       	nop
     1f8:	9b b1       	in	r25, 0x0b	; 11
     1fa:	89 2b       	or	r24, r25
     1fc:	8b b9       	out	0x0b, r24	; 11
     1fe:	08 95       	ret
     200:	4b b1       	in	r20, 0x0b	; 11
     202:	21 e0       	ldi	r18, 0x01	; 1
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	b9 01       	movw	r22, r18
     208:	02 c0       	rjmp	.+4      	; 0x20e <LED+0x58>
     20a:	66 0f       	add	r22, r22
     20c:	77 1f       	adc	r23, r23
     20e:	8a 95       	dec	r24
     210:	e2 f7       	brpl	.-8      	; 0x20a <LED+0x54>
     212:	cb 01       	movw	r24, r22
     214:	26 2f       	mov	r18, r22
     216:	20 95       	com	r18
     218:	92 2f       	mov	r25, r18
     21a:	94 23       	and	r25, r20
     21c:	9b b9       	out	0x0b, r25	; 11
     21e:	7f ef       	ldi	r23, 0xFF	; 255
     220:	31 ee       	ldi	r19, 0xE1	; 225
     222:	44 e0       	ldi	r20, 0x04	; 4
     224:	71 50       	subi	r23, 0x01	; 1
     226:	30 40       	sbci	r19, 0x00	; 0
     228:	40 40       	sbci	r20, 0x00	; 0
     22a:	e1 f7       	brne	.-8      	; 0x224 <LED+0x6e>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <LED+0x78>
     22e:	00 00       	nop
     230:	9b b1       	in	r25, 0x0b	; 11
     232:	98 2b       	or	r25, r24
     234:	9b b9       	out	0x0b, r25	; 11
     236:	5f ef       	ldi	r21, 0xFF	; 255
     238:	61 ee       	ldi	r22, 0xE1	; 225
     23a:	74 e0       	ldi	r23, 0x04	; 4
     23c:	51 50       	subi	r21, 0x01	; 1
     23e:	60 40       	sbci	r22, 0x00	; 0
     240:	70 40       	sbci	r23, 0x00	; 0
     242:	e1 f7       	brne	.-8      	; 0x23c <LED+0x86>
     244:	00 c0       	rjmp	.+0      	; 0x246 <LED+0x90>
     246:	00 00       	nop
     248:	9b b1       	in	r25, 0x0b	; 11
     24a:	92 23       	and	r25, r18
     24c:	9b b9       	out	0x0b, r25	; 11
     24e:	3f ef       	ldi	r19, 0xFF	; 255
     250:	41 ee       	ldi	r20, 0xE1	; 225
     252:	54 e0       	ldi	r21, 0x04	; 4
     254:	31 50       	subi	r19, 0x01	; 1
     256:	40 40       	sbci	r20, 0x00	; 0
     258:	50 40       	sbci	r21, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <LED+0x9e>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <LED+0xa8>
     25e:	00 00       	nop
     260:	9b b1       	in	r25, 0x0b	; 11
     262:	98 2b       	or	r25, r24
     264:	9b b9       	out	0x0b, r25	; 11
     266:	6f ef       	ldi	r22, 0xFF	; 255
     268:	71 ee       	ldi	r23, 0xE1	; 225
     26a:	34 e0       	ldi	r19, 0x04	; 4
     26c:	61 50       	subi	r22, 0x01	; 1
     26e:	70 40       	sbci	r23, 0x00	; 0
     270:	30 40       	sbci	r19, 0x00	; 0
     272:	e1 f7       	brne	.-8      	; 0x26c <LED+0xb6>
     274:	00 c0       	rjmp	.+0      	; 0x276 <LED+0xc0>
     276:	00 00       	nop
     278:	9b b1       	in	r25, 0x0b	; 11
     27a:	92 23       	and	r25, r18
     27c:	9b b9       	out	0x0b, r25	; 11
     27e:	4f ef       	ldi	r20, 0xFF	; 255
     280:	51 ee       	ldi	r21, 0xE1	; 225
     282:	64 e0       	ldi	r22, 0x04	; 4
     284:	41 50       	subi	r20, 0x01	; 1
     286:	50 40       	sbci	r21, 0x00	; 0
     288:	60 40       	sbci	r22, 0x00	; 0
     28a:	e1 f7       	brne	.-8      	; 0x284 <LED+0xce>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <LED+0xd8>
     28e:	00 00       	nop
     290:	9b b1       	in	r25, 0x0b	; 11
     292:	89 2b       	or	r24, r25
     294:	8b b9       	out	0x0b, r24	; 11
     296:	08 95       	ret
     298:	4b b1       	in	r20, 0x0b	; 11
     29a:	21 e0       	ldi	r18, 0x01	; 1
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	b9 01       	movw	r22, r18
     2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <LED+0xf0>
     2a2:	66 0f       	add	r22, r22
     2a4:	77 1f       	adc	r23, r23
     2a6:	8a 95       	dec	r24
     2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <LED+0xec>
     2aa:	cb 01       	movw	r24, r22
     2ac:	96 2f       	mov	r25, r22
     2ae:	90 95       	com	r25
     2b0:	94 23       	and	r25, r20
     2b2:	9b b9       	out	0x0b, r25	; 11
     2b4:	7f ef       	ldi	r23, 0xFF	; 255
     2b6:	29 e6       	ldi	r18, 0x69	; 105
     2b8:	38 e1       	ldi	r19, 0x18	; 24
     2ba:	71 50       	subi	r23, 0x01	; 1
     2bc:	20 40       	sbci	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <LED+0x104>
     2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <LED+0x10e>
     2c4:	00 00       	nop
     2c6:	9b b1       	in	r25, 0x0b	; 11
     2c8:	89 2b       	or	r24, r25
     2ca:	8b b9       	out	0x0b, r24	; 11
     2cc:	08 95       	ret
     2ce:	5f 98       	cbi	0x0b, 7	; 11
     2d0:	4f ef       	ldi	r20, 0xFF	; 255
     2d2:	51 ee       	ldi	r21, 0xE1	; 225
     2d4:	64 e0       	ldi	r22, 0x04	; 4
     2d6:	41 50       	subi	r20, 0x01	; 1
     2d8:	50 40       	sbci	r21, 0x00	; 0
     2da:	60 40       	sbci	r22, 0x00	; 0
     2dc:	e1 f7       	brne	.-8      	; 0x2d6 <LED+0x120>
     2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LED+0x12a>
     2e0:	00 00       	nop
     2e2:	5f 9a       	sbi	0x0b, 7	; 11
     2e4:	8f e1       	ldi	r24, 0x1F	; 31
     2e6:	9e e4       	ldi	r25, 0x4E	; 78
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LED+0x132>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LED+0x138>
     2ee:	00 00       	nop
     2f0:	5e 98       	cbi	0x0b, 6	; 11
     2f2:	9f ef       	ldi	r25, 0xFF	; 255
     2f4:	21 ee       	ldi	r18, 0xE1	; 225
     2f6:	34 e0       	ldi	r19, 0x04	; 4
     2f8:	91 50       	subi	r25, 0x01	; 1
     2fa:	20 40       	sbci	r18, 0x00	; 0
     2fc:	30 40       	sbci	r19, 0x00	; 0
     2fe:	e1 f7       	brne	.-8      	; 0x2f8 <LED+0x142>
     300:	00 c0       	rjmp	.+0      	; 0x302 <LED+0x14c>
     302:	00 00       	nop
     304:	5e 9a       	sbi	0x0b, 6	; 11
     306:	5f 98       	cbi	0x0b, 7	; 11
     308:	4f ef       	ldi	r20, 0xFF	; 255
     30a:	51 ee       	ldi	r21, 0xE1	; 225
     30c:	64 e0       	ldi	r22, 0x04	; 4
     30e:	41 50       	subi	r20, 0x01	; 1
     310:	50 40       	sbci	r21, 0x00	; 0
     312:	60 40       	sbci	r22, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <LED+0x158>
     316:	00 c0       	rjmp	.+0      	; 0x318 <LED+0x162>
     318:	00 00       	nop
     31a:	5f 9a       	sbi	0x0b, 7	; 11
     31c:	8f e1       	ldi	r24, 0x1F	; 31
     31e:	9e e4       	ldi	r25, 0x4E	; 78
     320:	01 97       	sbiw	r24, 0x01	; 1
     322:	f1 f7       	brne	.-4      	; 0x320 <LED+0x16a>
     324:	00 c0       	rjmp	.+0      	; 0x326 <LED+0x170>
     326:	00 00       	nop
     328:	5e 98       	cbi	0x0b, 6	; 11
     32a:	9f ef       	ldi	r25, 0xFF	; 255
     32c:	21 ee       	ldi	r18, 0xE1	; 225
     32e:	34 e0       	ldi	r19, 0x04	; 4
     330:	91 50       	subi	r25, 0x01	; 1
     332:	20 40       	sbci	r18, 0x00	; 0
     334:	30 40       	sbci	r19, 0x00	; 0
     336:	e1 f7       	brne	.-8      	; 0x330 <LED+0x17a>
     338:	00 c0       	rjmp	.+0      	; 0x33a <LED+0x184>
     33a:	00 00       	nop
     33c:	5e 9a       	sbi	0x0b, 6	; 11
     33e:	08 95       	ret

00000340 <init_tcnt2>:
	return;
}

void init_tcnt2()
{
	ASSR |=(0<<AS2);//Run of 32khz osc
     340:	e6 eb       	ldi	r30, 0xB6	; 182
     342:	f0 e0       	ldi	r31, 0x00	; 0
     344:	80 81       	ld	r24, Z
     346:	80 83       	st	Z, r24
	TIMSK2=0x00;  //reset TIMSK
     348:	e0 e7       	ldi	r30, 0x70	; 112
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	10 82       	st	Z, r1
	TIMSK2 |=(1<<TOIE2);//turns on comp match interupt
     34e:	80 81       	ld	r24, Z
     350:	81 60       	ori	r24, 0x01	; 1
     352:	80 83       	st	Z, r24
	TCCR2A=0;
     354:	10 92 b0 00 	sts	0x00B0, r1
	TCCR2B=(1<<CS21)|(1<<CS20);//Normal mode prescale 32 should give a 1ms count
     358:	83 e0       	ldi	r24, 0x03	; 3
     35a:	80 93 b1 00 	sts	0x00B1, r24
     35e:	08 95       	ret

00000360 <__vector_9>:
#define BUFSZ 128

volatile unsigned long count_t=0;

ISR(TIMER2_OVF_vect)
{
     360:	1f 92       	push	r1
     362:	0f 92       	push	r0
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	0f 92       	push	r0
     368:	11 24       	eor	r1, r1
     36a:	8f 93       	push	r24
     36c:	9f 93       	push	r25
     36e:	af 93       	push	r26
     370:	bf 93       	push	r27
	count_t++;
     372:	80 91 7a 02 	lds	r24, 0x027A
     376:	90 91 7b 02 	lds	r25, 0x027B
     37a:	a0 91 7c 02 	lds	r26, 0x027C
     37e:	b0 91 7d 02 	lds	r27, 0x027D
     382:	01 96       	adiw	r24, 0x01	; 1
     384:	a1 1d       	adc	r26, r1
     386:	b1 1d       	adc	r27, r1
     388:	80 93 7a 02 	sts	0x027A, r24
     38c:	90 93 7b 02 	sts	0x027B, r25
     390:	a0 93 7c 02 	sts	0x027C, r26
     394:	b0 93 7d 02 	sts	0x027D, r27
}
     398:	bf 91       	pop	r27
     39a:	af 91       	pop	r26
     39c:	9f 91       	pop	r25
     39e:	8f 91       	pop	r24
     3a0:	0f 90       	pop	r0
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	0f 90       	pop	r0
     3a6:	1f 90       	pop	r1
     3a8:	18 95       	reti

000003aa <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3aa:	8f e1       	ldi	r24, 0x1F	; 31
     3ac:	9e e4       	ldi	r25, 0x4E	; 78
     3ae:	01 97       	sbiw	r24, 0x01	; 1
     3b0:	f1 f7       	brne	.-4      	; 0x3ae <main+0x4>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <main+0xa>
     3b4:	00 00       	nop
{
	_delay_ms(10);
	uint8_t response[4];
	char buf[BUFSZ];
	
	sei();
     3b6:	78 94       	sei
	init_SPI();
     3b8:	0e 94 0a 08 	call	0x1014	; 0x1014 <init_SPI>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3bc:	9a e1       	ldi	r25, 0x1A	; 26
     3be:	9a 95       	dec	r25
     3c0:	f1 f7       	brne	.-4      	; 0x3be <main+0x14>
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <main+0x1a>
	_delay_us(10);
	init_Feedback();
     3c4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <init_Feedback>
	uart_init();
     3c8:	0e 94 3e 09 	call	0x127c	; 0x127c <uart_init>
	init_tcnt2();
     3cc:	0e 94 a0 01 	call	0x340	; 0x340 <init_tcnt2>
	
	
	//*******SRAM_INIT and testing**********
	if(sram_init()==1)
     3d0:	0e 94 70 08 	call	0x10e0	; 0x10e0 <sram_init>
     3d4:	81 30       	cpi	r24, 0x01	; 1
     3d6:	29 f4       	brne	.+10     	; 0x3e2 <main+0x38>
	{
		uart_puts("*Tsram_init PASSED\n*");
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <main+0x40>
	}
	else
	{
		uart_puts("*Tsram_init FAILED\n*");
     3e2:	85 e1       	ldi	r24, 0x15	; 21
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	}// init sram and check status
	
	sram_write(100,100,0,150);
     3ea:	26 e9       	ldi	r18, 0x96	; 150
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	64 e6       	ldi	r22, 0x64	; 100
     3f0:	84 e6       	ldi	r24, 0x64	; 100
     3f2:	0e 94 ee 08 	call	0x11dc	; 0x11dc <sram_write>
	
	if(sram_read(100,100,0)==150)
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	64 e6       	ldi	r22, 0x64	; 100
     3fa:	84 e6       	ldi	r24, 0x64	; 100
     3fc:	0e 94 bb 08 	call	0x1176	; 0x1176 <sram_read>
     400:	86 39       	cpi	r24, 0x96	; 150
     402:	29 f4       	brne	.+10     	; 0x40e <main+0x64>
	{
		uart_puts("*Tsram write/read PASSED\n*");
     404:	8a e2       	ldi	r24, 0x2A	; 42
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
     40c:	04 c0       	rjmp	.+8      	; 0x416 <main+0x6c>
	}
	else
	{
		uart_puts("*Tsram write/read FAILED\n*");
     40e:	85 e4       	ldi	r24, 0x45	; 69
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     416:	8f e1       	ldi	r24, 0x1F	; 31
     418:	9e e4       	ldi	r25, 0x4E	; 78
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	f1 f7       	brne	.-4      	; 0x41a <main+0x70>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <main+0x76>
     420:	00 00       	nop
	}// init sram and check status)
	//*******End SRAM init and TESTING
	
	
	_delay_ms(10);
	SPIinit_MPU(sensor1_cs, 1, BITS_DLPF_CFG_188HZ);
     422:	41 e0       	ldi	r20, 0x01	; 1
     424:	50 e0       	ldi	r21, 0x00	; 0
     426:	61 e0       	ldi	r22, 0x01	; 1
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	82 e0       	ldi	r24, 0x02	; 2
     42c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <SPIinit_MPU>
     430:	8f e1       	ldi	r24, 0x1F	; 31
     432:	9e e4       	ldi	r25, 0x4E	; 78
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <main+0x8a>
     438:	00 c0       	rjmp	.+0      	; 0x43a <main+0x90>
     43a:	00 00       	nop
	_delay_ms(10);
	SPIinit_MPU(sensor2_cs, 1, BITS_DLPF_CFG_188HZ);
     43c:	41 e0       	ldi	r20, 0x01	; 1
     43e:	50 e0       	ldi	r21, 0x00	; 0
     440:	61 e0       	ldi	r22, 0x01	; 1
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	87 e0       	ldi	r24, 0x07	; 7
     446:	0e 94 0f 05 	call	0xa1e	; 0xa1e <SPIinit_MPU>
     44a:	8f e1       	ldi	r24, 0x1F	; 31
     44c:	9e e4       	ldi	r25, 0x4E	; 78
     44e:	01 97       	sbiw	r24, 0x01	; 1
     450:	f1 f7       	brne	.-4      	; 0x44e <main+0xa4>
     452:	00 c0       	rjmp	.+0      	; 0x454 <main+0xaa>
     454:	00 00       	nop
	_delay_ms(10);
	SPIinit_MPU(sensor3_cs, 1, BITS_DLPF_CFG_188HZ);
     456:	41 e0       	ldi	r20, 0x01	; 1
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	61 e0       	ldi	r22, 0x01	; 1
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	86 e0       	ldi	r24, 0x06	; 6
     460:	0e 94 0f 05 	call	0xa1e	; 0xa1e <SPIinit_MPU>
	
	//Initializations Successful
	LED(G_LED, Pulse_3);
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	86 e0       	ldi	r24, 0x06	; 6
     468:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LED>
     46c:	8f e1       	ldi	r24, 0x1F	; 31
     46e:	9e e4       	ldi	r25, 0x4E	; 78
     470:	01 97       	sbiw	r24, 0x01	; 1
     472:	f1 f7       	brne	.-4      	; 0x470 <main+0xc6>
     474:	00 c0       	rjmp	.+0      	; 0x476 <main+0xcc>
     476:	00 00       	nop

	_delay_ms(10);
	response[2] = set_gyro_scale(sensor1_cs, BITS_FS_2000DPS);
     478:	68 e1       	ldi	r22, 0x18	; 24
     47a:	70 e0       	ldi	r23, 0x00	; 0
     47c:	82 e0       	ldi	r24, 0x02	; 2
     47e:	0e 94 a4 04 	call	0x948	; 0x948 <set_gyro_scale>
     482:	8f e1       	ldi	r24, 0x1F	; 31
     484:	9e e4       	ldi	r25, 0x4E	; 78
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <main+0xdc>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <main+0xe2>
     48c:	00 00       	nop
	_delay_ms(10);
	response[3] = set_acc_scale(sensor1_cs, BITS_FS_16G);
     48e:	68 e1       	ldi	r22, 0x18	; 24
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	0e 94 39 04 	call	0x872	; 0x872 <set_acc_scale>
     498:	8f e1       	ldi	r24, 0x1F	; 31
     49a:	9e e4       	ldi	r25, 0x4E	; 78
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <main+0xf2>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <main+0xf8>
     4a2:	00 00       	nop
	_delay_ms(10);
	
	response[2] = set_gyro_scale(sensor2_cs, BITS_FS_2000DPS);
     4a4:	68 e1       	ldi	r22, 0x18	; 24
     4a6:	70 e0       	ldi	r23, 0x00	; 0
     4a8:	87 e0       	ldi	r24, 0x07	; 7
     4aa:	0e 94 a4 04 	call	0x948	; 0x948 <set_gyro_scale>
     4ae:	8f e1       	ldi	r24, 0x1F	; 31
     4b0:	9e e4       	ldi	r25, 0x4E	; 78
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	f1 f7       	brne	.-4      	; 0x4b2 <main+0x108>
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <main+0x10e>
     4b8:	00 00       	nop
	_delay_ms(10);
	response[3] = set_acc_scale(sensor2_cs, BITS_FS_16G); 
     4ba:	68 e1       	ldi	r22, 0x18	; 24
     4bc:	70 e0       	ldi	r23, 0x00	; 0
     4be:	87 e0       	ldi	r24, 0x07	; 7
     4c0:	0e 94 39 04 	call	0x872	; 0x872 <set_acc_scale>
     4c4:	8f e1       	ldi	r24, 0x1F	; 31
     4c6:	9e e4       	ldi	r25, 0x4E	; 78
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <main+0x11e>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <main+0x124>
     4ce:	00 00       	nop
	_delay_ms(10);
	
	response[2] = set_gyro_scale(sensor3_cs, BITS_FS_2000DPS);
     4d0:	68 e1       	ldi	r22, 0x18	; 24
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	86 e0       	ldi	r24, 0x06	; 6
     4d6:	0e 94 a4 04 	call	0x948	; 0x948 <set_gyro_scale>
     4da:	8f e1       	ldi	r24, 0x1F	; 31
     4dc:	9e e4       	ldi	r25, 0x4E	; 78
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <main+0x134>
     4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <main+0x13a>
     4e4:	00 00       	nop
	_delay_ms(10);
	response[3] = set_acc_scale(sensor3_cs, BITS_FS_16G);
     4e6:	68 e1       	ldi	r22, 0x18	; 24
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	86 e0       	ldi	r24, 0x06	; 6
     4ec:	0e 94 39 04 	call	0x872	; 0x872 <set_acc_scale>
     4f0:	8f e1       	ldi	r24, 0x1F	; 31
     4f2:	9e e4       	ldi	r25, 0x4E	; 78
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <main+0x14a>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <main+0x150>
     4fa:	00 00       	nop
	_delay_ms(10);

	uart_puts("*HC**JC**KC*");
     4fc:	80 e6       	ldi	r24, 0x60	; 96
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	
	LED(G_LED, Pulse_Long);
     504:	62 e0       	ldi	r22, 0x02	; 2
     506:	86 e0       	ldi	r24, 0x06	; 6
     508:	0e 94 db 00 	call	0x1b6	; 0x1b6 <LED>
	/*(memset(buf, 0, BUFSZ);
	snprintf(buf, BUFSZ, "*TMPU9250 Addr=%02X  AK8963 Addr=%02X \n Gyro Scale=%d  Accel Scale=%d*\n\n", 
		response[0], response[1], response[2], response[3]);
	uart_puts(buf);*/

	AK8963_calib_Magnetometer(sensor1_cs);
     50c:	82 e0       	ldi	r24, 0x02	; 2
     50e:	0e 94 b1 02 	call	0x562	; 0x562 <AK8963_calib_Magnetometer>
     512:	8f e1       	ldi	r24, 0x1F	; 31
     514:	9e e4       	ldi	r25, 0x4E	; 78
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	f1 f7       	brne	.-4      	; 0x516 <main+0x16c>
     51a:	00 c0       	rjmp	.+0      	; 0x51c <main+0x172>
     51c:	00 00       	nop
	_delay_ms(10);
	AK8963_calib_Magnetometer(sensor2_cs);
     51e:	87 e0       	ldi	r24, 0x07	; 7
     520:	0e 94 b1 02 	call	0x562	; 0x562 <AK8963_calib_Magnetometer>
     524:	8f e1       	ldi	r24, 0x1F	; 31
     526:	9e e4       	ldi	r25, 0x4E	; 78
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	f1 f7       	brne	.-4      	; 0x528 <main+0x17e>
     52c:	00 c0       	rjmp	.+0      	; 0x52e <main+0x184>
     52e:	00 00       	nop
	_delay_ms(10);
	AK8963_calib_Magnetometer(sensor3_cs);
     530:	86 e0       	ldi	r24, 0x06	; 6
     532:	0e 94 b1 02 	call	0x562	; 0x562 <AK8963_calib_Magnetometer>
     536:	8f e1       	ldi	r24, 0x1F	; 31
     538:	9e e4       	ldi	r25, 0x4E	; 78
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <main+0x190>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <main+0x196>
     540:	00 00       	nop
     542:	9f ef       	ldi	r25, 0xFF	; 255
     544:	23 ed       	ldi	r18, 0xD3	; 211
     546:	80 e3       	ldi	r24, 0x30	; 48
     548:	91 50       	subi	r25, 0x01	; 1
     54a:	20 40       	sbci	r18, 0x00	; 0
     54c:	80 40       	sbci	r24, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <main+0x19e>
     550:	00 c0       	rjmp	.+0      	; 0x552 <main+0x1a8>
     552:	00 00       	nop
	
	_delay_ms(2000);
	
	while(1)
	{
		if(uart_getc()=='S'){record_window();}
     554:	0e 94 53 09 	call	0x12a6	; 0x12a6 <uart_getc>
     558:	83 35       	cpi	r24, 0x53	; 83
     55a:	e1 f7       	brne	.-8      	; 0x554 <main+0x1aa>
     55c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <record_window>
     560:	f9 cf       	rjmp	.-14     	; 0x554 <main+0x1aa>

00000562 <AK8963_calib_Magnetometer>:
  calib_data[0]=((response[0]&11100000)>>3)|((response[3]&00110000)>>4);
  calib_data[1]=((response[1]&11100000)>>3)|((response[3]&00001100)>>2);
  calib_data[2]=((response[2]&11100000)>>3)|((response[3]&00000011));
 
  set_acc_scale(sel, temp_scale);
}
     562:	cf 92       	push	r12
     564:	df 92       	push	r13
     566:	ef 92       	push	r14
     568:	ff 92       	push	r15
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	00 d0       	rcall	.+0      	; 0x574 <AK8963_calib_Magnetometer+0x12>
     574:	1f 92       	push	r1
     576:	cd b7       	in	r28, 0x3d	; 61
     578:	de b7       	in	r29, 0x3e	; 62
     57a:	18 2f       	mov	r17, r24
     57c:	4c e8       	ldi	r20, 0x8C	; 140
     57e:	61 e3       	ldi	r22, 0x31	; 49
     580:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     584:	8f e1       	ldi	r24, 0x1F	; 31
     586:	9e e4       	ldi	r25, 0x4E	; 78
     588:	01 97       	sbiw	r24, 0x01	; 1
     58a:	f1 f7       	brne	.-4      	; 0x588 <AK8963_calib_Magnetometer+0x26>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <AK8963_calib_Magnetometer+0x2c>
     58e:	00 00       	nop
     590:	40 e1       	ldi	r20, 0x10	; 16
     592:	62 e3       	ldi	r22, 0x32	; 50
     594:	81 2f       	mov	r24, r17
     596:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     59a:	ef e1       	ldi	r30, 0x1F	; 31
     59c:	fe e4       	ldi	r31, 0x4E	; 78
     59e:	31 97       	sbiw	r30, 0x01	; 1
     5a0:	f1 f7       	brne	.-4      	; 0x59e <AK8963_calib_Magnetometer+0x3c>
     5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <AK8963_calib_Magnetometer+0x42>
     5a4:	00 00       	nop
     5a6:	43 e8       	ldi	r20, 0x83	; 131
     5a8:	64 e3       	ldi	r22, 0x34	; 52
     5aa:	81 2f       	mov	r24, r17
     5ac:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     5b0:	87 ec       	ldi	r24, 0xC7	; 199
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <AK8963_calib_Magnetometer+0x52>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <AK8963_calib_Magnetometer+0x58>
     5ba:	00 00       	nop
     5bc:	9e 01       	movw	r18, r28
     5be:	2f 5f       	subi	r18, 0xFF	; 255
     5c0:	3f 4f       	sbci	r19, 0xFF	; 255
     5c2:	43 e0       	ldi	r20, 0x03	; 3
     5c4:	69 e4       	ldi	r22, 0x49	; 73
     5c6:	81 2f       	mov	r24, r17
     5c8:	0e 94 3e 08 	call	0x107c	; 0x107c <spi_readRegs>
     5cc:	fe 01       	movw	r30, r28
     5ce:	31 96       	adiw	r30, 0x01	; 1
     5d0:	7f 01       	movw	r14, r30
     5d2:	0b eb       	ldi	r16, 0xBB	; 187
     5d4:	12 e0       	ldi	r17, 0x02	; 2
     5d6:	0f 2e       	mov	r0, r31
     5d8:	f7 ec       	ldi	r31, 0xC7	; 199
     5da:	cf 2e       	mov	r12, r31
     5dc:	f2 e0       	ldi	r31, 0x02	; 2
     5de:	df 2e       	mov	r13, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	f7 01       	movw	r30, r14
     5e4:	61 91       	ld	r22, Z+
     5e6:	7f 01       	movw	r14, r30
     5e8:	70 e0       	ldi	r23, 0x00	; 0
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	0e 94 41 0a 	call	0x1482	; 0x1482 <__floatunsisf>
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	53 e4       	ldi	r21, 0x43	; 67
     5fa:	0e 94 62 09 	call	0x12c4	; 0x12c4 <__subsf3>
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	30 e0       	ldi	r19, 0x00	; 0
     602:	40 e8       	ldi	r20, 0x80	; 128
     604:	5b e3       	ldi	r21, 0x3B	; 59
     606:	0e 94 cf 0a 	call	0x159e	; 0x159e <__mulsf3>
     60a:	20 e0       	ldi	r18, 0x00	; 0
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	40 e8       	ldi	r20, 0x80	; 128
     610:	5f e3       	ldi	r21, 0x3F	; 63
     612:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     616:	2a e9       	ldi	r18, 0x9A	; 154
     618:	39 e9       	ldi	r19, 0x99	; 153
     61a:	49 e1       	ldi	r20, 0x19	; 25
     61c:	5e e3       	ldi	r21, 0x3E	; 62
     61e:	0e 94 cf 0a 	call	0x159e	; 0x159e <__mulsf3>
     622:	f8 01       	movw	r30, r16
     624:	61 93       	st	Z+, r22
     626:	71 93       	st	Z+, r23
     628:	81 93       	st	Z+, r24
     62a:	91 93       	st	Z+, r25
     62c:	8f 01       	movw	r16, r30
     62e:	ec 15       	cp	r30, r12
     630:	fd 05       	cpc	r31, r13
     632:	b9 f6       	brne	.-82     	; 0x5e2 <AK8963_calib_Magnetometer+0x80>
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	df 90       	pop	r13
     648:	cf 90       	pop	r12
     64a:	08 95       	ret

0000064c <read_all>:
     64c:	8f 92       	push	r8
     64e:	9f 92       	push	r9
     650:	af 92       	push	r10
     652:	bf 92       	push	r11
     654:	cf 92       	push	r12
     656:	df 92       	push	r13
     658:	ef 92       	push	r14
     65a:	ff 92       	push	r15
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
     668:	65 97       	sbiw	r28, 0x15	; 21
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	f8 94       	cli
     66e:	de bf       	out	0x3e, r29	; 62
     670:	0f be       	out	0x3f, r0	; 63
     672:	cd bf       	out	0x3d, r28	; 61
     674:	18 2f       	mov	r17, r24
     676:	4c e8       	ldi	r20, 0x8C	; 140
     678:	65 e2       	ldi	r22, 0x25	; 37
     67a:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     67e:	8f e6       	ldi	r24, 0x6F	; 111
     680:	97 e1       	ldi	r25, 0x17	; 23
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	f1 f7       	brne	.-4      	; 0x682 <read_all+0x36>
     686:	00 c0       	rjmp	.+0      	; 0x688 <read_all+0x3c>
     688:	00 00       	nop
     68a:	43 e0       	ldi	r20, 0x03	; 3
     68c:	66 e2       	ldi	r22, 0x26	; 38
     68e:	81 2f       	mov	r24, r17
     690:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     694:	ef e6       	ldi	r30, 0x6F	; 111
     696:	f7 e1       	ldi	r31, 0x17	; 23
     698:	31 97       	sbiw	r30, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <read_all+0x4c>
     69c:	00 c0       	rjmp	.+0      	; 0x69e <read_all+0x52>
     69e:	00 00       	nop
     6a0:	47 e8       	ldi	r20, 0x87	; 135
     6a2:	67 e2       	ldi	r22, 0x27	; 39
     6a4:	81 2f       	mov	r24, r17
     6a6:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     6aa:	8f e9       	ldi	r24, 0x9F	; 159
     6ac:	9f e0       	ldi	r25, 0x0F	; 15
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <read_all+0x62>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <read_all+0x68>
     6b4:	00 00       	nop
     6b6:	9e 01       	movw	r18, r28
     6b8:	2f 5f       	subi	r18, 0xFF	; 255
     6ba:	3f 4f       	sbci	r19, 0xFF	; 255
     6bc:	45 e1       	ldi	r20, 0x15	; 21
     6be:	6b e3       	ldi	r22, 0x3B	; 59
     6c0:	81 2f       	mov	r24, r17
     6c2:	0e 94 3e 08 	call	0x107c	; 0x107c <spi_readRegs>
     6c6:	80 90 c7 02 	lds	r8, 0x02C7
     6ca:	90 90 c8 02 	lds	r9, 0x02C8
     6ce:	a0 90 c9 02 	lds	r10, 0x02C9
     6d2:	b0 90 ca 02 	lds	r11, 0x02CA
     6d6:	8e 01       	movw	r16, r28
     6d8:	0e 5f       	subi	r16, 0xFE	; 254
     6da:	1f 4f       	sbci	r17, 0xFF	; 255
     6dc:	0f 2e       	mov	r0, r31
     6de:	fe e7       	ldi	r31, 0x7E	; 126
     6e0:	ef 2e       	mov	r14, r31
     6e2:	f2 e0       	ldi	r31, 0x02	; 2
     6e4:	ff 2e       	mov	r15, r31
     6e6:	f0 2d       	mov	r31, r0
     6e8:	0f 2e       	mov	r0, r31
     6ea:	fa e8       	ldi	r31, 0x8A	; 138
     6ec:	cf 2e       	mov	r12, r31
     6ee:	f2 e0       	ldi	r31, 0x02	; 2
     6f0:	df 2e       	mov	r13, r31
     6f2:	f0 2d       	mov	r31, r0
     6f4:	f8 01       	movw	r30, r16
     6f6:	31 97       	sbiw	r30, 0x01	; 1
     6f8:	60 81       	ld	r22, Z
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	76 2f       	mov	r23, r22
     6fe:	66 27       	eor	r22, r22
     700:	f8 01       	movw	r30, r16
     702:	80 81       	ld	r24, Z
     704:	68 2b       	or	r22, r24
     706:	07 2e       	mov	r0, r23
     708:	00 0c       	add	r0, r0
     70a:	88 0b       	sbc	r24, r24
     70c:	99 0b       	sbc	r25, r25
     70e:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     712:	a5 01       	movw	r20, r10
     714:	94 01       	movw	r18, r8
     716:	0e 94 cf 09 	call	0x139e	; 0x139e <__divsf3>
     71a:	f7 01       	movw	r30, r14
     71c:	61 93       	st	Z+, r22
     71e:	71 93       	st	Z+, r23
     720:	81 93       	st	Z+, r24
     722:	91 93       	st	Z+, r25
     724:	7f 01       	movw	r14, r30
     726:	0e 5f       	subi	r16, 0xFE	; 254
     728:	1f 4f       	sbci	r17, 0xFF	; 255
     72a:	ec 15       	cp	r30, r12
     72c:	fd 05       	cpc	r31, r13
     72e:	11 f7       	brne	.-60     	; 0x6f4 <read_all+0xa8>
     730:	68 85       	ldd	r22, Y+8	; 0x08
     732:	8f 81       	ldd	r24, Y+7	; 0x07
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	78 2b       	or	r23, r24
     738:	07 2e       	mov	r0, r23
     73a:	00 0c       	add	r0, r0
     73c:	88 0b       	sbc	r24, r24
     73e:	99 0b       	sbc	r25, r25
     740:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     744:	20 e0       	ldi	r18, 0x00	; 0
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	48 ea       	ldi	r20, 0xA8	; 168
     74a:	51 e4       	ldi	r21, 0x41	; 65
     74c:	0e 94 62 09 	call	0x12c4	; 0x12c4 <__subsf3>
     750:	2c e5       	ldi	r18, 0x5C	; 92
     752:	3f ee       	ldi	r19, 0xEF	; 239
     754:	46 ea       	ldi	r20, 0xA6	; 166
     756:	53 e4       	ldi	r21, 0x43	; 67
     758:	0e 94 cf 09 	call	0x139e	; 0x139e <__divsf3>
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	48 ea       	ldi	r20, 0xA8	; 168
     762:	51 e4       	ldi	r21, 0x41	; 65
     764:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     768:	60 93 8e 02 	sts	0x028E, r22
     76c:	70 93 8f 02 	sts	0x028F, r23
     770:	80 93 90 02 	sts	0x0290, r24
     774:	90 93 91 02 	sts	0x0291, r25
     778:	80 90 b7 02 	lds	r8, 0x02B7
     77c:	90 90 b8 02 	lds	r9, 0x02B8
     780:	a0 90 b9 02 	lds	r10, 0x02B9
     784:	b0 90 ba 02 	lds	r11, 0x02BA
     788:	8e 01       	movw	r16, r28
     78a:	06 5f       	subi	r16, 0xF6	; 246
     78c:	1f 4f       	sbci	r17, 0xFF	; 255
     78e:	0f 2e       	mov	r0, r31
     790:	f2 e9       	ldi	r31, 0x92	; 146
     792:	ef 2e       	mov	r14, r31
     794:	f2 e0       	ldi	r31, 0x02	; 2
     796:	ff 2e       	mov	r15, r31
     798:	f0 2d       	mov	r31, r0
     79a:	0f 2e       	mov	r0, r31
     79c:	fe e9       	ldi	r31, 0x9E	; 158
     79e:	cf 2e       	mov	r12, r31
     7a0:	f2 e0       	ldi	r31, 0x02	; 2
     7a2:	df 2e       	mov	r13, r31
     7a4:	f0 2d       	mov	r31, r0
     7a6:	f8 01       	movw	r30, r16
     7a8:	31 97       	sbiw	r30, 0x01	; 1
     7aa:	60 81       	ld	r22, Z
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	76 2f       	mov	r23, r22
     7b0:	66 27       	eor	r22, r22
     7b2:	f8 01       	movw	r30, r16
     7b4:	80 81       	ld	r24, Z
     7b6:	68 2b       	or	r22, r24
     7b8:	07 2e       	mov	r0, r23
     7ba:	00 0c       	add	r0, r0
     7bc:	88 0b       	sbc	r24, r24
     7be:	99 0b       	sbc	r25, r25
     7c0:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     7c4:	a5 01       	movw	r20, r10
     7c6:	94 01       	movw	r18, r8
     7c8:	0e 94 cf 09 	call	0x139e	; 0x139e <__divsf3>
     7cc:	f7 01       	movw	r30, r14
     7ce:	61 93       	st	Z+, r22
     7d0:	71 93       	st	Z+, r23
     7d2:	81 93       	st	Z+, r24
     7d4:	91 93       	st	Z+, r25
     7d6:	7f 01       	movw	r14, r30
     7d8:	0e 5f       	subi	r16, 0xFE	; 254
     7da:	1f 4f       	sbci	r17, 0xFF	; 255
     7dc:	ec 15       	cp	r30, r12
     7de:	fd 05       	cpc	r31, r13
     7e0:	11 f7       	brne	.-60     	; 0x7a6 <read_all+0x15a>
     7e2:	06 ea       	ldi	r16, 0xA6	; 166
     7e4:	12 e0       	ldi	r17, 0x02	; 2
     7e6:	68 89       	ldd	r22, Y+16	; 0x10
     7e8:	70 e0       	ldi	r23, 0x00	; 0
     7ea:	76 2f       	mov	r23, r22
     7ec:	66 27       	eor	r22, r22
     7ee:	8f 85       	ldd	r24, Y+15	; 0x0f
     7f0:	68 2b       	or	r22, r24
     7f2:	07 2e       	mov	r0, r23
     7f4:	00 0c       	add	r0, r0
     7f6:	88 0b       	sbc	r24, r24
     7f8:	99 0b       	sbc	r25, r25
     7fa:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     7fe:	f8 01       	movw	r30, r16
     800:	60 83       	st	Z, r22
     802:	71 83       	std	Z+1, r23	; 0x01
     804:	82 83       	std	Z+2, r24	; 0x02
     806:	93 83       	std	Z+3, r25	; 0x03
     808:	6a 89       	ldd	r22, Y+18	; 0x12
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	76 2f       	mov	r23, r22
     80e:	66 27       	eor	r22, r22
     810:	89 89       	ldd	r24, Y+17	; 0x11
     812:	68 2b       	or	r22, r24
     814:	07 2e       	mov	r0, r23
     816:	00 0c       	add	r0, r0
     818:	88 0b       	sbc	r24, r24
     81a:	99 0b       	sbc	r25, r25
     81c:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     820:	f8 01       	movw	r30, r16
     822:	64 83       	std	Z+4, r22	; 0x04
     824:	75 83       	std	Z+5, r23	; 0x05
     826:	86 83       	std	Z+6, r24	; 0x06
     828:	97 83       	std	Z+7, r25	; 0x07
     82a:	6c 89       	ldd	r22, Y+20	; 0x14
     82c:	70 e0       	ldi	r23, 0x00	; 0
     82e:	76 2f       	mov	r23, r22
     830:	66 27       	eor	r22, r22
     832:	8b 89       	ldd	r24, Y+19	; 0x13
     834:	68 2b       	or	r22, r24
     836:	07 2e       	mov	r0, r23
     838:	00 0c       	add	r0, r0
     83a:	88 0b       	sbc	r24, r24
     83c:	99 0b       	sbc	r25, r25
     83e:	0e 94 43 0a 	call	0x1486	; 0x1486 <__floatsisf>
     842:	f8 01       	movw	r30, r16
     844:	60 87       	std	Z+8, r22	; 0x08
     846:	71 87       	std	Z+9, r23	; 0x09
     848:	82 87       	std	Z+10, r24	; 0x0a
     84a:	93 87       	std	Z+11, r25	; 0x0b
     84c:	65 96       	adiw	r28, 0x15	; 21
     84e:	0f b6       	in	r0, 0x3f	; 63
     850:	f8 94       	cli
     852:	de bf       	out	0x3e, r29	; 62
     854:	0f be       	out	0x3f, r0	; 63
     856:	cd bf       	out	0x3d, r28	; 61
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	ff 90       	pop	r15
     862:	ef 90       	pop	r14
     864:	df 90       	pop	r13
     866:	cf 90       	pop	r12
     868:	bf 90       	pop	r11
     86a:	af 90       	pop	r10
     86c:	9f 90       	pop	r9
     86e:	8f 90       	pop	r8
     870:	08 95       	ret

00000872 <set_acc_scale>:
     872:	1f 93       	push	r17
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	18 2f       	mov	r17, r24
     87a:	eb 01       	movw	r28, r22
     87c:	46 2f       	mov	r20, r22
     87e:	6c e1       	ldi	r22, 0x1C	; 28
     880:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     884:	c8 30       	cpi	r28, 0x08	; 8
     886:	d1 05       	cpc	r29, r1
     888:	b9 f0       	breq	.+46     	; 0x8b8 <set_acc_scale+0x46>
     88a:	1c f4       	brge	.+6      	; 0x892 <set_acc_scale+0x20>
     88c:	cd 2b       	or	r28, r29
     88e:	39 f0       	breq	.+14     	; 0x89e <set_acc_scale+0x2c>
     890:	39 c0       	rjmp	.+114    	; 0x904 <__stack+0x5>
     892:	c0 31       	cpi	r28, 0x10	; 16
     894:	d1 05       	cpc	r29, r1
     896:	e9 f0       	breq	.+58     	; 0x8d2 <set_acc_scale+0x60>
     898:	68 97       	sbiw	r28, 0x18	; 24
     89a:	41 f1       	breq	.+80     	; 0x8ec <set_acc_scale+0x7a>
     89c:	33 c0       	rjmp	.+102    	; 0x904 <__stack+0x5>
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	a0 e8       	ldi	r26, 0x80	; 128
     8a4:	b6 e4       	ldi	r27, 0x46	; 70
     8a6:	80 93 c7 02 	sts	0x02C7, r24
     8aa:	90 93 c8 02 	sts	0x02C8, r25
     8ae:	a0 93 c9 02 	sts	0x02C9, r26
     8b2:	b0 93 ca 02 	sts	0x02CA, r27
     8b6:	26 c0       	rjmp	.+76     	; 0x904 <__stack+0x5>
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b6 e4       	ldi	r27, 0x46	; 70
     8c0:	80 93 c7 02 	sts	0x02C7, r24
     8c4:	90 93 c8 02 	sts	0x02C8, r25
     8c8:	a0 93 c9 02 	sts	0x02C9, r26
     8cc:	b0 93 ca 02 	sts	0x02CA, r27
     8d0:	19 c0       	rjmp	.+50     	; 0x904 <__stack+0x5>
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e8       	ldi	r26, 0x80	; 128
     8d8:	b5 e4       	ldi	r27, 0x45	; 69
     8da:	80 93 c7 02 	sts	0x02C7, r24
     8de:	90 93 c8 02 	sts	0x02C8, r25
     8e2:	a0 93 c9 02 	sts	0x02C9, r26
     8e6:	b0 93 ca 02 	sts	0x02CA, r27
     8ea:	0c c0       	rjmp	.+24     	; 0x904 <__stack+0x5>
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a0 e0       	ldi	r26, 0x00	; 0
     8f2:	b5 e4       	ldi	r27, 0x45	; 69
     8f4:	80 93 c7 02 	sts	0x02C7, r24
     8f8:	90 93 c8 02 	sts	0x02C8, r25
     8fc:	a0 93 c9 02 	sts	0x02C9, r26
     900:	b0 93 ca 02 	sts	0x02CA, r27
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	6c e9       	ldi	r22, 0x9C	; 156
     908:	81 2f       	mov	r24, r17
     90a:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     90e:	88 30       	cpi	r24, 0x08	; 8
     910:	91 05       	cpc	r25, r1
     912:	71 f0       	breq	.+28     	; 0x930 <__stack+0x31>
     914:	18 f4       	brcc	.+6      	; 0x91c <__stack+0x1d>
     916:	00 97       	sbiw	r24, 0x00	; 0
     918:	41 f0       	breq	.+16     	; 0x92a <__stack+0x2b>
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__stack+0x41>
     91c:	80 31       	cpi	r24, 0x10	; 16
     91e:	91 05       	cpc	r25, r1
     920:	51 f0       	breq	.+20     	; 0x936 <__stack+0x37>
     922:	88 31       	cpi	r24, 0x18	; 24
     924:	91 05       	cpc	r25, r1
     926:	51 f0       	breq	.+20     	; 0x93c <__stack+0x3d>
     928:	0b c0       	rjmp	.+22     	; 0x940 <__stack+0x41>
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	08 c0       	rjmp	.+16     	; 0x940 <__stack+0x41>
     930:	84 e0       	ldi	r24, 0x04	; 4
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	05 c0       	rjmp	.+10     	; 0x940 <__stack+0x41>
     936:	88 e0       	ldi	r24, 0x08	; 8
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	02 c0       	rjmp	.+4      	; 0x940 <__stack+0x41>
     93c:	80 e1       	ldi	r24, 0x10	; 16
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	08 95       	ret

00000948 <set_gyro_scale>:
BITS_FS_1000DPS
BITS_FS_2000DPS
returns the range set (250, 500, 1000 or 2000)
-----------------------------------------------------------------------------------------------*/
unsigned int set_gyro_scale(unsigned char sel, int scale)
{
     948:	1f 93       	push	r17
     94a:	cf 93       	push	r28
     94c:	df 93       	push	r29
     94e:	18 2f       	mov	r17, r24
     950:	eb 01       	movw	r28, r22
  unsigned int temp_scale;
  spi_writeReg(sel, MPU9250_GYRO_CONFIG, scale);
     952:	46 2f       	mov	r20, r22
     954:	6b e1       	ldi	r22, 0x1B	; 27
     956:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
  switch (scale)
     95a:	c8 30       	cpi	r28, 0x08	; 8
     95c:	d1 05       	cpc	r29, r1
     95e:	b9 f0       	breq	.+46     	; 0x98e <set_gyro_scale+0x46>
     960:	1c f4       	brge	.+6      	; 0x968 <set_gyro_scale+0x20>
     962:	cd 2b       	or	r28, r29
     964:	39 f0       	breq	.+14     	; 0x974 <set_gyro_scale+0x2c>
     966:	39 c0       	rjmp	.+114    	; 0x9da <set_gyro_scale+0x92>
     968:	c0 31       	cpi	r28, 0x10	; 16
     96a:	d1 05       	cpc	r29, r1
     96c:	e9 f0       	breq	.+58     	; 0x9a8 <set_gyro_scale+0x60>
     96e:	68 97       	sbiw	r28, 0x18	; 24
     970:	41 f1       	breq	.+80     	; 0x9c2 <set_gyro_scale+0x7a>
     972:	33 c0       	rjmp	.+102    	; 0x9da <set_gyro_scale+0x92>
  {
    case BITS_FS_250DPS:
      gyro_divider=131;
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	a3 e0       	ldi	r26, 0x03	; 3
     97a:	b3 e4       	ldi	r27, 0x43	; 67
     97c:	80 93 b7 02 	sts	0x02B7, r24
     980:	90 93 b8 02 	sts	0x02B8, r25
     984:	a0 93 b9 02 	sts	0x02B9, r26
     988:	b0 93 ba 02 	sts	0x02BA, r27
    break;
     98c:	26 c0       	rjmp	.+76     	; 0x9da <set_gyro_scale+0x92>
    case BITS_FS_500DPS:
      gyro_divider=65.5;
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	a3 e8       	ldi	r26, 0x83	; 131
     994:	b2 e4       	ldi	r27, 0x42	; 66
     996:	80 93 b7 02 	sts	0x02B7, r24
     99a:	90 93 b8 02 	sts	0x02B8, r25
     99e:	a0 93 b9 02 	sts	0x02B9, r26
     9a2:	b0 93 ba 02 	sts	0x02BA, r27
    break;
     9a6:	19 c0       	rjmp	.+50     	; 0x9da <set_gyro_scale+0x92>
    case BITS_FS_1000DPS:
      gyro_divider=32.8;
     9a8:	83 e3       	ldi	r24, 0x33	; 51
     9aa:	93 e3       	ldi	r25, 0x33	; 51
     9ac:	a3 e0       	ldi	r26, 0x03	; 3
     9ae:	b2 e4       	ldi	r27, 0x42	; 66
     9b0:	80 93 b7 02 	sts	0x02B7, r24
     9b4:	90 93 b8 02 	sts	0x02B8, r25
     9b8:	a0 93 b9 02 	sts	0x02B9, r26
     9bc:	b0 93 ba 02 	sts	0x02BA, r27
    break;
     9c0:	0c c0       	rjmp	.+24     	; 0x9da <set_gyro_scale+0x92>
    case BITS_FS_2000DPS:
      gyro_divider=16.4;
     9c2:	83 e3       	ldi	r24, 0x33	; 51
     9c4:	93 e3       	ldi	r25, 0x33	; 51
     9c6:	a3 e8       	ldi	r26, 0x83	; 131
     9c8:	b1 e4       	ldi	r27, 0x41	; 65
     9ca:	80 93 b7 02 	sts	0x02B7, r24
     9ce:	90 93 b8 02 	sts	0x02B8, r25
     9d2:	a0 93 b9 02 	sts	0x02B9, r26
     9d6:	b0 93 ba 02 	sts	0x02BA, r27
    break;   
  }
  
  temp_scale=spi_writeReg(sel, MPU9250_GYRO_CONFIG|READ_FLAG, 0x00);
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	6b e9       	ldi	r22, 0x9B	; 155
     9de:	81 2f       	mov	r24, r17
     9e0:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
  
  switch (temp_scale)
     9e4:	88 30       	cpi	r24, 0x08	; 8
     9e6:	91 05       	cpc	r25, r1
     9e8:	71 f0       	breq	.+28     	; 0xa06 <set_gyro_scale+0xbe>
     9ea:	18 f4       	brcc	.+6      	; 0x9f2 <set_gyro_scale+0xaa>
     9ec:	00 97       	sbiw	r24, 0x00	; 0
     9ee:	41 f0       	breq	.+16     	; 0xa00 <set_gyro_scale+0xb8>
     9f0:	12 c0       	rjmp	.+36     	; 0xa16 <set_gyro_scale+0xce>
     9f2:	80 31       	cpi	r24, 0x10	; 16
     9f4:	91 05       	cpc	r25, r1
     9f6:	51 f0       	breq	.+20     	; 0xa0c <set_gyro_scale+0xc4>
     9f8:	88 31       	cpi	r24, 0x18	; 24
     9fa:	91 05       	cpc	r25, r1
     9fc:	51 f0       	breq	.+20     	; 0xa12 <set_gyro_scale+0xca>
     9fe:	0b c0       	rjmp	.+22     	; 0xa16 <set_gyro_scale+0xce>
  {
    case BITS_FS_250DPS:
      temp_scale=250;
     a00:	8a ef       	ldi	r24, 0xFA	; 250
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	08 c0       	rjmp	.+16     	; 0xa16 <set_gyro_scale+0xce>
    break;
    case BITS_FS_500DPS:
      temp_scale=500;
     a06:	84 ef       	ldi	r24, 0xF4	; 244
     a08:	91 e0       	ldi	r25, 0x01	; 1
    break;
     a0a:	05 c0       	rjmp	.+10     	; 0xa16 <set_gyro_scale+0xce>
    case BITS_FS_1000DPS:
      temp_scale=1000;
     a0c:	88 ee       	ldi	r24, 0xE8	; 232
     a0e:	93 e0       	ldi	r25, 0x03	; 3
    break;
     a10:	02 c0       	rjmp	.+4      	; 0xa16 <set_gyro_scale+0xce>
    case BITS_FS_2000DPS:
      temp_scale=2000;
     a12:	80 ed       	ldi	r24, 0xD0	; 208
     a14:	97 e0       	ldi	r25, 0x07	; 7
    break;   
  }
  return temp_scale;
}
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	1f 91       	pop	r17
     a1c:	08 95       	ret

00000a1e <SPIinit_MPU>:
#include "POS_FUNCTIONS.h"

	
//unsigned char compass_addr, compass_sample_rate;

void SPIinit_MPU(unsigned char sel, int sample_rate_div, int low_pass_filter){
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	c8 2f       	mov	r28, r24
     a24:	d4 2f       	mov	r29, r20
	//unsigned char data[6];
	//uint8_t i;
	
	spi_writeReg(sel, MPU9250_PWR_MGMT_1, 0x80);
     a26:	40 e8       	ldi	r20, 0x80	; 128
     a28:	6b e6       	ldi	r22, 0x6B	; 107
     a2a:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a2e:	8f e1       	ldi	r24, 0x1F	; 31
     a30:	9e e4       	ldi	r25, 0x4E	; 78
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	f1 f7       	brne	.-4      	; 0xa32 <SPIinit_MPU+0x14>
     a36:	00 c0       	rjmp	.+0      	; 0xa38 <SPIinit_MPU+0x1a>
     a38:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_PWR_MGMT_1, 0x01);
     a3a:	41 e0       	ldi	r20, 0x01	; 1
     a3c:	6b e6       	ldi	r22, 0x6B	; 107
     a3e:	8c 2f       	mov	r24, r28
     a40:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a44:	8f e1       	ldi	r24, 0x1F	; 31
     a46:	9e e4       	ldi	r25, 0x4E	; 78
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	f1 f7       	brne	.-4      	; 0xa48 <SPIinit_MPU+0x2a>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <SPIinit_MPU+0x30>
     a4e:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_PWR_MGMT_2, 0x00);
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	6c e6       	ldi	r22, 0x6C	; 108
     a54:	8c 2f       	mov	r24, r28
     a56:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a5a:	8f e1       	ldi	r24, 0x1F	; 31
     a5c:	9e e4       	ldi	r25, 0x4E	; 78
     a5e:	01 97       	sbiw	r24, 0x01	; 1
     a60:	f1 f7       	brne	.-4      	; 0xa5e <SPIinit_MPU+0x40>
     a62:	00 c0       	rjmp	.+0      	; 0xa64 <SPIinit_MPU+0x46>
     a64:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_CONFIG, low_pass_filter);
     a66:	4d 2f       	mov	r20, r29
     a68:	6a e1       	ldi	r22, 0x1A	; 26
     a6a:	8c 2f       	mov	r24, r28
     a6c:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a70:	8f e1       	ldi	r24, 0x1F	; 31
     a72:	9e e4       	ldi	r25, 0x4E	; 78
     a74:	01 97       	sbiw	r24, 0x01	; 1
     a76:	f1 f7       	brne	.-4      	; 0xa74 <SPIinit_MPU+0x56>
     a78:	00 c0       	rjmp	.+0      	; 0xa7a <SPIinit_MPU+0x5c>
     a7a:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_GYRO_CONFIG, 0x18);
     a7c:	48 e1       	ldi	r20, 0x18	; 24
     a7e:	6b e1       	ldi	r22, 0x1B	; 27
     a80:	8c 2f       	mov	r24, r28
     a82:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a86:	8f e1       	ldi	r24, 0x1F	; 31
     a88:	9e e4       	ldi	r25, 0x4E	; 78
     a8a:	01 97       	sbiw	r24, 0x01	; 1
     a8c:	f1 f7       	brne	.-4      	; 0xa8a <SPIinit_MPU+0x6c>
     a8e:	00 c0       	rjmp	.+0      	; 0xa90 <SPIinit_MPU+0x72>
     a90:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_ACCEL_CONFIG, 0x08);
     a92:	48 e0       	ldi	r20, 0x08	; 8
     a94:	6c e1       	ldi	r22, 0x1C	; 28
     a96:	8c 2f       	mov	r24, r28
     a98:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     a9c:	8f e1       	ldi	r24, 0x1F	; 31
     a9e:	9e e4       	ldi	r25, 0x4E	; 78
     aa0:	01 97       	sbiw	r24, 0x01	; 1
     aa2:	f1 f7       	brne	.-4      	; 0xaa0 <SPIinit_MPU+0x82>
     aa4:	00 c0       	rjmp	.+0      	; 0xaa6 <SPIinit_MPU+0x88>
     aa6:	00 00       	nop
	_delay_ms(10);
	//BW:20Hz Delay:19.80ms 1kHz Rate 
	spi_writeReg(sel, MPU9250_ACCEL_CONFIG2, 0x09);
     aa8:	49 e0       	ldi	r20, 0x09	; 9
     aaa:	6d e1       	ldi	r22, 0x1D	; 29
     aac:	8c 2f       	mov	r24, r28
     aae:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     ab2:	8f e1       	ldi	r24, 0x1F	; 31
     ab4:	9e e4       	ldi	r25, 0x4E	; 78
     ab6:	01 97       	sbiw	r24, 0x01	; 1
     ab8:	f1 f7       	brne	.-4      	; 0xab6 <SPIinit_MPU+0x98>
     aba:	00 c0       	rjmp	.+0      	; 0xabc <SPIinit_MPU+0x9e>
     abc:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_INT_PIN_CFG, 0x30);
     abe:	40 e3       	ldi	r20, 0x30	; 48
     ac0:	67 e3       	ldi	r22, 0x37	; 55
     ac2:	8c 2f       	mov	r24, r28
     ac4:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     ac8:	8f e1       	ldi	r24, 0x1F	; 31
     aca:	9e e4       	ldi	r25, 0x4E	; 78
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	f1 f7       	brne	.-4      	; 0xacc <SPIinit_MPU+0xae>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <SPIinit_MPU+0xb4>
     ad2:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_USER_CTRL, 0x20);
     ad4:	40 e2       	ldi	r20, 0x20	; 32
     ad6:	6a e6       	ldi	r22, 0x6A	; 106
     ad8:	8c 2f       	mov	r24, r28
     ada:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     ade:	8f e1       	ldi	r24, 0x1F	; 31
     ae0:	9e e4       	ldi	r25, 0x4E	; 78
     ae2:	01 97       	sbiw	r24, 0x01	; 1
     ae4:	f1 f7       	brne	.-4      	; 0xae2 <SPIinit_MPU+0xc4>
     ae6:	00 c0       	rjmp	.+0      	; 0xae8 <SPIinit_MPU+0xca>
     ae8:	00 00       	nop
	_delay_ms(10);
	spi_writeReg(sel, MPU9250_I2C_MST_CTRL, 0x0D);
     aea:	4d e0       	ldi	r20, 0x0D	; 13
     aec:	64 e2       	ldi	r22, 0x24	; 36
     aee:	8c 2f       	mov	r24, r28
     af0:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     af4:	8f e1       	ldi	r24, 0x1F	; 31
     af6:	9e e4       	ldi	r25, 0x4E	; 78
     af8:	01 97       	sbiw	r24, 0x01	; 1
     afa:	f1 f7       	brne	.-4      	; 0xaf8 <SPIinit_MPU+0xda>
     afc:	00 c0       	rjmp	.+0      	; 0xafe <SPIinit_MPU+0xe0>
     afe:	00 00       	nop
	_delay_ms(10);
	//MAG_CNTL2 Setup Via AUX I2C - Reset Chip w/ 0x01
	spi_writeReg(sel, MPU9250_I2C_SLV0_ADDR, AK8963_I2C_ADDR);
     b00:	4c e0       	ldi	r20, 0x0C	; 12
     b02:	65 e2       	ldi	r22, 0x25	; 37
     b04:	8c 2f       	mov	r24, r28
     b06:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	spi_writeReg(sel, MPU9250_I2C_SLV0_REG, AK8963_CNTL2);
     b0a:	4b e0       	ldi	r20, 0x0B	; 11
     b0c:	66 e2       	ldi	r22, 0x26	; 38
     b0e:	8c 2f       	mov	r24, r28
     b10:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	spi_writeReg(sel, MPU9250_I2C_SLV0_DO, 0x01);
     b14:	41 e0       	ldi	r20, 0x01	; 1
     b16:	63 e6       	ldi	r22, 0x63	; 99
     b18:	8c 2f       	mov	r24, r28
     b1a:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	spi_writeReg(sel, MPU9250_I2C_SLV0_CTRL, 0x81);
     b1e:	41 e8       	ldi	r20, 0x81	; 129
     b20:	67 e2       	ldi	r22, 0x27	; 39
     b22:	8c 2f       	mov	r24, r28
     b24:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
     b28:	8f e1       	ldi	r24, 0x1F	; 31
     b2a:	9e e4       	ldi	r25, 0x4E	; 78
     b2c:	01 97       	sbiw	r24, 0x01	; 1
     b2e:	f1 f7       	brne	.-4      	; 0xb2c <SPIinit_MPU+0x10e>
     b30:	00 c0       	rjmp	.+0      	; 0xb32 <SPIinit_MPU+0x114>
     b32:	00 00       	nop
	_delay_ms(10);
	//MAG_CNTL1 Setup Via AUX I2C continuous mode 1=0x12 2=0x16
	spi_writeReg(sel, MPU9250_I2C_SLV0_REG, AK8963_CNTL1);
     b34:	4a e0       	ldi	r20, 0x0A	; 10
     b36:	66 e2       	ldi	r22, 0x26	; 38
     b38:	8c 2f       	mov	r24, r28
     b3a:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	spi_writeReg(sel, MPU9250_I2C_SLV0_DO, 0x12);
     b3e:	42 e1       	ldi	r20, 0x12	; 18
     b40:	63 e6       	ldi	r22, 0x63	; 99
     b42:	8c 2f       	mov	r24, r28
     b44:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	spi_writeReg(sel, MPU9250_I2C_SLV0_CTRL, 0x81);
     b48:	41 e8       	ldi	r20, 0x81	; 129
     b4a:	67 e2       	ldi	r22, 0x27	; 39
     b4c:	8c 2f       	mov	r24, r28
     b4e:	0e 94 1d 08 	call	0x103a	; 0x103a <spi_writeReg>
	
	set_acc_scale(sel, 2);
     b52:	62 e0       	ldi	r22, 0x02	; 2
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	8c 2f       	mov	r24, r28
     b58:	0e 94 39 04 	call	0x872	; 0x872 <set_acc_scale>
	set_gyro_scale(sel, 250);
     b5c:	6a ef       	ldi	r22, 0xFA	; 250
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	8c 2f       	mov	r24, r28
     b62:	0e 94 a4 04 	call	0x948	; 0x948 <set_gyro_scale>
	
	return;
}
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	08 95       	ret

00000b6c <print_record>:
	snprintf(buf, BUFSZ, "*Ttime is: %lu*", new.t);
	uart_puts(buf);	
}

void print_record(struct POS pos)
{
     b6c:	bf 92       	push	r11
     b6e:	cf 92       	push	r12
     b70:	df 92       	push	r13
     b72:	ef 92       	push	r14
     b74:	ff 92       	push	r15
     b76:	0f 93       	push	r16
     b78:	1f 93       	push	r17
     b7a:	cf 93       	push	r28
     b7c:	df 93       	push	r29
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
     b82:	c0 58       	subi	r28, 0x80	; 128
     b84:	d1 09       	sbc	r29, r1
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	c4 57       	subi	r28, 0x74	; 116
     b92:	df 4f       	sbci	r29, 0xFF	; 255
     b94:	f8 80       	ld	r15, Y
     b96:	cc 58       	subi	r28, 0x8C	; 140
     b98:	d0 40       	sbci	r29, 0x00	; 0
     b9a:	c3 57       	subi	r28, 0x73	; 115
     b9c:	df 4f       	sbci	r29, 0xFF	; 255
     b9e:	e8 80       	ld	r14, Y
     ba0:	cd 58       	subi	r28, 0x8D	; 141
     ba2:	d0 40       	sbci	r29, 0x00	; 0
     ba4:	c2 57       	subi	r28, 0x72	; 114
     ba6:	df 4f       	sbci	r29, 0xFF	; 255
     ba8:	d8 80       	ld	r13, Y
     baa:	ce 58       	subi	r28, 0x8E	; 142
     bac:	d0 40       	sbci	r29, 0x00	; 0
     bae:	c1 57       	subi	r28, 0x71	; 113
     bb0:	df 4f       	sbci	r29, 0xFF	; 255
     bb2:	c8 80       	ld	r12, Y
     bb4:	cf 58       	subi	r28, 0x8F	; 143
     bb6:	d0 40       	sbci	r29, 0x00	; 0
	char buf[BUFSZ];
	memset(buf, 0, BUFSZ);
     bb8:	68 94       	set
     bba:	bb 24       	eor	r11, r11
     bbc:	b7 f8       	bld	r11, 7
     bbe:	8e 01       	movw	r16, r28
     bc0:	0f 5f       	subi	r16, 0xFF	; 255
     bc2:	1f 4f       	sbci	r17, 0xFF	; 255
     bc4:	f8 01       	movw	r30, r16
     bc6:	8b 2d       	mov	r24, r11
     bc8:	11 92       	st	Z+, r1
     bca:	8a 95       	dec	r24
     bcc:	e9 f7       	brne	.-6      	; 0xbc8 <print_record+0x5c>
	snprintf(buf, BUFSZ, "*HX%luY%f,X%luY%f,X%luY%f*\n", pos.t, pos.a_x, pos.t, pos.a_y, pos.t, pos.a_z);
     bce:	c5 56       	subi	r28, 0x65	; 101
     bd0:	df 4f       	sbci	r29, 0xFF	; 255
     bd2:	88 81       	ld	r24, Y
     bd4:	cb 59       	subi	r28, 0x9B	; 155
     bd6:	d0 40       	sbci	r29, 0x00	; 0
     bd8:	8f 93       	push	r24
     bda:	c6 56       	subi	r28, 0x66	; 102
     bdc:	df 4f       	sbci	r29, 0xFF	; 255
     bde:	88 81       	ld	r24, Y
     be0:	ca 59       	subi	r28, 0x9A	; 154
     be2:	d0 40       	sbci	r29, 0x00	; 0
     be4:	8f 93       	push	r24
     be6:	c7 56       	subi	r28, 0x67	; 103
     be8:	df 4f       	sbci	r29, 0xFF	; 255
     bea:	88 81       	ld	r24, Y
     bec:	c9 59       	subi	r28, 0x99	; 153
     bee:	d0 40       	sbci	r29, 0x00	; 0
     bf0:	8f 93       	push	r24
     bf2:	c8 56       	subi	r28, 0x68	; 104
     bf4:	df 4f       	sbci	r29, 0xFF	; 255
     bf6:	88 81       	ld	r24, Y
     bf8:	c8 59       	subi	r28, 0x98	; 152
     bfa:	d0 40       	sbci	r29, 0x00	; 0
     bfc:	8f 93       	push	r24
     bfe:	cf 92       	push	r12
     c00:	df 92       	push	r13
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	c9 56       	subi	r28, 0x69	; 105
     c08:	df 4f       	sbci	r29, 0xFF	; 255
     c0a:	88 81       	ld	r24, Y
     c0c:	c7 59       	subi	r28, 0x97	; 151
     c0e:	d0 40       	sbci	r29, 0x00	; 0
     c10:	8f 93       	push	r24
     c12:	ca 56       	subi	r28, 0x6A	; 106
     c14:	df 4f       	sbci	r29, 0xFF	; 255
     c16:	88 81       	ld	r24, Y
     c18:	c6 59       	subi	r28, 0x96	; 150
     c1a:	d0 40       	sbci	r29, 0x00	; 0
     c1c:	8f 93       	push	r24
     c1e:	cb 56       	subi	r28, 0x6B	; 107
     c20:	df 4f       	sbci	r29, 0xFF	; 255
     c22:	88 81       	ld	r24, Y
     c24:	c5 59       	subi	r28, 0x95	; 149
     c26:	d0 40       	sbci	r29, 0x00	; 0
     c28:	8f 93       	push	r24
     c2a:	cc 56       	subi	r28, 0x6C	; 108
     c2c:	df 4f       	sbci	r29, 0xFF	; 255
     c2e:	88 81       	ld	r24, Y
     c30:	c4 59       	subi	r28, 0x94	; 148
     c32:	d0 40       	sbci	r29, 0x00	; 0
     c34:	8f 93       	push	r24
     c36:	cf 92       	push	r12
     c38:	df 92       	push	r13
     c3a:	ef 92       	push	r14
     c3c:	ff 92       	push	r15
     c3e:	cd 56       	subi	r28, 0x6D	; 109
     c40:	df 4f       	sbci	r29, 0xFF	; 255
     c42:	88 81       	ld	r24, Y
     c44:	c3 59       	subi	r28, 0x93	; 147
     c46:	d0 40       	sbci	r29, 0x00	; 0
     c48:	8f 93       	push	r24
     c4a:	ce 56       	subi	r28, 0x6E	; 110
     c4c:	df 4f       	sbci	r29, 0xFF	; 255
     c4e:	88 81       	ld	r24, Y
     c50:	c2 59       	subi	r28, 0x92	; 146
     c52:	d0 40       	sbci	r29, 0x00	; 0
     c54:	8f 93       	push	r24
     c56:	cf 56       	subi	r28, 0x6F	; 111
     c58:	df 4f       	sbci	r29, 0xFF	; 255
     c5a:	88 81       	ld	r24, Y
     c5c:	c1 59       	subi	r28, 0x91	; 145
     c5e:	d0 40       	sbci	r29, 0x00	; 0
     c60:	8f 93       	push	r24
     c62:	c0 57       	subi	r28, 0x70	; 112
     c64:	df 4f       	sbci	r29, 0xFF	; 255
     c66:	88 81       	ld	r24, Y
     c68:	c0 59       	subi	r28, 0x90	; 144
     c6a:	d0 40       	sbci	r29, 0x00	; 0
     c6c:	8f 93       	push	r24
     c6e:	cf 92       	push	r12
     c70:	df 92       	push	r13
     c72:	ef 92       	push	r14
     c74:	ff 92       	push	r15
     c76:	83 ed       	ldi	r24, 0xD3	; 211
     c78:	91 e0       	ldi	r25, 0x01	; 1
     c7a:	9f 93       	push	r25
     c7c:	8f 93       	push	r24
     c7e:	1f 92       	push	r1
     c80:	bf 92       	push	r11
     c82:	1f 93       	push	r17
     c84:	0f 93       	push	r16
     c86:	0e 94 15 10 	call	0x202a	; 0x202a <snprintf>
	uart_puts(buf);
     c8a:	c8 01       	movw	r24, r16
     c8c:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	
	memset(buf, 0, BUFSZ);
     c90:	f8 01       	movw	r30, r16
     c92:	8b 2d       	mov	r24, r11
     c94:	11 92       	st	Z+, r1
     c96:	8a 95       	dec	r24
     c98:	e9 f7       	brne	.-6      	; 0xc94 <print_record+0x128>
	snprintf(buf, BUFSZ, "*JX%luY%f,X%luY%f,X%luY%f*\n",pos.t, pos.g_x, pos.t, pos.g_y, pos.t, pos.g_z);
     c9a:	c9 55       	subi	r28, 0x59	; 89
     c9c:	df 4f       	sbci	r29, 0xFF	; 255
     c9e:	88 81       	ld	r24, Y
     ca0:	c7 5a       	subi	r28, 0xA7	; 167
     ca2:	d0 40       	sbci	r29, 0x00	; 0
     ca4:	8f 93       	push	r24
     ca6:	ca 55       	subi	r28, 0x5A	; 90
     ca8:	df 4f       	sbci	r29, 0xFF	; 255
     caa:	88 81       	ld	r24, Y
     cac:	c6 5a       	subi	r28, 0xA6	; 166
     cae:	d0 40       	sbci	r29, 0x00	; 0
     cb0:	8f 93       	push	r24
     cb2:	cb 55       	subi	r28, 0x5B	; 91
     cb4:	df 4f       	sbci	r29, 0xFF	; 255
     cb6:	88 81       	ld	r24, Y
     cb8:	c5 5a       	subi	r28, 0xA5	; 165
     cba:	d0 40       	sbci	r29, 0x00	; 0
     cbc:	8f 93       	push	r24
     cbe:	cc 55       	subi	r28, 0x5C	; 92
     cc0:	df 4f       	sbci	r29, 0xFF	; 255
     cc2:	88 81       	ld	r24, Y
     cc4:	c4 5a       	subi	r28, 0xA4	; 164
     cc6:	d0 40       	sbci	r29, 0x00	; 0
     cc8:	8f 93       	push	r24
     cca:	cf 92       	push	r12
     ccc:	df 92       	push	r13
     cce:	ef 92       	push	r14
     cd0:	ff 92       	push	r15
     cd2:	cd 55       	subi	r28, 0x5D	; 93
     cd4:	df 4f       	sbci	r29, 0xFF	; 255
     cd6:	88 81       	ld	r24, Y
     cd8:	c3 5a       	subi	r28, 0xA3	; 163
     cda:	d0 40       	sbci	r29, 0x00	; 0
     cdc:	8f 93       	push	r24
     cde:	ce 55       	subi	r28, 0x5E	; 94
     ce0:	df 4f       	sbci	r29, 0xFF	; 255
     ce2:	88 81       	ld	r24, Y
     ce4:	c2 5a       	subi	r28, 0xA2	; 162
     ce6:	d0 40       	sbci	r29, 0x00	; 0
     ce8:	8f 93       	push	r24
     cea:	cf 55       	subi	r28, 0x5F	; 95
     cec:	df 4f       	sbci	r29, 0xFF	; 255
     cee:	88 81       	ld	r24, Y
     cf0:	c1 5a       	subi	r28, 0xA1	; 161
     cf2:	d0 40       	sbci	r29, 0x00	; 0
     cf4:	8f 93       	push	r24
     cf6:	c0 56       	subi	r28, 0x60	; 96
     cf8:	df 4f       	sbci	r29, 0xFF	; 255
     cfa:	88 81       	ld	r24, Y
     cfc:	c0 5a       	subi	r28, 0xA0	; 160
     cfe:	d0 40       	sbci	r29, 0x00	; 0
     d00:	8f 93       	push	r24
     d02:	cf 92       	push	r12
     d04:	df 92       	push	r13
     d06:	ef 92       	push	r14
     d08:	ff 92       	push	r15
     d0a:	c1 56       	subi	r28, 0x61	; 97
     d0c:	df 4f       	sbci	r29, 0xFF	; 255
     d0e:	88 81       	ld	r24, Y
     d10:	cf 59       	subi	r28, 0x9F	; 159
     d12:	d0 40       	sbci	r29, 0x00	; 0
     d14:	8f 93       	push	r24
     d16:	c2 56       	subi	r28, 0x62	; 98
     d18:	df 4f       	sbci	r29, 0xFF	; 255
     d1a:	88 81       	ld	r24, Y
     d1c:	ce 59       	subi	r28, 0x9E	; 158
     d1e:	d0 40       	sbci	r29, 0x00	; 0
     d20:	8f 93       	push	r24
     d22:	c3 56       	subi	r28, 0x63	; 99
     d24:	df 4f       	sbci	r29, 0xFF	; 255
     d26:	88 81       	ld	r24, Y
     d28:	cd 59       	subi	r28, 0x9D	; 157
     d2a:	d0 40       	sbci	r29, 0x00	; 0
     d2c:	8f 93       	push	r24
     d2e:	c4 56       	subi	r28, 0x64	; 100
     d30:	df 4f       	sbci	r29, 0xFF	; 255
     d32:	88 81       	ld	r24, Y
     d34:	cc 59       	subi	r28, 0x9C	; 156
     d36:	d0 40       	sbci	r29, 0x00	; 0
     d38:	8f 93       	push	r24
     d3a:	cf 92       	push	r12
     d3c:	df 92       	push	r13
     d3e:	ef 92       	push	r14
     d40:	ff 92       	push	r15
     d42:	8f ee       	ldi	r24, 0xEF	; 239
     d44:	91 e0       	ldi	r25, 0x01	; 1
     d46:	9f 93       	push	r25
     d48:	8f 93       	push	r24
     d4a:	1f 92       	push	r1
     d4c:	bf 92       	push	r11
     d4e:	1f 93       	push	r17
     d50:	0f 93       	push	r16
     d52:	0e 94 15 10 	call	0x202a	; 0x202a <snprintf>
	uart_puts(buf);
     d56:	0f b6       	in	r0, 0x3f	; 63
     d58:	f8 94       	cli
     d5a:	de bf       	out	0x3e, r29	; 62
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	cd bf       	out	0x3d, r28	; 61
     d60:	c8 01       	movw	r24, r16
     d62:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	
	memset(buf, 0, BUFSZ);
     d66:	f8 01       	movw	r30, r16
     d68:	8b 2d       	mov	r24, r11
     d6a:	11 92       	st	Z+, r1
     d6c:	8a 95       	dec	r24
     d6e:	e9 f7       	brne	.-6      	; 0xd6a <print_record+0x1fe>
	snprintf(buf, BUFSZ, "*KX%luY%f,X%luY%f,X%luY%f*\n",pos.t, pos.m_x, pos.t, pos.m_y, pos.t, pos.m_z);
     d70:	cd 54       	subi	r28, 0x4D	; 77
     d72:	df 4f       	sbci	r29, 0xFF	; 255
     d74:	88 81       	ld	r24, Y
     d76:	c3 5b       	subi	r28, 0xB3	; 179
     d78:	d0 40       	sbci	r29, 0x00	; 0
     d7a:	8f 93       	push	r24
     d7c:	ce 54       	subi	r28, 0x4E	; 78
     d7e:	df 4f       	sbci	r29, 0xFF	; 255
     d80:	88 81       	ld	r24, Y
     d82:	c2 5b       	subi	r28, 0xB2	; 178
     d84:	d0 40       	sbci	r29, 0x00	; 0
     d86:	8f 93       	push	r24
     d88:	cf 54       	subi	r28, 0x4F	; 79
     d8a:	df 4f       	sbci	r29, 0xFF	; 255
     d8c:	88 81       	ld	r24, Y
     d8e:	c1 5b       	subi	r28, 0xB1	; 177
     d90:	d0 40       	sbci	r29, 0x00	; 0
     d92:	8f 93       	push	r24
     d94:	c0 55       	subi	r28, 0x50	; 80
     d96:	df 4f       	sbci	r29, 0xFF	; 255
     d98:	88 81       	ld	r24, Y
     d9a:	c0 5b       	subi	r28, 0xB0	; 176
     d9c:	d0 40       	sbci	r29, 0x00	; 0
     d9e:	8f 93       	push	r24
     da0:	cf 92       	push	r12
     da2:	df 92       	push	r13
     da4:	ef 92       	push	r14
     da6:	ff 92       	push	r15
     da8:	c1 55       	subi	r28, 0x51	; 81
     daa:	df 4f       	sbci	r29, 0xFF	; 255
     dac:	88 81       	ld	r24, Y
     dae:	cf 5a       	subi	r28, 0xAF	; 175
     db0:	d0 40       	sbci	r29, 0x00	; 0
     db2:	8f 93       	push	r24
     db4:	c2 55       	subi	r28, 0x52	; 82
     db6:	df 4f       	sbci	r29, 0xFF	; 255
     db8:	88 81       	ld	r24, Y
     dba:	ce 5a       	subi	r28, 0xAE	; 174
     dbc:	d0 40       	sbci	r29, 0x00	; 0
     dbe:	8f 93       	push	r24
     dc0:	c3 55       	subi	r28, 0x53	; 83
     dc2:	df 4f       	sbci	r29, 0xFF	; 255
     dc4:	88 81       	ld	r24, Y
     dc6:	cd 5a       	subi	r28, 0xAD	; 173
     dc8:	d0 40       	sbci	r29, 0x00	; 0
     dca:	8f 93       	push	r24
     dcc:	c4 55       	subi	r28, 0x54	; 84
     dce:	df 4f       	sbci	r29, 0xFF	; 255
     dd0:	88 81       	ld	r24, Y
     dd2:	cc 5a       	subi	r28, 0xAC	; 172
     dd4:	d0 40       	sbci	r29, 0x00	; 0
     dd6:	8f 93       	push	r24
     dd8:	cf 92       	push	r12
     dda:	df 92       	push	r13
     ddc:	ef 92       	push	r14
     dde:	ff 92       	push	r15
     de0:	c5 55       	subi	r28, 0x55	; 85
     de2:	df 4f       	sbci	r29, 0xFF	; 255
     de4:	88 81       	ld	r24, Y
     de6:	cb 5a       	subi	r28, 0xAB	; 171
     de8:	d0 40       	sbci	r29, 0x00	; 0
     dea:	8f 93       	push	r24
     dec:	c6 55       	subi	r28, 0x56	; 86
     dee:	df 4f       	sbci	r29, 0xFF	; 255
     df0:	88 81       	ld	r24, Y
     df2:	ca 5a       	subi	r28, 0xAA	; 170
     df4:	d0 40       	sbci	r29, 0x00	; 0
     df6:	8f 93       	push	r24
     df8:	c7 55       	subi	r28, 0x57	; 87
     dfa:	df 4f       	sbci	r29, 0xFF	; 255
     dfc:	88 81       	ld	r24, Y
     dfe:	c9 5a       	subi	r28, 0xA9	; 169
     e00:	d0 40       	sbci	r29, 0x00	; 0
     e02:	8f 93       	push	r24
     e04:	c8 55       	subi	r28, 0x58	; 88
     e06:	df 4f       	sbci	r29, 0xFF	; 255
     e08:	88 81       	ld	r24, Y
     e0a:	c8 5a       	subi	r28, 0xA8	; 168
     e0c:	d0 40       	sbci	r29, 0x00	; 0
     e0e:	8f 93       	push	r24
     e10:	cf 92       	push	r12
     e12:	df 92       	push	r13
     e14:	ef 92       	push	r14
     e16:	ff 92       	push	r15
     e18:	8b e0       	ldi	r24, 0x0B	; 11
     e1a:	92 e0       	ldi	r25, 0x02	; 2
     e1c:	9f 93       	push	r25
     e1e:	8f 93       	push	r24
     e20:	1f 92       	push	r1
     e22:	bf 92       	push	r11
     e24:	1f 93       	push	r17
     e26:	0f 93       	push	r16
     e28:	0e 94 15 10 	call	0x202a	; 0x202a <snprintf>
	uart_puts(buf);
     e2c:	c8 01       	movw	r24, r16
     e2e:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	f8 94       	cli
     e36:	de bf       	out	0x3e, r29	; 62
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	cd bf       	out	0x3d, r28	; 61
	//_delay_ms(30);
	
     e3c:	c0 58       	subi	r28, 0x80	; 128
     e3e:	df 4f       	sbci	r29, 0xFF	; 255
     e40:	0f b6       	in	r0, 0x3f	; 63
     e42:	f8 94       	cli
     e44:	de bf       	out	0x3e, r29	; 62
     e46:	0f be       	out	0x3f, r0	; 63
     e48:	cd bf       	out	0x3d, r28	; 61
     e4a:	df 91       	pop	r29
     e4c:	cf 91       	pop	r28
     e4e:	1f 91       	pop	r17
     e50:	0f 91       	pop	r16
     e52:	ff 90       	pop	r15
     e54:	ef 90       	pop	r14
     e56:	df 90       	pop	r13
     e58:	cf 90       	pop	r12
     e5a:	bf 90       	pop	r11
     e5c:	08 95       	ret

00000e5e <record_window>:
#include "asf.h"

#define BUFSZ 128

void record_window()
{
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	cd b7       	in	r28, 0x3d	; 61
     e64:	de b7       	in	r29, 0x3e	; 62
     e66:	a8 97       	sbiw	r28, 0x28	; 40
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	f8 94       	cli
     e6c:	de bf       	out	0x3e, r29	; 62
     e6e:	0f be       	out	0x3f, r0	; 63
     e70:	cd bf       	out	0x3d, r28	; 61
	char buf[BUFSZ];
	int rate=0;
	uart_puts("*HC**JC**KC*");
     e72:	80 e6       	ldi	r24, 0x60	; 96
     e74:	91 e0       	ldi	r25, 0x01	; 1
     e76:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	uart_puts("*TRecording....*");
     e7a:	87 e2       	ldi	r24, 0x27	; 39
     e7c:	92 e0       	ldi	r25, 0x02	; 2
     e7e:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
	count_t=0;
     e82:	10 92 7a 02 	sts	0x027A, r1
     e86:	10 92 7b 02 	sts	0x027B, r1
     e8a:	10 92 7c 02 	sts	0x027C, r1
     e8e:	10 92 7d 02 	sts	0x027D, r1
	{
	 //_delay_ms(1);
	 read_all(sensor1_cs);
	 if(count_t>30000){count_t=0;}
	 temp_pos.t=count_t;
	 temp_pos.a_x=Accel_data[0];
     e92:	0f 2e       	mov	r0, r31
     e94:	fe e7       	ldi	r31, 0x7E	; 126
     e96:	cf 2e       	mov	r12, r31
     e98:	f2 e0       	ldi	r31, 0x02	; 2
     e9a:	df 2e       	mov	r13, r31
     e9c:	f0 2d       	mov	r31, r0
	 temp_pos.a_y=Accel_data[1];
	 temp_pos.a_z=Accel_data[2];
	 
	temp_pos.g_x=Gyro_data[0];
     e9e:	0f 2e       	mov	r0, r31
     ea0:	f2 e9       	ldi	r31, 0x92	; 146
     ea2:	ef 2e       	mov	r14, r31
     ea4:	f2 e0       	ldi	r31, 0x02	; 2
     ea6:	ff 2e       	mov	r15, r31
     ea8:	f0 2d       	mov	r31, r0
	temp_pos.g_y=Gyro_data[1];
	temp_pos.g_z=Gyro_data[2];
	
	temp_pos.m_x=Mag_data[0];
     eaa:	06 ea       	ldi	r16, 0xA6	; 166
     eac:	12 e0       	ldi	r17, 0x02	; 2
	temp_pos.m_y=Mag_data[1];
	temp_pos.m_z=Mag_data[2];
	 rate++;
	 print_record(temp_pos);
     eae:	0f 2e       	mov	r0, r31
     eb0:	f8 e2       	ldi	r31, 0x28	; 40
     eb2:	bf 2e       	mov	r11, r31
     eb4:	f0 2d       	mov	r31, r0
	count_t=0;
	struct POS temp_pos;
	while(1)
	{
	 //_delay_ms(1);
	 read_all(sensor1_cs);
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	0e 94 26 03 	call	0x64c	; 0x64c <read_all>
	 if(count_t>30000){count_t=0;}
     ebc:	80 91 7a 02 	lds	r24, 0x027A
     ec0:	90 91 7b 02 	lds	r25, 0x027B
     ec4:	a0 91 7c 02 	lds	r26, 0x027C
     ec8:	b0 91 7d 02 	lds	r27, 0x027D
     ecc:	81 33       	cpi	r24, 0x31	; 49
     ece:	95 47       	sbci	r25, 0x75	; 117
     ed0:	a1 05       	cpc	r26, r1
     ed2:	b1 05       	cpc	r27, r1
     ed4:	40 f0       	brcs	.+16     	; 0xee6 <record_window+0x88>
     ed6:	10 92 7a 02 	sts	0x027A, r1
     eda:	10 92 7b 02 	sts	0x027B, r1
     ede:	10 92 7c 02 	sts	0x027C, r1
     ee2:	10 92 7d 02 	sts	0x027D, r1
	 temp_pos.t=count_t;
     ee6:	80 91 7a 02 	lds	r24, 0x027A
     eea:	90 91 7b 02 	lds	r25, 0x027B
     eee:	a0 91 7c 02 	lds	r26, 0x027C
     ef2:	b0 91 7d 02 	lds	r27, 0x027D
     ef6:	89 83       	std	Y+1, r24	; 0x01
     ef8:	9a 83       	std	Y+2, r25	; 0x02
     efa:	ab 83       	std	Y+3, r26	; 0x03
     efc:	bc 83       	std	Y+4, r27	; 0x04
	 temp_pos.a_x=Accel_data[0];
     efe:	f6 01       	movw	r30, r12
     f00:	80 81       	ld	r24, Z
     f02:	91 81       	ldd	r25, Z+1	; 0x01
     f04:	a2 81       	ldd	r26, Z+2	; 0x02
     f06:	b3 81       	ldd	r27, Z+3	; 0x03
     f08:	8d 83       	std	Y+5, r24	; 0x05
     f0a:	9e 83       	std	Y+6, r25	; 0x06
     f0c:	af 83       	std	Y+7, r26	; 0x07
     f0e:	b8 87       	std	Y+8, r27	; 0x08
	 temp_pos.a_y=Accel_data[1];
     f10:	84 81       	ldd	r24, Z+4	; 0x04
     f12:	95 81       	ldd	r25, Z+5	; 0x05
     f14:	a6 81       	ldd	r26, Z+6	; 0x06
     f16:	b7 81       	ldd	r27, Z+7	; 0x07
     f18:	89 87       	std	Y+9, r24	; 0x09
     f1a:	9a 87       	std	Y+10, r25	; 0x0a
     f1c:	ab 87       	std	Y+11, r26	; 0x0b
     f1e:	bc 87       	std	Y+12, r27	; 0x0c
	 temp_pos.a_z=Accel_data[2];
     f20:	80 85       	ldd	r24, Z+8	; 0x08
     f22:	91 85       	ldd	r25, Z+9	; 0x09
     f24:	a2 85       	ldd	r26, Z+10	; 0x0a
     f26:	b3 85       	ldd	r27, Z+11	; 0x0b
     f28:	8d 87       	std	Y+13, r24	; 0x0d
     f2a:	9e 87       	std	Y+14, r25	; 0x0e
     f2c:	af 87       	std	Y+15, r26	; 0x0f
     f2e:	b8 8b       	std	Y+16, r27	; 0x10
	 
	temp_pos.g_x=Gyro_data[0];
     f30:	f7 01       	movw	r30, r14
     f32:	80 81       	ld	r24, Z
     f34:	91 81       	ldd	r25, Z+1	; 0x01
     f36:	a2 81       	ldd	r26, Z+2	; 0x02
     f38:	b3 81       	ldd	r27, Z+3	; 0x03
     f3a:	89 8b       	std	Y+17, r24	; 0x11
     f3c:	9a 8b       	std	Y+18, r25	; 0x12
     f3e:	ab 8b       	std	Y+19, r26	; 0x13
     f40:	bc 8b       	std	Y+20, r27	; 0x14
	temp_pos.g_y=Gyro_data[1];
     f42:	84 81       	ldd	r24, Z+4	; 0x04
     f44:	95 81       	ldd	r25, Z+5	; 0x05
     f46:	a6 81       	ldd	r26, Z+6	; 0x06
     f48:	b7 81       	ldd	r27, Z+7	; 0x07
     f4a:	8d 8b       	std	Y+21, r24	; 0x15
     f4c:	9e 8b       	std	Y+22, r25	; 0x16
     f4e:	af 8b       	std	Y+23, r26	; 0x17
     f50:	b8 8f       	std	Y+24, r27	; 0x18
	temp_pos.g_z=Gyro_data[2];
     f52:	80 85       	ldd	r24, Z+8	; 0x08
     f54:	91 85       	ldd	r25, Z+9	; 0x09
     f56:	a2 85       	ldd	r26, Z+10	; 0x0a
     f58:	b3 85       	ldd	r27, Z+11	; 0x0b
     f5a:	89 8f       	std	Y+25, r24	; 0x19
     f5c:	9a 8f       	std	Y+26, r25	; 0x1a
     f5e:	ab 8f       	std	Y+27, r26	; 0x1b
     f60:	bc 8f       	std	Y+28, r27	; 0x1c
	
	temp_pos.m_x=Mag_data[0];
     f62:	f8 01       	movw	r30, r16
     f64:	80 81       	ld	r24, Z
     f66:	91 81       	ldd	r25, Z+1	; 0x01
     f68:	a2 81       	ldd	r26, Z+2	; 0x02
     f6a:	b3 81       	ldd	r27, Z+3	; 0x03
     f6c:	8d 8f       	std	Y+29, r24	; 0x1d
     f6e:	9e 8f       	std	Y+30, r25	; 0x1e
     f70:	af 8f       	std	Y+31, r26	; 0x1f
     f72:	b8 a3       	std	Y+32, r27	; 0x20
	temp_pos.m_y=Mag_data[1];
     f74:	84 81       	ldd	r24, Z+4	; 0x04
     f76:	95 81       	ldd	r25, Z+5	; 0x05
     f78:	a6 81       	ldd	r26, Z+6	; 0x06
     f7a:	b7 81       	ldd	r27, Z+7	; 0x07
     f7c:	89 a3       	std	Y+33, r24	; 0x21
     f7e:	9a a3       	std	Y+34, r25	; 0x22
     f80:	ab a3       	std	Y+35, r26	; 0x23
     f82:	bc a3       	std	Y+36, r27	; 0x24
	temp_pos.m_z=Mag_data[2];
     f84:	80 85       	ldd	r24, Z+8	; 0x08
     f86:	91 85       	ldd	r25, Z+9	; 0x09
     f88:	a2 85       	ldd	r26, Z+10	; 0x0a
     f8a:	b3 85       	ldd	r27, Z+11	; 0x0b
     f8c:	8d a3       	std	Y+37, r24	; 0x25
     f8e:	9e a3       	std	Y+38, r25	; 0x26
     f90:	af a3       	std	Y+39, r26	; 0x27
     f92:	b8 a7       	std	Y+40, r27	; 0x28
	 rate++;
	 print_record(temp_pos);
     f94:	8d b7       	in	r24, 0x3d	; 61
     f96:	9e b7       	in	r25, 0x3e	; 62
     f98:	88 97       	sbiw	r24, 0x28	; 40
     f9a:	0f b6       	in	r0, 0x3f	; 63
     f9c:	f8 94       	cli
     f9e:	9e bf       	out	0x3e, r25	; 62
     fa0:	0f be       	out	0x3f, r0	; 63
     fa2:	8d bf       	out	0x3d, r24	; 61
     fa4:	ad b7       	in	r26, 0x3d	; 61
     fa6:	be b7       	in	r27, 0x3e	; 62
     fa8:	11 96       	adiw	r26, 0x01	; 1
     faa:	fe 01       	movw	r30, r28
     fac:	31 96       	adiw	r30, 0x01	; 1
     fae:	8b 2d       	mov	r24, r11
     fb0:	01 90       	ld	r0, Z+
     fb2:	0d 92       	st	X+, r0
     fb4:	8a 95       	dec	r24
     fb6:	e1 f7       	brne	.-8      	; 0xfb0 <record_window+0x152>
     fb8:	0e 94 b6 05 	call	0xb6c	; 0xb6c <print_record>
	}
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	77 cf       	rjmp	.-274    	; 0xeb6 <record_window+0x58>

00000fc8 <select>:
		SPDR=0xFF;
	}
	deselect(sel);
	_delay_us(10);
	return 0;
}
     fc8:	82 30       	cpi	r24, 0x02	; 2
     fca:	49 f0       	breq	.+18     	; 0xfde <select+0x16>
     fcc:	18 f4       	brcc	.+6      	; 0xfd4 <select+0xc>
     fce:	88 23       	and	r24, r24
     fd0:	61 f0       	breq	.+24     	; 0xfea <select+0x22>
     fd2:	08 95       	ret
     fd4:	86 30       	cpi	r24, 0x06	; 6
     fd6:	39 f0       	breq	.+14     	; 0xfe6 <select+0x1e>
     fd8:	87 30       	cpi	r24, 0x07	; 7
     fda:	19 f0       	breq	.+6      	; 0xfe2 <select+0x1a>
     fdc:	08 95       	ret
     fde:	2a 98       	cbi	0x05, 2	; 5
     fe0:	08 95       	ret
     fe2:	2f 98       	cbi	0x05, 7	; 5
     fe4:	08 95       	ret
     fe6:	2e 98       	cbi	0x05, 6	; 5
     fe8:	08 95       	ret
     fea:	40 98       	cbi	0x08, 0	; 8
     fec:	08 95       	ret

00000fee <deselect>:
     fee:	82 30       	cpi	r24, 0x02	; 2
     ff0:	49 f0       	breq	.+18     	; 0x1004 <deselect+0x16>
     ff2:	18 f4       	brcc	.+6      	; 0xffa <deselect+0xc>
     ff4:	88 23       	and	r24, r24
     ff6:	61 f0       	breq	.+24     	; 0x1010 <deselect+0x22>
     ff8:	08 95       	ret
     ffa:	86 30       	cpi	r24, 0x06	; 6
     ffc:	39 f0       	breq	.+14     	; 0x100c <deselect+0x1e>
     ffe:	87 30       	cpi	r24, 0x07	; 7
    1000:	19 f0       	breq	.+6      	; 0x1008 <deselect+0x1a>
    1002:	08 95       	ret
    1004:	2a 9a       	sbi	0x05, 2	; 5
    1006:	08 95       	ret
    1008:	2f 9a       	sbi	0x05, 7	; 5
    100a:	08 95       	ret
    100c:	2e 9a       	sbi	0x05, 6	; 5
    100e:	08 95       	ret
    1010:	40 9a       	sbi	0x08, 0	; 8
    1012:	08 95       	ret

00001014 <init_SPI>:
    1014:	84 b1       	in	r24, 0x04	; 4
    1016:	8e 6e       	ori	r24, 0xEE	; 238
    1018:	84 b9       	out	0x04, r24	; 4
    101a:	82 e0       	ldi	r24, 0x02	; 2
    101c:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
    1020:	87 e0       	ldi	r24, 0x07	; 7
    1022:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
    1026:	86 e0       	ldi	r24, 0x06	; 6
    1028:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
    102c:	38 9a       	sbi	0x07, 0	; 7
    102e:	40 9a       	sbi	0x08, 0	; 8
    1030:	1c bc       	out	0x2c, r1	; 44
    1032:	8d e5       	ldi	r24, 0x5D	; 93
    1034:	8c bd       	out	0x2c, r24	; 44
    1036:	1d bc       	out	0x2d, r1	; 45
    1038:	08 95       	ret

0000103a <spi_writeReg>:

unsigned int spi_writeReg(unsigned char sel, unsigned char reg_addr, unsigned char data){
    103a:	1f 93       	push	r17
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	c8 2f       	mov	r28, r24
    1042:	16 2f       	mov	r17, r22
    1044:	d4 2f       	mov	r29, r20
	unsigned int temp_val;
	select(sel);
    1046:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <select>
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    104a:	1e bd       	out	0x2e, r17	; 46
	
	asm volatile("nop");
    104c:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    104e:	0d b4       	in	r0, 0x2d	; 45
    1050:	07 fe       	sbrs	r0, 7
    1052:	fd cf       	rjmp	.-6      	; 0x104e <spi_writeReg+0x14>
	return SPDR;
    1054:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1056:	de bd       	out	0x2e, r29	; 46
	
	asm volatile("nop");
    1058:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    105a:	0d b4       	in	r0, 0x2d	; 45
    105c:	07 fe       	sbrs	r0, 7
    105e:	fd cf       	rjmp	.-6      	; 0x105a <spi_writeReg+0x20>
	return SPDR;
    1060:	de b5       	in	r29, 0x2e	; 46
	transfer(reg_addr);
	temp_val=transfer(data);
	deselect(sel);
    1062:	8c 2f       	mov	r24, r28
    1064:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1068:	85 e8       	ldi	r24, 0x85	; 133
    106a:	8a 95       	dec	r24
    106c:	f1 f7       	brne	.-4      	; 0x106a <spi_writeReg+0x30>
    106e:	00 00       	nop
	_delay_us(50);
	return temp_val;
}
    1070:	8d 2f       	mov	r24, r29
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	df 91       	pop	r29
    1076:	cf 91       	pop	r28
    1078:	1f 91       	pop	r17
    107a:	08 95       	ret

0000107c <spi_readRegs>:

void spi_readRegs(unsigned char sel, unsigned char reg_addr,
		unsigned char length, unsigned char *data) {
    107c:	ef 92       	push	r14
    107e:	ff 92       	push	r15
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	18 2f       	mov	r17, r24
    1088:	d6 2f       	mov	r29, r22
    108a:	c4 2f       	mov	r28, r20
    108c:	79 01       	movw	r14, r18
	unsigned int  i = 0;
	
	select(sel);
    108e:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <select>
	transfer(reg_addr | readbit);
    1092:	d0 68       	ori	r29, 0x80	; 128
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1094:	de bd       	out	0x2e, r29	; 46
	
	asm volatile("nop");
    1096:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1098:	0d b4       	in	r0, 0x2d	; 45
    109a:	07 fe       	sbrs	r0, 7
    109c:	fd cf       	rjmp	.-6      	; 0x1098 <spi_readRegs+0x1c>
	return SPDR;
    109e:	8e b5       	in	r24, 0x2e	; 46
	for(i=0; i<length; i++) data[i] = transfer(0x00);
    10a0:	4c 2f       	mov	r20, r28
    10a2:	50 e0       	ldi	r21, 0x00	; 0
    10a4:	41 15       	cp	r20, r1
    10a6:	51 05       	cpc	r21, r1
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <spi_readRegs+0x4a>
    10aa:	f7 01       	movw	r30, r14
    10ac:	97 01       	movw	r18, r14
    10ae:	24 0f       	add	r18, r20
    10b0:	35 1f       	adc	r19, r21
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    10b2:	1e bc       	out	0x2e, r1	; 46
	
	asm volatile("nop");
    10b4:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    10b6:	0d b4       	in	r0, 0x2d	; 45
    10b8:	07 fe       	sbrs	r0, 7
    10ba:	fd cf       	rjmp	.-6      	; 0x10b6 <spi_readRegs+0x3a>
	return SPDR;
    10bc:	9e b5       	in	r25, 0x2e	; 46
    10be:	91 93       	st	Z+, r25
    10c0:	e2 17       	cp	r30, r18
    10c2:	f3 07       	cpc	r31, r19
    10c4:	b1 f7       	brne	.-20     	; 0x10b2 <spi_readRegs+0x36>
	deselect(sel);
    10c6:	81 2f       	mov	r24, r17
    10c8:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
    10cc:	85 e8       	ldi	r24, 0x85	; 133
    10ce:	8a 95       	dec	r24
    10d0:	f1 f7       	brne	.-4      	; 0x10ce <spi_readRegs+0x52>
    10d2:	00 00       	nop
	_delay_us(50);
}
    10d4:	df 91       	pop	r29
    10d6:	cf 91       	pop	r28
    10d8:	1f 91       	pop	r17
    10da:	ff 90       	pop	r15
    10dc:	ef 90       	pop	r14
    10de:	08 95       	ret

000010e0 <sram_init>:


//SRAM setup, should return 1 if success and 0 if failure
uint8_t sram_init()
{
    10e0:	cf 93       	push	r28
	add_l=0;
    10e2:	10 92 a4 02 	sts	0x02A4, r1
	add_m=0;
    10e6:	10 92 b2 02 	sts	0x02B2, r1
	add_h=0;
    10ea:	10 92 a5 02 	sts	0x02A5, r1
	
	select(sram_cs);
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <select>
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	8e bd       	out	0x2e, r24	; 46
	
	asm volatile("nop");
    10f8:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    10fa:	0d b4       	in	r0, 0x2d	; 45
    10fc:	07 fe       	sbrs	r0, 7
    10fe:	fd cf       	rjmp	.-6      	; 0x10fa <sram_init+0x1a>
	return SPDR;
    1100:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1102:	1e bc       	out	0x2e, r1	; 46
	
	asm volatile("nop");
    1104:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1106:	0d b4       	in	r0, 0x2d	; 45
    1108:	07 fe       	sbrs	r0, 7
    110a:	fd cf       	rjmp	.-6      	; 0x1106 <sram_init+0x26>
	return SPDR;
    110c:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    110e:	85 e0       	ldi	r24, 0x05	; 5
    1110:	8e bd       	out	0x2e, r24	; 46
	
	asm volatile("nop");
    1112:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1114:	0d b4       	in	r0, 0x2d	; 45
    1116:	07 fe       	sbrs	r0, 7
    1118:	fd cf       	rjmp	.-6      	; 0x1114 <sram_init+0x34>
	return SPDR;
    111a:	ce b5       	in	r28, 0x2e	; 46
	transfer(sram_WRMR);
	transfer(0x00);
	unsigned char test=transfer(sram_RDMR);
	deselect(sram_cs);
    111c:	80 e0       	ldi	r24, 0x00	; 0
    111e:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
	if(test==0)
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	c1 11       	cpse	r28, r1
    1126:	80 e0       	ldi	r24, 0x00	; 0
	else
	{
		return 0;
	}
	
}
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <add_inc>:


void add_inc()
{
	if(add_l==255 && add_m==255 && add_h==1){uart_puts("*TMemory Over Flow*");while(1){}}//add in user feed back
    112c:	80 91 a4 02 	lds	r24, 0x02A4
    1130:	8f 3f       	cpi	r24, 0xFF	; 255
    1132:	e9 f4       	brne	.+58     	; 0x116e <add_inc+0x42>
    1134:	80 91 b2 02 	lds	r24, 0x02B2
    1138:	8f 3f       	cpi	r24, 0xFF	; 255
    113a:	49 f4       	brne	.+18     	; 0x114e <add_inc+0x22>
    113c:	80 91 a5 02 	lds	r24, 0x02A5
    1140:	81 30       	cpi	r24, 0x01	; 1
    1142:	29 f4       	brne	.+10     	; 0x114e <add_inc+0x22>
    1144:	86 e6       	ldi	r24, 0x66	; 102
    1146:	92 e0       	ldi	r25, 0x02	; 2
    1148:	0e 94 2f 09 	call	0x125e	; 0x125e <uart_puts>
    114c:	ff cf       	rjmp	.-2      	; 0x114c <add_inc+0x20>
	
	if(add_l==255)
	{
		add_l=0;
    114e:	10 92 a4 02 	sts	0x02A4, r1
		if(add_m==255)
    1152:	80 91 b2 02 	lds	r24, 0x02B2
    1156:	8f 3f       	cpi	r24, 0xFF	; 255
    1158:	31 f4       	brne	.+12     	; 0x1166 <add_inc+0x3a>
		{
			add_m=0;
    115a:	10 92 b2 02 	sts	0x02B2, r1
			add_h=1;
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	80 93 a5 02 	sts	0x02A5, r24
    1164:	08 95       	ret
		}
		else{add_m++;}
    1166:	8f 5f       	subi	r24, 0xFF	; 255
    1168:	80 93 b2 02 	sts	0x02B2, r24
    116c:	08 95       	ret
	}
	else{add_l++;}
    116e:	8f 5f       	subi	r24, 0xFF	; 255
    1170:	80 93 a4 02 	sts	0x02A4, r24
    1174:	08 95       	ret

00001176 <sram_read>:

}//end add_inc


uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high)
{
    1176:	1f 93       	push	r17
    1178:	cf 93       	push	r28
    117a:	df 93       	push	r29
    117c:	c8 2f       	mov	r28, r24
    117e:	d6 2f       	mov	r29, r22
    1180:	14 2f       	mov	r17, r20
	select(sram_cs);
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <select>
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1188:	83 e0       	ldi	r24, 0x03	; 3
    118a:	8e bd       	out	0x2e, r24	; 46
	
	asm volatile("nop");
    118c:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    118e:	0d b4       	in	r0, 0x2d	; 45
    1190:	07 fe       	sbrs	r0, 7
    1192:	fd cf       	rjmp	.-6      	; 0x118e <sram_read+0x18>
	return SPDR;
    1194:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1196:	1e bd       	out	0x2e, r17	; 46
	
	asm volatile("nop");
    1198:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    119a:	0d b4       	in	r0, 0x2d	; 45
    119c:	07 fe       	sbrs	r0, 7
    119e:	fd cf       	rjmp	.-6      	; 0x119a <sram_read+0x24>
	return SPDR;
    11a0:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    11a2:	de bd       	out	0x2e, r29	; 46
	
	asm volatile("nop");
    11a4:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    11a6:	0d b4       	in	r0, 0x2d	; 45
    11a8:	07 fe       	sbrs	r0, 7
    11aa:	fd cf       	rjmp	.-6      	; 0x11a6 <sram_read+0x30>
	return SPDR;
    11ac:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    11ae:	ce bd       	out	0x2e, r28	; 46
	
	asm volatile("nop");
    11b0:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    11b2:	0d b4       	in	r0, 0x2d	; 45
    11b4:	07 fe       	sbrs	r0, 7
    11b6:	fd cf       	rjmp	.-6      	; 0x11b2 <sram_read+0x3c>
	return SPDR;
    11b8:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    11ba:	8f ef       	ldi	r24, 0xFF	; 255
    11bc:	8e bd       	out	0x2e, r24	; 46
	
	asm volatile("nop");
    11be:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    11c0:	0d b4       	in	r0, 0x2d	; 45
    11c2:	07 fe       	sbrs	r0, 7
    11c4:	fd cf       	rjmp	.-6      	; 0x11c0 <sram_read+0x4a>
	return SPDR;
    11c6:	ce b5       	in	r28, 0x2e	; 46
	transfer(sram_READ);
	transfer(high);
	transfer(mid);
	transfer(low);
	uint8_t temp=transfer(0xFF);
	deselect(sram_cs);
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
	add_inc();
    11ce:	0e 94 96 08 	call	0x112c	; 0x112c <add_inc>
	return temp;
}
    11d2:	8c 2f       	mov	r24, r28
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	1f 91       	pop	r17
    11da:	08 95       	ret

000011dc <sram_write>:

void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data)
{
    11dc:	0f 93       	push	r16
    11de:	1f 93       	push	r17
    11e0:	cf 93       	push	r28
    11e2:	df 93       	push	r29
    11e4:	d8 2f       	mov	r29, r24
    11e6:	16 2f       	mov	r17, r22
    11e8:	04 2f       	mov	r16, r20
    11ea:	c2 2f       	mov	r28, r18
	select(sram_cs);
    11ec:	80 e0       	ldi	r24, 0x00	; 0
    11ee:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <select>
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    11f2:	82 e0       	ldi	r24, 0x02	; 2
    11f4:	8e bd       	out	0x2e, r24	; 46
	
	asm volatile("nop");
    11f6:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    11f8:	0d b4       	in	r0, 0x2d	; 45
    11fa:	07 fe       	sbrs	r0, 7
    11fc:	fd cf       	rjmp	.-6      	; 0x11f8 <sram_write+0x1c>
	return SPDR;
    11fe:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1200:	0e bd       	out	0x2e, r16	; 46
	
	asm volatile("nop");
    1202:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1204:	0d b4       	in	r0, 0x2d	; 45
    1206:	07 fe       	sbrs	r0, 7
    1208:	fd cf       	rjmp	.-6      	; 0x1204 <sram_write+0x28>
	return SPDR;
    120a:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    120c:	1e bd       	out	0x2e, r17	; 46
	
	asm volatile("nop");
    120e:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1210:	0d b4       	in	r0, 0x2d	; 45
    1212:	07 fe       	sbrs	r0, 7
    1214:	fd cf       	rjmp	.-6      	; 0x1210 <sram_write+0x34>
	return SPDR;
    1216:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1218:	de bd       	out	0x2e, r29	; 46
	
	asm volatile("nop");
    121a:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    121c:	0d b4       	in	r0, 0x2d	; 45
    121e:	07 fe       	sbrs	r0, 7
    1220:	fd cf       	rjmp	.-6      	; 0x121c <sram_write+0x40>
	return SPDR;
    1222:	8e b5       	in	r24, 0x2e	; 46
uint8_t sram_init(void);
void add_inc(void);
uint8_t sram_read(uint8_t low,uint8_t mid, uint8_t high);
void sram_write(uint8_t low,uint8_t mid, uint8_t high, uint8_t data);
inline static uint8_t transfer(uint8_t data){
	SPDR=data;
    1224:	ce bd       	out	0x2e, r28	; 46
	
	asm volatile("nop");
    1226:	00 00       	nop
	while(!(SPSR & _BV(SPIF)));
    1228:	0d b4       	in	r0, 0x2d	; 45
    122a:	07 fe       	sbrs	r0, 7
    122c:	fd cf       	rjmp	.-6      	; 0x1228 <sram_write+0x4c>
	return SPDR;
    122e:	8e b5       	in	r24, 0x2e	; 46
	transfer(sram_WRITE);
	transfer(high);
	transfer(mid);
	transfer(low);
	transfer(data);
	deselect(sram_cs);
    1230:	80 e0       	ldi	r24, 0x00	; 0
    1232:	0e 94 f7 07 	call	0xfee	; 0xfee <deselect>
	add_inc();
    1236:	0e 94 96 08 	call	0x112c	; 0x112c <add_inc>
}
    123a:	df 91       	pop	r29
    123c:	cf 91       	pop	r28
    123e:	1f 91       	pop	r17
    1240:	0f 91       	pop	r16
    1242:	08 95       	ret

00001244 <uart_putc>:
//void uart_puts(unsigned char *str) {
void uart_puts_p(const char *str) {
    while(pgm_read_byte(str) != 0x00) { // Loop through string, sending each character
        uart_putc(pgm_read_byte(str++));
    }
}
    1244:	e0 ec       	ldi	r30, 0xC0	; 192
    1246:	f0 e0       	ldi	r31, 0x00	; 0
    1248:	90 81       	ld	r25, Z
    124a:	95 ff       	sbrs	r25, 5
    124c:	fd cf       	rjmp	.-6      	; 0x1248 <uart_putc+0x4>
    124e:	80 93 c6 00 	sts	0x00C6, r24
    1252:	e0 ec       	ldi	r30, 0xC0	; 192
    1254:	f0 e0       	ldi	r31, 0x00	; 0
    1256:	80 81       	ld	r24, Z
    1258:	85 ff       	sbrs	r24, 5
    125a:	fd cf       	rjmp	.-6      	; 0x1256 <uart_putc+0x12>
    125c:	08 95       	ret

0000125e <uart_puts>:
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	ec 01       	movw	r28, r24
    1264:	88 81       	ld	r24, Y
    1266:	88 23       	and	r24, r24
    1268:	31 f0       	breq	.+12     	; 0x1276 <uart_puts+0x18>
    126a:	21 96       	adiw	r28, 0x01	; 1
    126c:	0e 94 22 09 	call	0x1244	; 0x1244 <uart_putc>
    1270:	89 91       	ld	r24, Y+
    1272:	81 11       	cpse	r24, r1
    1274:	fb cf       	rjmp	.-10     	; 0x126c <uart_puts+0xe>
    1276:	df 91       	pop	r29
    1278:	cf 91       	pop	r28
    127a:	08 95       	ret

0000127c <uart_init>:
//must be in place for the MAX232 chip to get data.

void uart_init(){
//rx and tx enable, receive interrupt enabled, 8 bit characters
//  UCSR0B |= (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
  UCSR0B |= (1<<RXEN0) | (1<<TXEN0);  //INTERRUPS DISABLED!!!
    127c:	e1 ec       	ldi	r30, 0xC1	; 193
    127e:	f0 e0       	ldi	r31, 0x00	; 0
    1280:	80 81       	ld	r24, Z
    1282:	88 61       	ori	r24, 0x18	; 24
    1284:	80 83       	st	Z, r24

//  UCSR0B |= (1<<RXEN0) | (1<<TXEN0) ;
//async operation, no parity,  one stop bit, 8-bit characters
UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
    1286:	e2 ec       	ldi	r30, 0xC2	; 194
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	80 81       	ld	r24, Z
    128c:	86 60       	ori	r24, 0x06	; 6
    128e:	80 83       	st	Z, r24
UCSR0A |=(1<<U2X0);
    1290:	e0 ec       	ldi	r30, 0xC0	; 192
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	82 60       	ori	r24, 0x02	; 2
    1298:	80 83       	st	Z, r24
//***UBRR0H = (BAUDVALUE >>8 ); //load upper byte of the baud rate into UBRR 
//***UBRR0L =  BAUDVALUE;       //load lower byte of the baud rate into UBRR 
UBRR0H = 0; //load upper byte of the baud rate into UBRR
    129a:	10 92 c5 00 	sts	0x00C5, r1
UBRR0L =8;
    129e:	88 e0       	ldi	r24, 0x08	; 8
    12a0:	80 93 c4 00 	sts	0x00C4, r24
    12a4:	08 95       	ret

000012a6 <uart_getc>:
//Modified to not block indefinately in the case of a lost byte
//
char uart_getc(void) {
  uint16_t timer = 0;

  while (!(UCSR0A & (1<<RXC0))) {
    12a6:	8a e0       	ldi	r24, 0x0A	; 10
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	e0 ec       	ldi	r30, 0xC0	; 192
    12ac:	f0 e0       	ldi	r31, 0x00	; 0
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <uart_getc+0xe>
    12b0:	01 97       	sbiw	r24, 0x01	; 1
  timer++;
  if(timer >= 10){ return(0);}
    12b2:	31 f0       	breq	.+12     	; 0x12c0 <uart_getc+0x1a>
//Modified to not block indefinately in the case of a lost byte
//
char uart_getc(void) {
  uint16_t timer = 0;

  while (!(UCSR0A & (1<<RXC0))) {
    12b4:	20 81       	ld	r18, Z
    12b6:	22 23       	and	r18, r18
    12b8:	dc f7       	brge	.-10     	; 0x12b0 <uart_getc+0xa>
  //what should we return if nothing comes in?
  //return the data into a global variable
  //give uart_getc the address of the variable
  //return a -1 if no data comes back.
  } // Wait for byte to arrive
  return(UDR0); //return the received data
    12ba:	80 91 c6 00 	lds	r24, 0x00C6
    12be:	08 95       	ret
char uart_getc(void) {
  uint16_t timer = 0;

  while (!(UCSR0A & (1<<RXC0))) {
  timer++;
  if(timer >= 10){ return(0);}
    12c0:	80 e0       	ldi	r24, 0x00	; 0
  //return the data into a global variable
  //give uart_getc the address of the variable
  //return a -1 if no data comes back.
  } // Wait for byte to arrive
  return(UDR0); //return the received data
}
    12c2:	08 95       	ret

000012c4 <__subsf3>:
    12c4:	50 58       	subi	r21, 0x80	; 128

000012c6 <__addsf3>:
    12c6:	bb 27       	eor	r27, r27
    12c8:	aa 27       	eor	r26, r26
    12ca:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__addsf3x>
    12ce:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__fp_round>
    12d2:	0e 94 87 0a 	call	0x150e	; 0x150e <__fp_pscA>
    12d6:	38 f0       	brcs	.+14     	; 0x12e6 <__addsf3+0x20>
    12d8:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fp_pscB>
    12dc:	20 f0       	brcs	.+8      	; 0x12e6 <__addsf3+0x20>
    12de:	39 f4       	brne	.+14     	; 0x12ee <__addsf3+0x28>
    12e0:	9f 3f       	cpi	r25, 0xFF	; 255
    12e2:	19 f4       	brne	.+6      	; 0x12ea <__addsf3+0x24>
    12e4:	26 f4       	brtc	.+8      	; 0x12ee <__addsf3+0x28>
    12e6:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_nan>
    12ea:	0e f4       	brtc	.+2      	; 0x12ee <__addsf3+0x28>
    12ec:	e0 95       	com	r30
    12ee:	e7 fb       	bst	r30, 7
    12f0:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__fp_inf>

000012f4 <__addsf3x>:
    12f4:	e9 2f       	mov	r30, r25
    12f6:	0e 94 a6 0a 	call	0x154c	; 0x154c <__fp_split3>
    12fa:	58 f3       	brcs	.-42     	; 0x12d2 <__addsf3+0xc>
    12fc:	ba 17       	cp	r27, r26
    12fe:	62 07       	cpc	r22, r18
    1300:	73 07       	cpc	r23, r19
    1302:	84 07       	cpc	r24, r20
    1304:	95 07       	cpc	r25, r21
    1306:	20 f0       	brcs	.+8      	; 0x1310 <__addsf3x+0x1c>
    1308:	79 f4       	brne	.+30     	; 0x1328 <__addsf3x+0x34>
    130a:	a6 f5       	brtc	.+104    	; 0x1374 <__addsf3x+0x80>
    130c:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <__fp_zero>
    1310:	0e f4       	brtc	.+2      	; 0x1314 <__addsf3x+0x20>
    1312:	e0 95       	com	r30
    1314:	0b 2e       	mov	r0, r27
    1316:	ba 2f       	mov	r27, r26
    1318:	a0 2d       	mov	r26, r0
    131a:	0b 01       	movw	r0, r22
    131c:	b9 01       	movw	r22, r18
    131e:	90 01       	movw	r18, r0
    1320:	0c 01       	movw	r0, r24
    1322:	ca 01       	movw	r24, r20
    1324:	a0 01       	movw	r20, r0
    1326:	11 24       	eor	r1, r1
    1328:	ff 27       	eor	r31, r31
    132a:	59 1b       	sub	r21, r25
    132c:	99 f0       	breq	.+38     	; 0x1354 <__addsf3x+0x60>
    132e:	59 3f       	cpi	r21, 0xF9	; 249
    1330:	50 f4       	brcc	.+20     	; 0x1346 <__addsf3x+0x52>
    1332:	50 3e       	cpi	r21, 0xE0	; 224
    1334:	68 f1       	brcs	.+90     	; 0x1390 <__addsf3x+0x9c>
    1336:	1a 16       	cp	r1, r26
    1338:	f0 40       	sbci	r31, 0x00	; 0
    133a:	a2 2f       	mov	r26, r18
    133c:	23 2f       	mov	r18, r19
    133e:	34 2f       	mov	r19, r20
    1340:	44 27       	eor	r20, r20
    1342:	58 5f       	subi	r21, 0xF8	; 248
    1344:	f3 cf       	rjmp	.-26     	; 0x132c <__addsf3x+0x38>
    1346:	46 95       	lsr	r20
    1348:	37 95       	ror	r19
    134a:	27 95       	ror	r18
    134c:	a7 95       	ror	r26
    134e:	f0 40       	sbci	r31, 0x00	; 0
    1350:	53 95       	inc	r21
    1352:	c9 f7       	brne	.-14     	; 0x1346 <__addsf3x+0x52>
    1354:	7e f4       	brtc	.+30     	; 0x1374 <__addsf3x+0x80>
    1356:	1f 16       	cp	r1, r31
    1358:	ba 0b       	sbc	r27, r26
    135a:	62 0b       	sbc	r22, r18
    135c:	73 0b       	sbc	r23, r19
    135e:	84 0b       	sbc	r24, r20
    1360:	ba f0       	brmi	.+46     	; 0x1390 <__addsf3x+0x9c>
    1362:	91 50       	subi	r25, 0x01	; 1
    1364:	a1 f0       	breq	.+40     	; 0x138e <__addsf3x+0x9a>
    1366:	ff 0f       	add	r31, r31
    1368:	bb 1f       	adc	r27, r27
    136a:	66 1f       	adc	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	c2 f7       	brpl	.-16     	; 0x1362 <__addsf3x+0x6e>
    1372:	0e c0       	rjmp	.+28     	; 0x1390 <__addsf3x+0x9c>
    1374:	ba 0f       	add	r27, r26
    1376:	62 1f       	adc	r22, r18
    1378:	73 1f       	adc	r23, r19
    137a:	84 1f       	adc	r24, r20
    137c:	48 f4       	brcc	.+18     	; 0x1390 <__addsf3x+0x9c>
    137e:	87 95       	ror	r24
    1380:	77 95       	ror	r23
    1382:	67 95       	ror	r22
    1384:	b7 95       	ror	r27
    1386:	f7 95       	ror	r31
    1388:	9e 3f       	cpi	r25, 0xFE	; 254
    138a:	08 f0       	brcs	.+2      	; 0x138e <__addsf3x+0x9a>
    138c:	b0 cf       	rjmp	.-160    	; 0x12ee <__addsf3+0x28>
    138e:	93 95       	inc	r25
    1390:	88 0f       	add	r24, r24
    1392:	08 f0       	brcs	.+2      	; 0x1396 <__addsf3x+0xa2>
    1394:	99 27       	eor	r25, r25
    1396:	ee 0f       	add	r30, r30
    1398:	97 95       	ror	r25
    139a:	87 95       	ror	r24
    139c:	08 95       	ret

0000139e <__divsf3>:
    139e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__divsf3x>
    13a2:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__fp_round>
    13a6:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fp_pscB>
    13aa:	58 f0       	brcs	.+22     	; 0x13c2 <__divsf3+0x24>
    13ac:	0e 94 87 0a 	call	0x150e	; 0x150e <__fp_pscA>
    13b0:	40 f0       	brcs	.+16     	; 0x13c2 <__divsf3+0x24>
    13b2:	29 f4       	brne	.+10     	; 0x13be <__divsf3+0x20>
    13b4:	5f 3f       	cpi	r21, 0xFF	; 255
    13b6:	29 f0       	breq	.+10     	; 0x13c2 <__divsf3+0x24>
    13b8:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__fp_inf>
    13bc:	51 11       	cpse	r21, r1
    13be:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__fp_szero>
    13c2:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_nan>

000013c6 <__divsf3x>:
    13c6:	0e 94 a6 0a 	call	0x154c	; 0x154c <__fp_split3>
    13ca:	68 f3       	brcs	.-38     	; 0x13a6 <__divsf3+0x8>

000013cc <__divsf3_pse>:
    13cc:	99 23       	and	r25, r25
    13ce:	b1 f3       	breq	.-20     	; 0x13bc <__divsf3+0x1e>
    13d0:	55 23       	and	r21, r21
    13d2:	91 f3       	breq	.-28     	; 0x13b8 <__divsf3+0x1a>
    13d4:	95 1b       	sub	r25, r21
    13d6:	55 0b       	sbc	r21, r21
    13d8:	bb 27       	eor	r27, r27
    13da:	aa 27       	eor	r26, r26
    13dc:	62 17       	cp	r22, r18
    13de:	73 07       	cpc	r23, r19
    13e0:	84 07       	cpc	r24, r20
    13e2:	38 f0       	brcs	.+14     	; 0x13f2 <__divsf3_pse+0x26>
    13e4:	9f 5f       	subi	r25, 0xFF	; 255
    13e6:	5f 4f       	sbci	r21, 0xFF	; 255
    13e8:	22 0f       	add	r18, r18
    13ea:	33 1f       	adc	r19, r19
    13ec:	44 1f       	adc	r20, r20
    13ee:	aa 1f       	adc	r26, r26
    13f0:	a9 f3       	breq	.-22     	; 0x13dc <__divsf3_pse+0x10>
    13f2:	35 d0       	rcall	.+106    	; 0x145e <__divsf3_pse+0x92>
    13f4:	0e 2e       	mov	r0, r30
    13f6:	3a f0       	brmi	.+14     	; 0x1406 <__divsf3_pse+0x3a>
    13f8:	e0 e8       	ldi	r30, 0x80	; 128
    13fa:	32 d0       	rcall	.+100    	; 0x1460 <__divsf3_pse+0x94>
    13fc:	91 50       	subi	r25, 0x01	; 1
    13fe:	50 40       	sbci	r21, 0x00	; 0
    1400:	e6 95       	lsr	r30
    1402:	00 1c       	adc	r0, r0
    1404:	ca f7       	brpl	.-14     	; 0x13f8 <__divsf3_pse+0x2c>
    1406:	2b d0       	rcall	.+86     	; 0x145e <__divsf3_pse+0x92>
    1408:	fe 2f       	mov	r31, r30
    140a:	29 d0       	rcall	.+82     	; 0x145e <__divsf3_pse+0x92>
    140c:	66 0f       	add	r22, r22
    140e:	77 1f       	adc	r23, r23
    1410:	88 1f       	adc	r24, r24
    1412:	bb 1f       	adc	r27, r27
    1414:	26 17       	cp	r18, r22
    1416:	37 07       	cpc	r19, r23
    1418:	48 07       	cpc	r20, r24
    141a:	ab 07       	cpc	r26, r27
    141c:	b0 e8       	ldi	r27, 0x80	; 128
    141e:	09 f0       	breq	.+2      	; 0x1422 <__divsf3_pse+0x56>
    1420:	bb 0b       	sbc	r27, r27
    1422:	80 2d       	mov	r24, r0
    1424:	bf 01       	movw	r22, r30
    1426:	ff 27       	eor	r31, r31
    1428:	93 58       	subi	r25, 0x83	; 131
    142a:	5f 4f       	sbci	r21, 0xFF	; 255
    142c:	3a f0       	brmi	.+14     	; 0x143c <__divsf3_pse+0x70>
    142e:	9e 3f       	cpi	r25, 0xFE	; 254
    1430:	51 05       	cpc	r21, r1
    1432:	78 f0       	brcs	.+30     	; 0x1452 <__divsf3_pse+0x86>
    1434:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__fp_inf>
    1438:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__fp_szero>
    143c:	5f 3f       	cpi	r21, 0xFF	; 255
    143e:	e4 f3       	brlt	.-8      	; 0x1438 <__divsf3_pse+0x6c>
    1440:	98 3e       	cpi	r25, 0xE8	; 232
    1442:	d4 f3       	brlt	.-12     	; 0x1438 <__divsf3_pse+0x6c>
    1444:	86 95       	lsr	r24
    1446:	77 95       	ror	r23
    1448:	67 95       	ror	r22
    144a:	b7 95       	ror	r27
    144c:	f7 95       	ror	r31
    144e:	9f 5f       	subi	r25, 0xFF	; 255
    1450:	c9 f7       	brne	.-14     	; 0x1444 <__divsf3_pse+0x78>
    1452:	88 0f       	add	r24, r24
    1454:	91 1d       	adc	r25, r1
    1456:	96 95       	lsr	r25
    1458:	87 95       	ror	r24
    145a:	97 f9       	bld	r25, 7
    145c:	08 95       	ret
    145e:	e1 e0       	ldi	r30, 0x01	; 1
    1460:	66 0f       	add	r22, r22
    1462:	77 1f       	adc	r23, r23
    1464:	88 1f       	adc	r24, r24
    1466:	bb 1f       	adc	r27, r27
    1468:	62 17       	cp	r22, r18
    146a:	73 07       	cpc	r23, r19
    146c:	84 07       	cpc	r24, r20
    146e:	ba 07       	cpc	r27, r26
    1470:	20 f0       	brcs	.+8      	; 0x147a <__divsf3_pse+0xae>
    1472:	62 1b       	sub	r22, r18
    1474:	73 0b       	sbc	r23, r19
    1476:	84 0b       	sbc	r24, r20
    1478:	ba 0b       	sbc	r27, r26
    147a:	ee 1f       	adc	r30, r30
    147c:	88 f7       	brcc	.-30     	; 0x1460 <__divsf3_pse+0x94>
    147e:	e0 95       	com	r30
    1480:	08 95       	ret

00001482 <__floatunsisf>:
    1482:	e8 94       	clt
    1484:	09 c0       	rjmp	.+18     	; 0x1498 <__floatsisf+0x12>

00001486 <__floatsisf>:
    1486:	97 fb       	bst	r25, 7
    1488:	3e f4       	brtc	.+14     	; 0x1498 <__floatsisf+0x12>
    148a:	90 95       	com	r25
    148c:	80 95       	com	r24
    148e:	70 95       	com	r23
    1490:	61 95       	neg	r22
    1492:	7f 4f       	sbci	r23, 0xFF	; 255
    1494:	8f 4f       	sbci	r24, 0xFF	; 255
    1496:	9f 4f       	sbci	r25, 0xFF	; 255
    1498:	99 23       	and	r25, r25
    149a:	a9 f0       	breq	.+42     	; 0x14c6 <__floatsisf+0x40>
    149c:	f9 2f       	mov	r31, r25
    149e:	96 e9       	ldi	r25, 0x96	; 150
    14a0:	bb 27       	eor	r27, r27
    14a2:	93 95       	inc	r25
    14a4:	f6 95       	lsr	r31
    14a6:	87 95       	ror	r24
    14a8:	77 95       	ror	r23
    14aa:	67 95       	ror	r22
    14ac:	b7 95       	ror	r27
    14ae:	f1 11       	cpse	r31, r1
    14b0:	f8 cf       	rjmp	.-16     	; 0x14a2 <__floatsisf+0x1c>
    14b2:	fa f4       	brpl	.+62     	; 0x14f2 <__floatsisf+0x6c>
    14b4:	bb 0f       	add	r27, r27
    14b6:	11 f4       	brne	.+4      	; 0x14bc <__floatsisf+0x36>
    14b8:	60 ff       	sbrs	r22, 0
    14ba:	1b c0       	rjmp	.+54     	; 0x14f2 <__floatsisf+0x6c>
    14bc:	6f 5f       	subi	r22, 0xFF	; 255
    14be:	7f 4f       	sbci	r23, 0xFF	; 255
    14c0:	8f 4f       	sbci	r24, 0xFF	; 255
    14c2:	9f 4f       	sbci	r25, 0xFF	; 255
    14c4:	16 c0       	rjmp	.+44     	; 0x14f2 <__floatsisf+0x6c>
    14c6:	88 23       	and	r24, r24
    14c8:	11 f0       	breq	.+4      	; 0x14ce <__floatsisf+0x48>
    14ca:	96 e9       	ldi	r25, 0x96	; 150
    14cc:	11 c0       	rjmp	.+34     	; 0x14f0 <__floatsisf+0x6a>
    14ce:	77 23       	and	r23, r23
    14d0:	21 f0       	breq	.+8      	; 0x14da <__floatsisf+0x54>
    14d2:	9e e8       	ldi	r25, 0x8E	; 142
    14d4:	87 2f       	mov	r24, r23
    14d6:	76 2f       	mov	r23, r22
    14d8:	05 c0       	rjmp	.+10     	; 0x14e4 <__floatsisf+0x5e>
    14da:	66 23       	and	r22, r22
    14dc:	71 f0       	breq	.+28     	; 0x14fa <__floatsisf+0x74>
    14de:	96 e8       	ldi	r25, 0x86	; 134
    14e0:	86 2f       	mov	r24, r22
    14e2:	70 e0       	ldi	r23, 0x00	; 0
    14e4:	60 e0       	ldi	r22, 0x00	; 0
    14e6:	2a f0       	brmi	.+10     	; 0x14f2 <__floatsisf+0x6c>
    14e8:	9a 95       	dec	r25
    14ea:	66 0f       	add	r22, r22
    14ec:	77 1f       	adc	r23, r23
    14ee:	88 1f       	adc	r24, r24
    14f0:	da f7       	brpl	.-10     	; 0x14e8 <__floatsisf+0x62>
    14f2:	88 0f       	add	r24, r24
    14f4:	96 95       	lsr	r25
    14f6:	87 95       	ror	r24
    14f8:	97 f9       	bld	r25, 7
    14fa:	08 95       	ret

000014fc <__fp_inf>:
    14fc:	97 f9       	bld	r25, 7
    14fe:	9f 67       	ori	r25, 0x7F	; 127
    1500:	80 e8       	ldi	r24, 0x80	; 128
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	60 e0       	ldi	r22, 0x00	; 0
    1506:	08 95       	ret

00001508 <__fp_nan>:
    1508:	9f ef       	ldi	r25, 0xFF	; 255
    150a:	80 ec       	ldi	r24, 0xC0	; 192
    150c:	08 95       	ret

0000150e <__fp_pscA>:
    150e:	00 24       	eor	r0, r0
    1510:	0a 94       	dec	r0
    1512:	16 16       	cp	r1, r22
    1514:	17 06       	cpc	r1, r23
    1516:	18 06       	cpc	r1, r24
    1518:	09 06       	cpc	r0, r25
    151a:	08 95       	ret

0000151c <__fp_pscB>:
    151c:	00 24       	eor	r0, r0
    151e:	0a 94       	dec	r0
    1520:	12 16       	cp	r1, r18
    1522:	13 06       	cpc	r1, r19
    1524:	14 06       	cpc	r1, r20
    1526:	05 06       	cpc	r0, r21
    1528:	08 95       	ret

0000152a <__fp_round>:
    152a:	09 2e       	mov	r0, r25
    152c:	03 94       	inc	r0
    152e:	00 0c       	add	r0, r0
    1530:	11 f4       	brne	.+4      	; 0x1536 <__fp_round+0xc>
    1532:	88 23       	and	r24, r24
    1534:	52 f0       	brmi	.+20     	; 0x154a <__fp_round+0x20>
    1536:	bb 0f       	add	r27, r27
    1538:	40 f4       	brcc	.+16     	; 0x154a <__fp_round+0x20>
    153a:	bf 2b       	or	r27, r31
    153c:	11 f4       	brne	.+4      	; 0x1542 <__fp_round+0x18>
    153e:	60 ff       	sbrs	r22, 0
    1540:	04 c0       	rjmp	.+8      	; 0x154a <__fp_round+0x20>
    1542:	6f 5f       	subi	r22, 0xFF	; 255
    1544:	7f 4f       	sbci	r23, 0xFF	; 255
    1546:	8f 4f       	sbci	r24, 0xFF	; 255
    1548:	9f 4f       	sbci	r25, 0xFF	; 255
    154a:	08 95       	ret

0000154c <__fp_split3>:
    154c:	57 fd       	sbrc	r21, 7
    154e:	90 58       	subi	r25, 0x80	; 128
    1550:	44 0f       	add	r20, r20
    1552:	55 1f       	adc	r21, r21
    1554:	59 f0       	breq	.+22     	; 0x156c <__fp_splitA+0x10>
    1556:	5f 3f       	cpi	r21, 0xFF	; 255
    1558:	71 f0       	breq	.+28     	; 0x1576 <__fp_splitA+0x1a>
    155a:	47 95       	ror	r20

0000155c <__fp_splitA>:
    155c:	88 0f       	add	r24, r24
    155e:	97 fb       	bst	r25, 7
    1560:	99 1f       	adc	r25, r25
    1562:	61 f0       	breq	.+24     	; 0x157c <__fp_splitA+0x20>
    1564:	9f 3f       	cpi	r25, 0xFF	; 255
    1566:	79 f0       	breq	.+30     	; 0x1586 <__fp_splitA+0x2a>
    1568:	87 95       	ror	r24
    156a:	08 95       	ret
    156c:	12 16       	cp	r1, r18
    156e:	13 06       	cpc	r1, r19
    1570:	14 06       	cpc	r1, r20
    1572:	55 1f       	adc	r21, r21
    1574:	f2 cf       	rjmp	.-28     	; 0x155a <__fp_split3+0xe>
    1576:	46 95       	lsr	r20
    1578:	f1 df       	rcall	.-30     	; 0x155c <__fp_splitA>
    157a:	08 c0       	rjmp	.+16     	; 0x158c <__fp_splitA+0x30>
    157c:	16 16       	cp	r1, r22
    157e:	17 06       	cpc	r1, r23
    1580:	18 06       	cpc	r1, r24
    1582:	99 1f       	adc	r25, r25
    1584:	f1 cf       	rjmp	.-30     	; 0x1568 <__fp_splitA+0xc>
    1586:	86 95       	lsr	r24
    1588:	71 05       	cpc	r23, r1
    158a:	61 05       	cpc	r22, r1
    158c:	08 94       	sec
    158e:	08 95       	ret

00001590 <__fp_zero>:
    1590:	e8 94       	clt

00001592 <__fp_szero>:
    1592:	bb 27       	eor	r27, r27
    1594:	66 27       	eor	r22, r22
    1596:	77 27       	eor	r23, r23
    1598:	cb 01       	movw	r24, r22
    159a:	97 f9       	bld	r25, 7
    159c:	08 95       	ret

0000159e <__mulsf3>:
    159e:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__mulsf3x>
    15a2:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__fp_round>
    15a6:	0e 94 87 0a 	call	0x150e	; 0x150e <__fp_pscA>
    15aa:	38 f0       	brcs	.+14     	; 0x15ba <__mulsf3+0x1c>
    15ac:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fp_pscB>
    15b0:	20 f0       	brcs	.+8      	; 0x15ba <__mulsf3+0x1c>
    15b2:	95 23       	and	r25, r21
    15b4:	11 f0       	breq	.+4      	; 0x15ba <__mulsf3+0x1c>
    15b6:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__fp_inf>
    15ba:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_nan>
    15be:	11 24       	eor	r1, r1
    15c0:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__fp_szero>

000015c4 <__mulsf3x>:
    15c4:	0e 94 a6 0a 	call	0x154c	; 0x154c <__fp_split3>
    15c8:	70 f3       	brcs	.-36     	; 0x15a6 <__mulsf3+0x8>

000015ca <__mulsf3_pse>:
    15ca:	95 9f       	mul	r25, r21
    15cc:	c1 f3       	breq	.-16     	; 0x15be <__mulsf3+0x20>
    15ce:	95 0f       	add	r25, r21
    15d0:	50 e0       	ldi	r21, 0x00	; 0
    15d2:	55 1f       	adc	r21, r21
    15d4:	62 9f       	mul	r22, r18
    15d6:	f0 01       	movw	r30, r0
    15d8:	72 9f       	mul	r23, r18
    15da:	bb 27       	eor	r27, r27
    15dc:	f0 0d       	add	r31, r0
    15de:	b1 1d       	adc	r27, r1
    15e0:	63 9f       	mul	r22, r19
    15e2:	aa 27       	eor	r26, r26
    15e4:	f0 0d       	add	r31, r0
    15e6:	b1 1d       	adc	r27, r1
    15e8:	aa 1f       	adc	r26, r26
    15ea:	64 9f       	mul	r22, r20
    15ec:	66 27       	eor	r22, r22
    15ee:	b0 0d       	add	r27, r0
    15f0:	a1 1d       	adc	r26, r1
    15f2:	66 1f       	adc	r22, r22
    15f4:	82 9f       	mul	r24, r18
    15f6:	22 27       	eor	r18, r18
    15f8:	b0 0d       	add	r27, r0
    15fa:	a1 1d       	adc	r26, r1
    15fc:	62 1f       	adc	r22, r18
    15fe:	73 9f       	mul	r23, r19
    1600:	b0 0d       	add	r27, r0
    1602:	a1 1d       	adc	r26, r1
    1604:	62 1f       	adc	r22, r18
    1606:	83 9f       	mul	r24, r19
    1608:	a0 0d       	add	r26, r0
    160a:	61 1d       	adc	r22, r1
    160c:	22 1f       	adc	r18, r18
    160e:	74 9f       	mul	r23, r20
    1610:	33 27       	eor	r19, r19
    1612:	a0 0d       	add	r26, r0
    1614:	61 1d       	adc	r22, r1
    1616:	23 1f       	adc	r18, r19
    1618:	84 9f       	mul	r24, r20
    161a:	60 0d       	add	r22, r0
    161c:	21 1d       	adc	r18, r1
    161e:	82 2f       	mov	r24, r18
    1620:	76 2f       	mov	r23, r22
    1622:	6a 2f       	mov	r22, r26
    1624:	11 24       	eor	r1, r1
    1626:	9f 57       	subi	r25, 0x7F	; 127
    1628:	50 40       	sbci	r21, 0x00	; 0
    162a:	9a f0       	brmi	.+38     	; 0x1652 <__mulsf3_pse+0x88>
    162c:	f1 f0       	breq	.+60     	; 0x166a <__mulsf3_pse+0xa0>
    162e:	88 23       	and	r24, r24
    1630:	4a f0       	brmi	.+18     	; 0x1644 <__mulsf3_pse+0x7a>
    1632:	ee 0f       	add	r30, r30
    1634:	ff 1f       	adc	r31, r31
    1636:	bb 1f       	adc	r27, r27
    1638:	66 1f       	adc	r22, r22
    163a:	77 1f       	adc	r23, r23
    163c:	88 1f       	adc	r24, r24
    163e:	91 50       	subi	r25, 0x01	; 1
    1640:	50 40       	sbci	r21, 0x00	; 0
    1642:	a9 f7       	brne	.-22     	; 0x162e <__mulsf3_pse+0x64>
    1644:	9e 3f       	cpi	r25, 0xFE	; 254
    1646:	51 05       	cpc	r21, r1
    1648:	80 f0       	brcs	.+32     	; 0x166a <__mulsf3_pse+0xa0>
    164a:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__fp_inf>
    164e:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__fp_szero>
    1652:	5f 3f       	cpi	r21, 0xFF	; 255
    1654:	e4 f3       	brlt	.-8      	; 0x164e <__mulsf3_pse+0x84>
    1656:	98 3e       	cpi	r25, 0xE8	; 232
    1658:	d4 f3       	brlt	.-12     	; 0x164e <__mulsf3_pse+0x84>
    165a:	86 95       	lsr	r24
    165c:	77 95       	ror	r23
    165e:	67 95       	ror	r22
    1660:	b7 95       	ror	r27
    1662:	f7 95       	ror	r31
    1664:	e7 95       	ror	r30
    1666:	9f 5f       	subi	r25, 0xFF	; 255
    1668:	c1 f7       	brne	.-16     	; 0x165a <__mulsf3_pse+0x90>
    166a:	fe 2b       	or	r31, r30
    166c:	88 0f       	add	r24, r24
    166e:	91 1d       	adc	r25, r1
    1670:	96 95       	lsr	r25
    1672:	87 95       	ror	r24
    1674:	97 f9       	bld	r25, 7
    1676:	08 95       	ret

00001678 <vfprintf>:
    1678:	a3 e1       	ldi	r26, 0x13	; 19
    167a:	b0 e0       	ldi	r27, 0x00	; 0
    167c:	e2 e4       	ldi	r30, 0x42	; 66
    167e:	fb e0       	ldi	r31, 0x0B	; 11
    1680:	0c 94 b8 0e 	jmp	0x1d70	; 0x1d70 <__prologue_saves__>
    1684:	6c 01       	movw	r12, r24
    1686:	4b 01       	movw	r8, r22
    1688:	2a 01       	movw	r4, r20
    168a:	fc 01       	movw	r30, r24
    168c:	17 82       	std	Z+7, r1	; 0x07
    168e:	16 82       	std	Z+6, r1	; 0x06
    1690:	83 81       	ldd	r24, Z+3	; 0x03
    1692:	81 ff       	sbrs	r24, 1
    1694:	43 c3       	rjmp	.+1670   	; 0x1d1c <vfprintf+0x6a4>
    1696:	ae 01       	movw	r20, r28
    1698:	4f 5f       	subi	r20, 0xFF	; 255
    169a:	5f 4f       	sbci	r21, 0xFF	; 255
    169c:	3a 01       	movw	r6, r20
    169e:	f6 01       	movw	r30, r12
    16a0:	93 81       	ldd	r25, Z+3	; 0x03
    16a2:	f4 01       	movw	r30, r8
    16a4:	93 fd       	sbrc	r25, 3
    16a6:	85 91       	lpm	r24, Z+
    16a8:	93 ff       	sbrs	r25, 3
    16aa:	81 91       	ld	r24, Z+
    16ac:	4f 01       	movw	r8, r30
    16ae:	88 23       	and	r24, r24
    16b0:	09 f4       	brne	.+2      	; 0x16b4 <vfprintf+0x3c>
    16b2:	30 c3       	rjmp	.+1632   	; 0x1d14 <vfprintf+0x69c>
    16b4:	85 32       	cpi	r24, 0x25	; 37
    16b6:	39 f4       	brne	.+14     	; 0x16c6 <vfprintf+0x4e>
    16b8:	93 fd       	sbrc	r25, 3
    16ba:	85 91       	lpm	r24, Z+
    16bc:	93 ff       	sbrs	r25, 3
    16be:	81 91       	ld	r24, Z+
    16c0:	4f 01       	movw	r8, r30
    16c2:	85 32       	cpi	r24, 0x25	; 37
    16c4:	39 f4       	brne	.+14     	; 0x16d4 <vfprintf+0x5c>
    16c6:	b6 01       	movw	r22, r12
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    16ce:	52 01       	movw	r10, r4
    16d0:	25 01       	movw	r4, r10
    16d2:	e5 cf       	rjmp	.-54     	; 0x169e <vfprintf+0x26>
    16d4:	10 e0       	ldi	r17, 0x00	; 0
    16d6:	f1 2c       	mov	r15, r1
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	20 32       	cpi	r18, 0x20	; 32
    16dc:	a0 f4       	brcc	.+40     	; 0x1706 <vfprintf+0x8e>
    16de:	8b 32       	cpi	r24, 0x2B	; 43
    16e0:	69 f0       	breq	.+26     	; 0x16fc <vfprintf+0x84>
    16e2:	30 f4       	brcc	.+12     	; 0x16f0 <vfprintf+0x78>
    16e4:	80 32       	cpi	r24, 0x20	; 32
    16e6:	59 f0       	breq	.+22     	; 0x16fe <vfprintf+0x86>
    16e8:	83 32       	cpi	r24, 0x23	; 35
    16ea:	69 f4       	brne	.+26     	; 0x1706 <vfprintf+0x8e>
    16ec:	20 61       	ori	r18, 0x10	; 16
    16ee:	2c c0       	rjmp	.+88     	; 0x1748 <vfprintf+0xd0>
    16f0:	8d 32       	cpi	r24, 0x2D	; 45
    16f2:	39 f0       	breq	.+14     	; 0x1702 <vfprintf+0x8a>
    16f4:	80 33       	cpi	r24, 0x30	; 48
    16f6:	39 f4       	brne	.+14     	; 0x1706 <vfprintf+0x8e>
    16f8:	21 60       	ori	r18, 0x01	; 1
    16fa:	26 c0       	rjmp	.+76     	; 0x1748 <vfprintf+0xd0>
    16fc:	22 60       	ori	r18, 0x02	; 2
    16fe:	24 60       	ori	r18, 0x04	; 4
    1700:	23 c0       	rjmp	.+70     	; 0x1748 <vfprintf+0xd0>
    1702:	28 60       	ori	r18, 0x08	; 8
    1704:	21 c0       	rjmp	.+66     	; 0x1748 <vfprintf+0xd0>
    1706:	27 fd       	sbrc	r18, 7
    1708:	27 c0       	rjmp	.+78     	; 0x1758 <vfprintf+0xe0>
    170a:	30 ed       	ldi	r19, 0xD0	; 208
    170c:	38 0f       	add	r19, r24
    170e:	3a 30       	cpi	r19, 0x0A	; 10
    1710:	78 f4       	brcc	.+30     	; 0x1730 <vfprintf+0xb8>
    1712:	26 ff       	sbrs	r18, 6
    1714:	06 c0       	rjmp	.+12     	; 0x1722 <vfprintf+0xaa>
    1716:	fa e0       	ldi	r31, 0x0A	; 10
    1718:	1f 9f       	mul	r17, r31
    171a:	30 0d       	add	r19, r0
    171c:	11 24       	eor	r1, r1
    171e:	13 2f       	mov	r17, r19
    1720:	13 c0       	rjmp	.+38     	; 0x1748 <vfprintf+0xd0>
    1722:	4a e0       	ldi	r20, 0x0A	; 10
    1724:	f4 9e       	mul	r15, r20
    1726:	30 0d       	add	r19, r0
    1728:	11 24       	eor	r1, r1
    172a:	f3 2e       	mov	r15, r19
    172c:	20 62       	ori	r18, 0x20	; 32
    172e:	0c c0       	rjmp	.+24     	; 0x1748 <vfprintf+0xd0>
    1730:	8e 32       	cpi	r24, 0x2E	; 46
    1732:	21 f4       	brne	.+8      	; 0x173c <vfprintf+0xc4>
    1734:	26 fd       	sbrc	r18, 6
    1736:	ee c2       	rjmp	.+1500   	; 0x1d14 <vfprintf+0x69c>
    1738:	20 64       	ori	r18, 0x40	; 64
    173a:	06 c0       	rjmp	.+12     	; 0x1748 <vfprintf+0xd0>
    173c:	8c 36       	cpi	r24, 0x6C	; 108
    173e:	11 f4       	brne	.+4      	; 0x1744 <vfprintf+0xcc>
    1740:	20 68       	ori	r18, 0x80	; 128
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <vfprintf+0xd0>
    1744:	88 36       	cpi	r24, 0x68	; 104
    1746:	41 f4       	brne	.+16     	; 0x1758 <vfprintf+0xe0>
    1748:	f4 01       	movw	r30, r8
    174a:	93 fd       	sbrc	r25, 3
    174c:	85 91       	lpm	r24, Z+
    174e:	93 ff       	sbrs	r25, 3
    1750:	81 91       	ld	r24, Z+
    1752:	4f 01       	movw	r8, r30
    1754:	81 11       	cpse	r24, r1
    1756:	c1 cf       	rjmp	.-126    	; 0x16da <vfprintf+0x62>
    1758:	9b eb       	ldi	r25, 0xBB	; 187
    175a:	98 0f       	add	r25, r24
    175c:	93 30       	cpi	r25, 0x03	; 3
    175e:	18 f4       	brcc	.+6      	; 0x1766 <vfprintf+0xee>
    1760:	20 61       	ori	r18, 0x10	; 16
    1762:	80 5e       	subi	r24, 0xE0	; 224
    1764:	06 c0       	rjmp	.+12     	; 0x1772 <vfprintf+0xfa>
    1766:	9b e9       	ldi	r25, 0x9B	; 155
    1768:	98 0f       	add	r25, r24
    176a:	93 30       	cpi	r25, 0x03	; 3
    176c:	08 f0       	brcs	.+2      	; 0x1770 <vfprintf+0xf8>
    176e:	71 c1       	rjmp	.+738    	; 0x1a52 <vfprintf+0x3da>
    1770:	2f 7e       	andi	r18, 0xEF	; 239
    1772:	26 ff       	sbrs	r18, 6
    1774:	16 e0       	ldi	r17, 0x06	; 6
    1776:	2f 73       	andi	r18, 0x3F	; 63
    1778:	32 2e       	mov	r3, r18
    177a:	85 36       	cpi	r24, 0x65	; 101
    177c:	19 f4       	brne	.+6      	; 0x1784 <vfprintf+0x10c>
    177e:	20 64       	ori	r18, 0x40	; 64
    1780:	32 2e       	mov	r3, r18
    1782:	08 c0       	rjmp	.+16     	; 0x1794 <vfprintf+0x11c>
    1784:	86 36       	cpi	r24, 0x66	; 102
    1786:	21 f4       	brne	.+8      	; 0x1790 <vfprintf+0x118>
    1788:	f2 2f       	mov	r31, r18
    178a:	f0 68       	ori	r31, 0x80	; 128
    178c:	3f 2e       	mov	r3, r31
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <vfprintf+0x11c>
    1790:	11 11       	cpse	r17, r1
    1792:	11 50       	subi	r17, 0x01	; 1
    1794:	37 fe       	sbrs	r3, 7
    1796:	07 c0       	rjmp	.+14     	; 0x17a6 <vfprintf+0x12e>
    1798:	1c 33       	cpi	r17, 0x3C	; 60
    179a:	50 f4       	brcc	.+20     	; 0x17b0 <vfprintf+0x138>
    179c:	ee 24       	eor	r14, r14
    179e:	e3 94       	inc	r14
    17a0:	e1 0e       	add	r14, r17
    17a2:	27 e0       	ldi	r18, 0x07	; 7
    17a4:	0b c0       	rjmp	.+22     	; 0x17bc <vfprintf+0x144>
    17a6:	18 30       	cpi	r17, 0x08	; 8
    17a8:	38 f0       	brcs	.+14     	; 0x17b8 <vfprintf+0x140>
    17aa:	27 e0       	ldi	r18, 0x07	; 7
    17ac:	17 e0       	ldi	r17, 0x07	; 7
    17ae:	05 c0       	rjmp	.+10     	; 0x17ba <vfprintf+0x142>
    17b0:	27 e0       	ldi	r18, 0x07	; 7
    17b2:	4c e3       	ldi	r20, 0x3C	; 60
    17b4:	e4 2e       	mov	r14, r20
    17b6:	02 c0       	rjmp	.+4      	; 0x17bc <vfprintf+0x144>
    17b8:	21 2f       	mov	r18, r17
    17ba:	e1 2c       	mov	r14, r1
    17bc:	52 01       	movw	r10, r4
    17be:	44 e0       	ldi	r20, 0x04	; 4
    17c0:	a4 0e       	add	r10, r20
    17c2:	b1 1c       	adc	r11, r1
    17c4:	f2 01       	movw	r30, r4
    17c6:	60 81       	ld	r22, Z
    17c8:	71 81       	ldd	r23, Z+1	; 0x01
    17ca:	82 81       	ldd	r24, Z+2	; 0x02
    17cc:	93 81       	ldd	r25, Z+3	; 0x03
    17ce:	0e 2d       	mov	r16, r14
    17d0:	a3 01       	movw	r20, r6
    17d2:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__ftoa_engine>
    17d6:	2c 01       	movw	r4, r24
    17d8:	09 81       	ldd	r16, Y+1	; 0x01
    17da:	00 ff       	sbrs	r16, 0
    17dc:	02 c0       	rjmp	.+4      	; 0x17e2 <vfprintf+0x16a>
    17de:	03 ff       	sbrs	r16, 3
    17e0:	07 c0       	rjmp	.+14     	; 0x17f0 <vfprintf+0x178>
    17e2:	31 fc       	sbrc	r3, 1
    17e4:	08 c0       	rjmp	.+16     	; 0x17f6 <vfprintf+0x17e>
    17e6:	32 fe       	sbrs	r3, 2
    17e8:	09 c0       	rjmp	.+18     	; 0x17fc <vfprintf+0x184>
    17ea:	30 e2       	ldi	r19, 0x20	; 32
    17ec:	23 2e       	mov	r2, r19
    17ee:	07 c0       	rjmp	.+14     	; 0x17fe <vfprintf+0x186>
    17f0:	2d e2       	ldi	r18, 0x2D	; 45
    17f2:	22 2e       	mov	r2, r18
    17f4:	04 c0       	rjmp	.+8      	; 0x17fe <vfprintf+0x186>
    17f6:	9b e2       	ldi	r25, 0x2B	; 43
    17f8:	29 2e       	mov	r2, r25
    17fa:	01 c0       	rjmp	.+2      	; 0x17fe <vfprintf+0x186>
    17fc:	21 2c       	mov	r2, r1
    17fe:	80 2f       	mov	r24, r16
    1800:	8c 70       	andi	r24, 0x0C	; 12
    1802:	19 f0       	breq	.+6      	; 0x180a <vfprintf+0x192>
    1804:	21 10       	cpse	r2, r1
    1806:	68 c2       	rjmp	.+1232   	; 0x1cd8 <vfprintf+0x660>
    1808:	a8 c2       	rjmp	.+1360   	; 0x1d5a <vfprintf+0x6e2>
    180a:	37 fe       	sbrs	r3, 7
    180c:	0f c0       	rjmp	.+30     	; 0x182c <vfprintf+0x1b4>
    180e:	e4 0c       	add	r14, r4
    1810:	04 ff       	sbrs	r16, 4
    1812:	04 c0       	rjmp	.+8      	; 0x181c <vfprintf+0x1a4>
    1814:	8a 81       	ldd	r24, Y+2	; 0x02
    1816:	81 33       	cpi	r24, 0x31	; 49
    1818:	09 f4       	brne	.+2      	; 0x181c <vfprintf+0x1a4>
    181a:	ea 94       	dec	r14
    181c:	1e 14       	cp	r1, r14
    181e:	74 f5       	brge	.+92     	; 0x187c <vfprintf+0x204>
    1820:	f8 e0       	ldi	r31, 0x08	; 8
    1822:	fe 15       	cp	r31, r14
    1824:	78 f5       	brcc	.+94     	; 0x1884 <vfprintf+0x20c>
    1826:	88 e0       	ldi	r24, 0x08	; 8
    1828:	e8 2e       	mov	r14, r24
    182a:	2c c0       	rjmp	.+88     	; 0x1884 <vfprintf+0x20c>
    182c:	36 fc       	sbrc	r3, 6
    182e:	2a c0       	rjmp	.+84     	; 0x1884 <vfprintf+0x20c>
    1830:	81 2f       	mov	r24, r17
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	84 15       	cp	r24, r4
    1836:	95 05       	cpc	r25, r5
    1838:	9c f0       	brlt	.+38     	; 0x1860 <vfprintf+0x1e8>
    183a:	2c ef       	ldi	r18, 0xFC	; 252
    183c:	42 16       	cp	r4, r18
    183e:	2f ef       	ldi	r18, 0xFF	; 255
    1840:	52 06       	cpc	r5, r18
    1842:	74 f0       	brlt	.+28     	; 0x1860 <vfprintf+0x1e8>
    1844:	43 2d       	mov	r20, r3
    1846:	40 68       	ori	r20, 0x80	; 128
    1848:	34 2e       	mov	r3, r20
    184a:	0a c0       	rjmp	.+20     	; 0x1860 <vfprintf+0x1e8>
    184c:	e2 e0       	ldi	r30, 0x02	; 2
    184e:	f0 e0       	ldi	r31, 0x00	; 0
    1850:	ec 0f       	add	r30, r28
    1852:	fd 1f       	adc	r31, r29
    1854:	e1 0f       	add	r30, r17
    1856:	f1 1d       	adc	r31, r1
    1858:	80 81       	ld	r24, Z
    185a:	80 33       	cpi	r24, 0x30	; 48
    185c:	19 f4       	brne	.+6      	; 0x1864 <vfprintf+0x1ec>
    185e:	11 50       	subi	r17, 0x01	; 1
    1860:	11 11       	cpse	r17, r1
    1862:	f4 cf       	rjmp	.-24     	; 0x184c <vfprintf+0x1d4>
    1864:	37 fe       	sbrs	r3, 7
    1866:	0e c0       	rjmp	.+28     	; 0x1884 <vfprintf+0x20c>
    1868:	ee 24       	eor	r14, r14
    186a:	e3 94       	inc	r14
    186c:	e1 0e       	add	r14, r17
    186e:	81 2f       	mov	r24, r17
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	48 16       	cp	r4, r24
    1874:	59 06       	cpc	r5, r25
    1876:	2c f4       	brge	.+10     	; 0x1882 <vfprintf+0x20a>
    1878:	14 19       	sub	r17, r4
    187a:	04 c0       	rjmp	.+8      	; 0x1884 <vfprintf+0x20c>
    187c:	ee 24       	eor	r14, r14
    187e:	e3 94       	inc	r14
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <vfprintf+0x20c>
    1882:	10 e0       	ldi	r17, 0x00	; 0
    1884:	37 fe       	sbrs	r3, 7
    1886:	06 c0       	rjmp	.+12     	; 0x1894 <vfprintf+0x21c>
    1888:	14 14       	cp	r1, r4
    188a:	15 04       	cpc	r1, r5
    188c:	34 f4       	brge	.+12     	; 0x189a <vfprintf+0x222>
    188e:	c2 01       	movw	r24, r4
    1890:	01 96       	adiw	r24, 0x01	; 1
    1892:	05 c0       	rjmp	.+10     	; 0x189e <vfprintf+0x226>
    1894:	85 e0       	ldi	r24, 0x05	; 5
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0x226>
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	21 10       	cpse	r2, r1
    18a0:	01 96       	adiw	r24, 0x01	; 1
    18a2:	11 23       	and	r17, r17
    18a4:	31 f0       	breq	.+12     	; 0x18b2 <vfprintf+0x23a>
    18a6:	21 2f       	mov	r18, r17
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	2f 5f       	subi	r18, 0xFF	; 255
    18ac:	3f 4f       	sbci	r19, 0xFF	; 255
    18ae:	82 0f       	add	r24, r18
    18b0:	93 1f       	adc	r25, r19
    18b2:	2f 2d       	mov	r18, r15
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	82 17       	cp	r24, r18
    18b8:	93 07       	cpc	r25, r19
    18ba:	14 f4       	brge	.+4      	; 0x18c0 <vfprintf+0x248>
    18bc:	f8 1a       	sub	r15, r24
    18be:	01 c0       	rjmp	.+2      	; 0x18c2 <vfprintf+0x24a>
    18c0:	f1 2c       	mov	r15, r1
    18c2:	83 2d       	mov	r24, r3
    18c4:	89 70       	andi	r24, 0x09	; 9
    18c6:	49 f4       	brne	.+18     	; 0x18da <vfprintf+0x262>
    18c8:	ff 20       	and	r15, r15
    18ca:	39 f0       	breq	.+14     	; 0x18da <vfprintf+0x262>
    18cc:	b6 01       	movw	r22, r12
    18ce:	80 e2       	ldi	r24, 0x20	; 32
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    18d6:	fa 94       	dec	r15
    18d8:	f7 cf       	rjmp	.-18     	; 0x18c8 <vfprintf+0x250>
    18da:	22 20       	and	r2, r2
    18dc:	29 f0       	breq	.+10     	; 0x18e8 <vfprintf+0x270>
    18de:	b6 01       	movw	r22, r12
    18e0:	82 2d       	mov	r24, r2
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    18e8:	33 fc       	sbrc	r3, 3
    18ea:	09 c0       	rjmp	.+18     	; 0x18fe <vfprintf+0x286>
    18ec:	ff 20       	and	r15, r15
    18ee:	39 f0       	breq	.+14     	; 0x18fe <vfprintf+0x286>
    18f0:	b6 01       	movw	r22, r12
    18f2:	80 e3       	ldi	r24, 0x30	; 48
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    18fa:	fa 94       	dec	r15
    18fc:	f7 cf       	rjmp	.-18     	; 0x18ec <vfprintf+0x274>
    18fe:	37 fe       	sbrs	r3, 7
    1900:	5a c0       	rjmp	.+180    	; 0x19b6 <vfprintf+0x33e>
    1902:	94 2d       	mov	r25, r4
    1904:	85 2d       	mov	r24, r5
    1906:	57 fe       	sbrs	r5, 7
    1908:	02 c0       	rjmp	.+4      	; 0x190e <vfprintf+0x296>
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	80 e0       	ldi	r24, 0x00	; 0
    190e:	29 2e       	mov	r2, r25
    1910:	38 2e       	mov	r3, r24
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	a2 01       	movw	r20, r4
    1918:	4e 19       	sub	r20, r14
    191a:	51 09       	sbc	r21, r1
    191c:	5d 87       	std	Y+13, r21	; 0x0d
    191e:	4c 87       	std	Y+12, r20	; 0x0c
    1920:	a2 01       	movw	r20, r4
    1922:	42 19       	sub	r20, r2
    1924:	53 09       	sbc	r21, r3
    1926:	5f 87       	std	Y+15, r21	; 0x0f
    1928:	4e 87       	std	Y+14, r20	; 0x0e
    192a:	61 2f       	mov	r22, r17
    192c:	70 e0       	ldi	r23, 0x00	; 0
    192e:	44 27       	eor	r20, r20
    1930:	55 27       	eor	r21, r21
    1932:	46 1b       	sub	r20, r22
    1934:	57 0b       	sbc	r21, r23
    1936:	59 8b       	std	Y+17, r21	; 0x11
    1938:	48 8b       	std	Y+16, r20	; 0x10
    193a:	5f ef       	ldi	r21, 0xFF	; 255
    193c:	25 16       	cp	r2, r21
    193e:	35 06       	cpc	r3, r21
    1940:	49 f4       	brne	.+18     	; 0x1954 <vfprintf+0x2dc>
    1942:	b6 01       	movw	r22, r12
    1944:	8e e2       	ldi	r24, 0x2E	; 46
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	2a 8b       	std	Y+18, r18	; 0x12
    194a:	3b 8b       	std	Y+19, r19	; 0x13
    194c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1950:	3b 89       	ldd	r19, Y+19	; 0x13
    1952:	2a 89       	ldd	r18, Y+18	; 0x12
    1954:	42 14       	cp	r4, r2
    1956:	53 04       	cpc	r5, r3
    1958:	6c f0       	brlt	.+26     	; 0x1974 <vfprintf+0x2fc>
    195a:	4c 85       	ldd	r20, Y+12	; 0x0c
    195c:	5d 85       	ldd	r21, Y+13	; 0x0d
    195e:	42 15       	cp	r20, r2
    1960:	53 05       	cpc	r21, r3
    1962:	44 f4       	brge	.+16     	; 0x1974 <vfprintf+0x2fc>
    1964:	ee 85       	ldd	r30, Y+14	; 0x0e
    1966:	ff 85       	ldd	r31, Y+15	; 0x0f
    1968:	e2 0f       	add	r30, r18
    196a:	f3 1f       	adc	r31, r19
    196c:	e6 0d       	add	r30, r6
    196e:	f7 1d       	adc	r31, r7
    1970:	81 81       	ldd	r24, Z+1	; 0x01
    1972:	01 c0       	rjmp	.+2      	; 0x1976 <vfprintf+0x2fe>
    1974:	80 e3       	ldi	r24, 0x30	; 48
    1976:	51 e0       	ldi	r21, 0x01	; 1
    1978:	25 1a       	sub	r2, r21
    197a:	31 08       	sbc	r3, r1
    197c:	2f 5f       	subi	r18, 0xFF	; 255
    197e:	3f 4f       	sbci	r19, 0xFF	; 255
    1980:	48 89       	ldd	r20, Y+16	; 0x10
    1982:	59 89       	ldd	r21, Y+17	; 0x11
    1984:	24 16       	cp	r2, r20
    1986:	35 06       	cpc	r3, r21
    1988:	4c f0       	brlt	.+18     	; 0x199c <vfprintf+0x324>
    198a:	b6 01       	movw	r22, r12
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	2a 8b       	std	Y+18, r18	; 0x12
    1990:	3b 8b       	std	Y+19, r19	; 0x13
    1992:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1996:	2a 89       	ldd	r18, Y+18	; 0x12
    1998:	3b 89       	ldd	r19, Y+19	; 0x13
    199a:	cf cf       	rjmp	.-98     	; 0x193a <vfprintf+0x2c2>
    199c:	24 14       	cp	r2, r4
    199e:	35 04       	cpc	r3, r5
    19a0:	39 f4       	brne	.+14     	; 0x19b0 <vfprintf+0x338>
    19a2:	9a 81       	ldd	r25, Y+2	; 0x02
    19a4:	96 33       	cpi	r25, 0x36	; 54
    19a6:	18 f4       	brcc	.+6      	; 0x19ae <vfprintf+0x336>
    19a8:	95 33       	cpi	r25, 0x35	; 53
    19aa:	11 f4       	brne	.+4      	; 0x19b0 <vfprintf+0x338>
    19ac:	04 ff       	sbrs	r16, 4
    19ae:	81 e3       	ldi	r24, 0x31	; 49
    19b0:	b6 01       	movw	r22, r12
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	4b c0       	rjmp	.+150    	; 0x1a4c <vfprintf+0x3d4>
    19b6:	8a 81       	ldd	r24, Y+2	; 0x02
    19b8:	81 33       	cpi	r24, 0x31	; 49
    19ba:	09 f0       	breq	.+2      	; 0x19be <vfprintf+0x346>
    19bc:	0f 7e       	andi	r16, 0xEF	; 239
    19be:	b6 01       	movw	r22, r12
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    19c6:	11 11       	cpse	r17, r1
    19c8:	05 c0       	rjmp	.+10     	; 0x19d4 <vfprintf+0x35c>
    19ca:	34 fc       	sbrc	r3, 4
    19cc:	18 c0       	rjmp	.+48     	; 0x19fe <vfprintf+0x386>
    19ce:	85 e6       	ldi	r24, 0x65	; 101
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	17 c0       	rjmp	.+46     	; 0x1a02 <vfprintf+0x38a>
    19d4:	b6 01       	movw	r22, r12
    19d6:	8e e2       	ldi	r24, 0x2E	; 46
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    19de:	82 e0       	ldi	r24, 0x02	; 2
    19e0:	ee 24       	eor	r14, r14
    19e2:	e3 94       	inc	r14
    19e4:	e8 0e       	add	r14, r24
    19e6:	f3 01       	movw	r30, r6
    19e8:	e8 0f       	add	r30, r24
    19ea:	f1 1d       	adc	r31, r1
    19ec:	80 81       	ld	r24, Z
    19ee:	b6 01       	movw	r22, r12
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    19f6:	11 50       	subi	r17, 0x01	; 1
    19f8:	8e 2d       	mov	r24, r14
    19fa:	91 f7       	brne	.-28     	; 0x19e0 <vfprintf+0x368>
    19fc:	e6 cf       	rjmp	.-52     	; 0x19ca <vfprintf+0x352>
    19fe:	85 e4       	ldi	r24, 0x45	; 69
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	b6 01       	movw	r22, r12
    1a04:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1a08:	57 fc       	sbrc	r5, 7
    1a0a:	05 c0       	rjmp	.+10     	; 0x1a16 <vfprintf+0x39e>
    1a0c:	41 14       	cp	r4, r1
    1a0e:	51 04       	cpc	r5, r1
    1a10:	39 f4       	brne	.+14     	; 0x1a20 <vfprintf+0x3a8>
    1a12:	04 ff       	sbrs	r16, 4
    1a14:	05 c0       	rjmp	.+10     	; 0x1a20 <vfprintf+0x3a8>
    1a16:	51 94       	neg	r5
    1a18:	41 94       	neg	r4
    1a1a:	51 08       	sbc	r5, r1
    1a1c:	8d e2       	ldi	r24, 0x2D	; 45
    1a1e:	01 c0       	rjmp	.+2      	; 0x1a22 <vfprintf+0x3aa>
    1a20:	8b e2       	ldi	r24, 0x2B	; 43
    1a22:	b6 01       	movw	r22, r12
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1a2a:	80 e3       	ldi	r24, 0x30	; 48
    1a2c:	9a e0       	ldi	r25, 0x0A	; 10
    1a2e:	49 16       	cp	r4, r25
    1a30:	51 04       	cpc	r5, r1
    1a32:	2c f0       	brlt	.+10     	; 0x1a3e <vfprintf+0x3c6>
    1a34:	8f 5f       	subi	r24, 0xFF	; 255
    1a36:	5a e0       	ldi	r21, 0x0A	; 10
    1a38:	45 1a       	sub	r4, r21
    1a3a:	51 08       	sbc	r5, r1
    1a3c:	f7 cf       	rjmp	.-18     	; 0x1a2c <vfprintf+0x3b4>
    1a3e:	b6 01       	movw	r22, r12
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1a46:	b6 01       	movw	r22, r12
    1a48:	c2 01       	movw	r24, r4
    1a4a:	c0 96       	adiw	r24, 0x30	; 48
    1a4c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1a50:	57 c1       	rjmp	.+686    	; 0x1d00 <vfprintf+0x688>
    1a52:	83 36       	cpi	r24, 0x63	; 99
    1a54:	31 f0       	breq	.+12     	; 0x1a62 <vfprintf+0x3ea>
    1a56:	83 37       	cpi	r24, 0x73	; 115
    1a58:	79 f0       	breq	.+30     	; 0x1a78 <vfprintf+0x400>
    1a5a:	83 35       	cpi	r24, 0x53	; 83
    1a5c:	09 f0       	breq	.+2      	; 0x1a60 <vfprintf+0x3e8>
    1a5e:	58 c0       	rjmp	.+176    	; 0x1b10 <vfprintf+0x498>
    1a60:	21 c0       	rjmp	.+66     	; 0x1aa4 <vfprintf+0x42c>
    1a62:	52 01       	movw	r10, r4
    1a64:	e2 e0       	ldi	r30, 0x02	; 2
    1a66:	ae 0e       	add	r10, r30
    1a68:	b1 1c       	adc	r11, r1
    1a6a:	f2 01       	movw	r30, r4
    1a6c:	80 81       	ld	r24, Z
    1a6e:	89 83       	std	Y+1, r24	; 0x01
    1a70:	01 e0       	ldi	r16, 0x01	; 1
    1a72:	10 e0       	ldi	r17, 0x00	; 0
    1a74:	23 01       	movw	r4, r6
    1a76:	14 c0       	rjmp	.+40     	; 0x1aa0 <vfprintf+0x428>
    1a78:	52 01       	movw	r10, r4
    1a7a:	f2 e0       	ldi	r31, 0x02	; 2
    1a7c:	af 0e       	add	r10, r31
    1a7e:	b1 1c       	adc	r11, r1
    1a80:	f2 01       	movw	r30, r4
    1a82:	40 80       	ld	r4, Z
    1a84:	51 80       	ldd	r5, Z+1	; 0x01
    1a86:	26 ff       	sbrs	r18, 6
    1a88:	03 c0       	rjmp	.+6      	; 0x1a90 <vfprintf+0x418>
    1a8a:	61 2f       	mov	r22, r17
    1a8c:	70 e0       	ldi	r23, 0x00	; 0
    1a8e:	02 c0       	rjmp	.+4      	; 0x1a94 <vfprintf+0x41c>
    1a90:	6f ef       	ldi	r22, 0xFF	; 255
    1a92:	7f ef       	ldi	r23, 0xFF	; 255
    1a94:	c2 01       	movw	r24, r4
    1a96:	2a 8b       	std	Y+18, r18	; 0x12
    1a98:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <strnlen>
    1a9c:	8c 01       	movw	r16, r24
    1a9e:	2a 89       	ldd	r18, Y+18	; 0x12
    1aa0:	2f 77       	andi	r18, 0x7F	; 127
    1aa2:	15 c0       	rjmp	.+42     	; 0x1ace <vfprintf+0x456>
    1aa4:	52 01       	movw	r10, r4
    1aa6:	f2 e0       	ldi	r31, 0x02	; 2
    1aa8:	af 0e       	add	r10, r31
    1aaa:	b1 1c       	adc	r11, r1
    1aac:	f2 01       	movw	r30, r4
    1aae:	40 80       	ld	r4, Z
    1ab0:	51 80       	ldd	r5, Z+1	; 0x01
    1ab2:	26 ff       	sbrs	r18, 6
    1ab4:	03 c0       	rjmp	.+6      	; 0x1abc <vfprintf+0x444>
    1ab6:	61 2f       	mov	r22, r17
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	02 c0       	rjmp	.+4      	; 0x1ac0 <vfprintf+0x448>
    1abc:	6f ef       	ldi	r22, 0xFF	; 255
    1abe:	7f ef       	ldi	r23, 0xFF	; 255
    1ac0:	c2 01       	movw	r24, r4
    1ac2:	2a 8b       	std	Y+18, r18	; 0x12
    1ac4:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <strnlen_P>
    1ac8:	8c 01       	movw	r16, r24
    1aca:	2a 89       	ldd	r18, Y+18	; 0x12
    1acc:	20 68       	ori	r18, 0x80	; 128
    1ace:	32 2e       	mov	r3, r18
    1ad0:	23 fd       	sbrc	r18, 3
    1ad2:	1a c0       	rjmp	.+52     	; 0x1b08 <vfprintf+0x490>
    1ad4:	8f 2d       	mov	r24, r15
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	08 17       	cp	r16, r24
    1ada:	19 07       	cpc	r17, r25
    1adc:	a8 f4       	brcc	.+42     	; 0x1b08 <vfprintf+0x490>
    1ade:	b6 01       	movw	r22, r12
    1ae0:	80 e2       	ldi	r24, 0x20	; 32
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1ae8:	fa 94       	dec	r15
    1aea:	f4 cf       	rjmp	.-24     	; 0x1ad4 <vfprintf+0x45c>
    1aec:	f2 01       	movw	r30, r4
    1aee:	37 fc       	sbrc	r3, 7
    1af0:	85 91       	lpm	r24, Z+
    1af2:	37 fe       	sbrs	r3, 7
    1af4:	81 91       	ld	r24, Z+
    1af6:	2f 01       	movw	r4, r30
    1af8:	b6 01       	movw	r22, r12
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1b00:	f1 10       	cpse	r15, r1
    1b02:	fa 94       	dec	r15
    1b04:	01 50       	subi	r16, 0x01	; 1
    1b06:	11 09       	sbc	r17, r1
    1b08:	01 15       	cp	r16, r1
    1b0a:	11 05       	cpc	r17, r1
    1b0c:	79 f7       	brne	.-34     	; 0x1aec <vfprintf+0x474>
    1b0e:	f8 c0       	rjmp	.+496    	; 0x1d00 <vfprintf+0x688>
    1b10:	84 36       	cpi	r24, 0x64	; 100
    1b12:	11 f0       	breq	.+4      	; 0x1b18 <vfprintf+0x4a0>
    1b14:	89 36       	cpi	r24, 0x69	; 105
    1b16:	59 f5       	brne	.+86     	; 0x1b6e <vfprintf+0x4f6>
    1b18:	52 01       	movw	r10, r4
    1b1a:	27 ff       	sbrs	r18, 7
    1b1c:	09 c0       	rjmp	.+18     	; 0x1b30 <vfprintf+0x4b8>
    1b1e:	f4 e0       	ldi	r31, 0x04	; 4
    1b20:	af 0e       	add	r10, r31
    1b22:	b1 1c       	adc	r11, r1
    1b24:	f2 01       	movw	r30, r4
    1b26:	60 81       	ld	r22, Z
    1b28:	71 81       	ldd	r23, Z+1	; 0x01
    1b2a:	82 81       	ldd	r24, Z+2	; 0x02
    1b2c:	93 81       	ldd	r25, Z+3	; 0x03
    1b2e:	0a c0       	rjmp	.+20     	; 0x1b44 <vfprintf+0x4cc>
    1b30:	f2 e0       	ldi	r31, 0x02	; 2
    1b32:	af 0e       	add	r10, r31
    1b34:	b1 1c       	adc	r11, r1
    1b36:	f2 01       	movw	r30, r4
    1b38:	60 81       	ld	r22, Z
    1b3a:	71 81       	ldd	r23, Z+1	; 0x01
    1b3c:	07 2e       	mov	r0, r23
    1b3e:	00 0c       	add	r0, r0
    1b40:	88 0b       	sbc	r24, r24
    1b42:	99 0b       	sbc	r25, r25
    1b44:	2f 76       	andi	r18, 0x6F	; 111
    1b46:	32 2e       	mov	r3, r18
    1b48:	97 ff       	sbrs	r25, 7
    1b4a:	09 c0       	rjmp	.+18     	; 0x1b5e <vfprintf+0x4e6>
    1b4c:	90 95       	com	r25
    1b4e:	80 95       	com	r24
    1b50:	70 95       	com	r23
    1b52:	61 95       	neg	r22
    1b54:	7f 4f       	sbci	r23, 0xFF	; 255
    1b56:	8f 4f       	sbci	r24, 0xFF	; 255
    1b58:	9f 4f       	sbci	r25, 0xFF	; 255
    1b5a:	20 68       	ori	r18, 0x80	; 128
    1b5c:	32 2e       	mov	r3, r18
    1b5e:	2a e0       	ldi	r18, 0x0A	; 10
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	a3 01       	movw	r20, r6
    1b64:	0e 94 45 10 	call	0x208a	; 0x208a <__ultoa_invert>
    1b68:	e8 2e       	mov	r14, r24
    1b6a:	e6 18       	sub	r14, r6
    1b6c:	3f c0       	rjmp	.+126    	; 0x1bec <vfprintf+0x574>
    1b6e:	02 2f       	mov	r16, r18
    1b70:	85 37       	cpi	r24, 0x75	; 117
    1b72:	21 f4       	brne	.+8      	; 0x1b7c <vfprintf+0x504>
    1b74:	0f 7e       	andi	r16, 0xEF	; 239
    1b76:	2a e0       	ldi	r18, 0x0A	; 10
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	1d c0       	rjmp	.+58     	; 0x1bb6 <vfprintf+0x53e>
    1b7c:	09 7f       	andi	r16, 0xF9	; 249
    1b7e:	8f 36       	cpi	r24, 0x6F	; 111
    1b80:	91 f0       	breq	.+36     	; 0x1ba6 <vfprintf+0x52e>
    1b82:	18 f4       	brcc	.+6      	; 0x1b8a <vfprintf+0x512>
    1b84:	88 35       	cpi	r24, 0x58	; 88
    1b86:	59 f0       	breq	.+22     	; 0x1b9e <vfprintf+0x526>
    1b88:	c5 c0       	rjmp	.+394    	; 0x1d14 <vfprintf+0x69c>
    1b8a:	80 37       	cpi	r24, 0x70	; 112
    1b8c:	19 f0       	breq	.+6      	; 0x1b94 <vfprintf+0x51c>
    1b8e:	88 37       	cpi	r24, 0x78	; 120
    1b90:	11 f0       	breq	.+4      	; 0x1b96 <vfprintf+0x51e>
    1b92:	c0 c0       	rjmp	.+384    	; 0x1d14 <vfprintf+0x69c>
    1b94:	00 61       	ori	r16, 0x10	; 16
    1b96:	04 ff       	sbrs	r16, 4
    1b98:	09 c0       	rjmp	.+18     	; 0x1bac <vfprintf+0x534>
    1b9a:	04 60       	ori	r16, 0x04	; 4
    1b9c:	07 c0       	rjmp	.+14     	; 0x1bac <vfprintf+0x534>
    1b9e:	24 ff       	sbrs	r18, 4
    1ba0:	08 c0       	rjmp	.+16     	; 0x1bb2 <vfprintf+0x53a>
    1ba2:	06 60       	ori	r16, 0x06	; 6
    1ba4:	06 c0       	rjmp	.+12     	; 0x1bb2 <vfprintf+0x53a>
    1ba6:	28 e0       	ldi	r18, 0x08	; 8
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	05 c0       	rjmp	.+10     	; 0x1bb6 <vfprintf+0x53e>
    1bac:	20 e1       	ldi	r18, 0x10	; 16
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	02 c0       	rjmp	.+4      	; 0x1bb6 <vfprintf+0x53e>
    1bb2:	20 e1       	ldi	r18, 0x10	; 16
    1bb4:	32 e0       	ldi	r19, 0x02	; 2
    1bb6:	52 01       	movw	r10, r4
    1bb8:	07 ff       	sbrs	r16, 7
    1bba:	09 c0       	rjmp	.+18     	; 0x1bce <vfprintf+0x556>
    1bbc:	f4 e0       	ldi	r31, 0x04	; 4
    1bbe:	af 0e       	add	r10, r31
    1bc0:	b1 1c       	adc	r11, r1
    1bc2:	f2 01       	movw	r30, r4
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	08 c0       	rjmp	.+16     	; 0x1bde <vfprintf+0x566>
    1bce:	f2 e0       	ldi	r31, 0x02	; 2
    1bd0:	af 0e       	add	r10, r31
    1bd2:	b1 1c       	adc	r11, r1
    1bd4:	f2 01       	movw	r30, r4
    1bd6:	60 81       	ld	r22, Z
    1bd8:	71 81       	ldd	r23, Z+1	; 0x01
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	a3 01       	movw	r20, r6
    1be0:	0e 94 45 10 	call	0x208a	; 0x208a <__ultoa_invert>
    1be4:	e8 2e       	mov	r14, r24
    1be6:	e6 18       	sub	r14, r6
    1be8:	0f 77       	andi	r16, 0x7F	; 127
    1bea:	30 2e       	mov	r3, r16
    1bec:	36 fe       	sbrs	r3, 6
    1bee:	0b c0       	rjmp	.+22     	; 0x1c06 <vfprintf+0x58e>
    1bf0:	33 2d       	mov	r19, r3
    1bf2:	3e 7f       	andi	r19, 0xFE	; 254
    1bf4:	e1 16       	cp	r14, r17
    1bf6:	50 f4       	brcc	.+20     	; 0x1c0c <vfprintf+0x594>
    1bf8:	34 fe       	sbrs	r3, 4
    1bfa:	0a c0       	rjmp	.+20     	; 0x1c10 <vfprintf+0x598>
    1bfc:	32 fc       	sbrc	r3, 2
    1bfe:	08 c0       	rjmp	.+16     	; 0x1c10 <vfprintf+0x598>
    1c00:	33 2d       	mov	r19, r3
    1c02:	3e 7e       	andi	r19, 0xEE	; 238
    1c04:	05 c0       	rjmp	.+10     	; 0x1c10 <vfprintf+0x598>
    1c06:	0e 2d       	mov	r16, r14
    1c08:	33 2d       	mov	r19, r3
    1c0a:	03 c0       	rjmp	.+6      	; 0x1c12 <vfprintf+0x59a>
    1c0c:	0e 2d       	mov	r16, r14
    1c0e:	01 c0       	rjmp	.+2      	; 0x1c12 <vfprintf+0x59a>
    1c10:	01 2f       	mov	r16, r17
    1c12:	34 ff       	sbrs	r19, 4
    1c14:	0c c0       	rjmp	.+24     	; 0x1c2e <vfprintf+0x5b6>
    1c16:	fe 01       	movw	r30, r28
    1c18:	ee 0d       	add	r30, r14
    1c1a:	f1 1d       	adc	r31, r1
    1c1c:	80 81       	ld	r24, Z
    1c1e:	80 33       	cpi	r24, 0x30	; 48
    1c20:	11 f4       	brne	.+4      	; 0x1c26 <vfprintf+0x5ae>
    1c22:	39 7e       	andi	r19, 0xE9	; 233
    1c24:	08 c0       	rjmp	.+16     	; 0x1c36 <vfprintf+0x5be>
    1c26:	32 ff       	sbrs	r19, 2
    1c28:	05 c0       	rjmp	.+10     	; 0x1c34 <vfprintf+0x5bc>
    1c2a:	0e 5f       	subi	r16, 0xFE	; 254
    1c2c:	04 c0       	rjmp	.+8      	; 0x1c36 <vfprintf+0x5be>
    1c2e:	83 2f       	mov	r24, r19
    1c30:	86 78       	andi	r24, 0x86	; 134
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <vfprintf+0x5be>
    1c34:	0f 5f       	subi	r16, 0xFF	; 255
    1c36:	33 fd       	sbrc	r19, 3
    1c38:	13 c0       	rjmp	.+38     	; 0x1c60 <vfprintf+0x5e8>
    1c3a:	30 ff       	sbrs	r19, 0
    1c3c:	06 c0       	rjmp	.+12     	; 0x1c4a <vfprintf+0x5d2>
    1c3e:	1e 2d       	mov	r17, r14
    1c40:	0f 15       	cp	r16, r15
    1c42:	18 f4       	brcc	.+6      	; 0x1c4a <vfprintf+0x5d2>
    1c44:	1f 0d       	add	r17, r15
    1c46:	10 1b       	sub	r17, r16
    1c48:	0f 2d       	mov	r16, r15
    1c4a:	0f 15       	cp	r16, r15
    1c4c:	68 f4       	brcc	.+26     	; 0x1c68 <vfprintf+0x5f0>
    1c4e:	b6 01       	movw	r22, r12
    1c50:	80 e2       	ldi	r24, 0x20	; 32
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	3b 8b       	std	Y+19, r19	; 0x13
    1c56:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1c5a:	0f 5f       	subi	r16, 0xFF	; 255
    1c5c:	3b 89       	ldd	r19, Y+19	; 0x13
    1c5e:	f5 cf       	rjmp	.-22     	; 0x1c4a <vfprintf+0x5d2>
    1c60:	0f 15       	cp	r16, r15
    1c62:	10 f4       	brcc	.+4      	; 0x1c68 <vfprintf+0x5f0>
    1c64:	f0 1a       	sub	r15, r16
    1c66:	01 c0       	rjmp	.+2      	; 0x1c6a <vfprintf+0x5f2>
    1c68:	f1 2c       	mov	r15, r1
    1c6a:	34 ff       	sbrs	r19, 4
    1c6c:	12 c0       	rjmp	.+36     	; 0x1c92 <vfprintf+0x61a>
    1c6e:	b6 01       	movw	r22, r12
    1c70:	80 e3       	ldi	r24, 0x30	; 48
    1c72:	90 e0       	ldi	r25, 0x00	; 0
    1c74:	3b 8b       	std	Y+19, r19	; 0x13
    1c76:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1c7a:	3b 89       	ldd	r19, Y+19	; 0x13
    1c7c:	32 ff       	sbrs	r19, 2
    1c7e:	17 c0       	rjmp	.+46     	; 0x1cae <vfprintf+0x636>
    1c80:	31 fd       	sbrc	r19, 1
    1c82:	03 c0       	rjmp	.+6      	; 0x1c8a <vfprintf+0x612>
    1c84:	88 e7       	ldi	r24, 0x78	; 120
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	02 c0       	rjmp	.+4      	; 0x1c8e <vfprintf+0x616>
    1c8a:	88 e5       	ldi	r24, 0x58	; 88
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	b6 01       	movw	r22, r12
    1c90:	0c c0       	rjmp	.+24     	; 0x1caa <vfprintf+0x632>
    1c92:	83 2f       	mov	r24, r19
    1c94:	86 78       	andi	r24, 0x86	; 134
    1c96:	59 f0       	breq	.+22     	; 0x1cae <vfprintf+0x636>
    1c98:	31 ff       	sbrs	r19, 1
    1c9a:	02 c0       	rjmp	.+4      	; 0x1ca0 <vfprintf+0x628>
    1c9c:	8b e2       	ldi	r24, 0x2B	; 43
    1c9e:	01 c0       	rjmp	.+2      	; 0x1ca2 <vfprintf+0x62a>
    1ca0:	80 e2       	ldi	r24, 0x20	; 32
    1ca2:	37 fd       	sbrc	r19, 7
    1ca4:	8d e2       	ldi	r24, 0x2D	; 45
    1ca6:	b6 01       	movw	r22, r12
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1cae:	e1 16       	cp	r14, r17
    1cb0:	38 f4       	brcc	.+14     	; 0x1cc0 <vfprintf+0x648>
    1cb2:	b6 01       	movw	r22, r12
    1cb4:	80 e3       	ldi	r24, 0x30	; 48
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1cbc:	11 50       	subi	r17, 0x01	; 1
    1cbe:	f7 cf       	rjmp	.-18     	; 0x1cae <vfprintf+0x636>
    1cc0:	ea 94       	dec	r14
    1cc2:	f3 01       	movw	r30, r6
    1cc4:	ee 0d       	add	r30, r14
    1cc6:	f1 1d       	adc	r31, r1
    1cc8:	80 81       	ld	r24, Z
    1cca:	b6 01       	movw	r22, r12
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1cd2:	e1 10       	cpse	r14, r1
    1cd4:	f5 cf       	rjmp	.-22     	; 0x1cc0 <vfprintf+0x648>
    1cd6:	14 c0       	rjmp	.+40     	; 0x1d00 <vfprintf+0x688>
    1cd8:	f4 e0       	ldi	r31, 0x04	; 4
    1cda:	ff 15       	cp	r31, r15
    1cdc:	58 f5       	brcc	.+86     	; 0x1d34 <vfprintf+0x6bc>
    1cde:	84 e0       	ldi	r24, 0x04	; 4
    1ce0:	f8 1a       	sub	r15, r24
    1ce2:	33 fe       	sbrs	r3, 3
    1ce4:	1e c0       	rjmp	.+60     	; 0x1d22 <vfprintf+0x6aa>
    1ce6:	21 10       	cpse	r2, r1
    1ce8:	26 c0       	rjmp	.+76     	; 0x1d36 <vfprintf+0x6be>
    1cea:	03 ff       	sbrs	r16, 3
    1cec:	2a c0       	rjmp	.+84     	; 0x1d42 <vfprintf+0x6ca>
    1cee:	08 e6       	ldi	r16, 0x68	; 104
    1cf0:	10 e0       	ldi	r17, 0x00	; 0
    1cf2:	f3 2d       	mov	r31, r3
    1cf4:	f0 71       	andi	r31, 0x10	; 16
    1cf6:	3f 2e       	mov	r3, r31
    1cf8:	f8 01       	movw	r30, r16
    1cfa:	84 91       	lpm	r24, Z
    1cfc:	81 11       	cpse	r24, r1
    1cfe:	24 c0       	rjmp	.+72     	; 0x1d48 <vfprintf+0x6d0>
    1d00:	ff 20       	and	r15, r15
    1d02:	09 f4       	brne	.+2      	; 0x1d06 <vfprintf+0x68e>
    1d04:	e5 cc       	rjmp	.-1590   	; 0x16d0 <vfprintf+0x58>
    1d06:	b6 01       	movw	r22, r12
    1d08:	80 e2       	ldi	r24, 0x20	; 32
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1d10:	fa 94       	dec	r15
    1d12:	f6 cf       	rjmp	.-20     	; 0x1d00 <vfprintf+0x688>
    1d14:	f6 01       	movw	r30, r12
    1d16:	86 81       	ldd	r24, Z+6	; 0x06
    1d18:	97 81       	ldd	r25, Z+7	; 0x07
    1d1a:	26 c0       	rjmp	.+76     	; 0x1d68 <vfprintf+0x6f0>
    1d1c:	8f ef       	ldi	r24, 0xFF	; 255
    1d1e:	9f ef       	ldi	r25, 0xFF	; 255
    1d20:	23 c0       	rjmp	.+70     	; 0x1d68 <vfprintf+0x6f0>
    1d22:	b6 01       	movw	r22, r12
    1d24:	80 e2       	ldi	r24, 0x20	; 32
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1d2c:	fa 94       	dec	r15
    1d2e:	f1 10       	cpse	r15, r1
    1d30:	f8 cf       	rjmp	.-16     	; 0x1d22 <vfprintf+0x6aa>
    1d32:	d9 cf       	rjmp	.-78     	; 0x1ce6 <vfprintf+0x66e>
    1d34:	f1 2c       	mov	r15, r1
    1d36:	b6 01       	movw	r22, r12
    1d38:	82 2d       	mov	r24, r2
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1d40:	d4 cf       	rjmp	.-88     	; 0x1cea <vfprintf+0x672>
    1d42:	0c e6       	ldi	r16, 0x6C	; 108
    1d44:	10 e0       	ldi	r17, 0x00	; 0
    1d46:	d5 cf       	rjmp	.-86     	; 0x1cf2 <vfprintf+0x67a>
    1d48:	31 10       	cpse	r3, r1
    1d4a:	80 52       	subi	r24, 0x20	; 32
    1d4c:	b6 01       	movw	r22, r12
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <fputc>
    1d54:	0f 5f       	subi	r16, 0xFF	; 255
    1d56:	1f 4f       	sbci	r17, 0xFF	; 255
    1d58:	cf cf       	rjmp	.-98     	; 0x1cf8 <vfprintf+0x680>
    1d5a:	23 e0       	ldi	r18, 0x03	; 3
    1d5c:	2f 15       	cp	r18, r15
    1d5e:	10 f4       	brcc	.+4      	; 0x1d64 <vfprintf+0x6ec>
    1d60:	83 e0       	ldi	r24, 0x03	; 3
    1d62:	be cf       	rjmp	.-132    	; 0x1ce0 <vfprintf+0x668>
    1d64:	f1 2c       	mov	r15, r1
    1d66:	c1 cf       	rjmp	.-126    	; 0x1cea <vfprintf+0x672>
    1d68:	63 96       	adiw	r28, 0x13	; 19
    1d6a:	e2 e1       	ldi	r30, 0x12	; 18
    1d6c:	0c 94 d4 0e 	jmp	0x1da8	; 0x1da8 <__epilogue_restores__>

00001d70 <__prologue_saves__>:
    1d70:	2f 92       	push	r2
    1d72:	3f 92       	push	r3
    1d74:	4f 92       	push	r4
    1d76:	5f 92       	push	r5
    1d78:	6f 92       	push	r6
    1d7a:	7f 92       	push	r7
    1d7c:	8f 92       	push	r8
    1d7e:	9f 92       	push	r9
    1d80:	af 92       	push	r10
    1d82:	bf 92       	push	r11
    1d84:	cf 92       	push	r12
    1d86:	df 92       	push	r13
    1d88:	ef 92       	push	r14
    1d8a:	ff 92       	push	r15
    1d8c:	0f 93       	push	r16
    1d8e:	1f 93       	push	r17
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	cd b7       	in	r28, 0x3d	; 61
    1d96:	de b7       	in	r29, 0x3e	; 62
    1d98:	ca 1b       	sub	r28, r26
    1d9a:	db 0b       	sbc	r29, r27
    1d9c:	0f b6       	in	r0, 0x3f	; 63
    1d9e:	f8 94       	cli
    1da0:	de bf       	out	0x3e, r29	; 62
    1da2:	0f be       	out	0x3f, r0	; 63
    1da4:	cd bf       	out	0x3d, r28	; 61
    1da6:	09 94       	ijmp

00001da8 <__epilogue_restores__>:
    1da8:	2a 88       	ldd	r2, Y+18	; 0x12
    1daa:	39 88       	ldd	r3, Y+17	; 0x11
    1dac:	48 88       	ldd	r4, Y+16	; 0x10
    1dae:	5f 84       	ldd	r5, Y+15	; 0x0f
    1db0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1db2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1db4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1db6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1db8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1dba:	b9 84       	ldd	r11, Y+9	; 0x09
    1dbc:	c8 84       	ldd	r12, Y+8	; 0x08
    1dbe:	df 80       	ldd	r13, Y+7	; 0x07
    1dc0:	ee 80       	ldd	r14, Y+6	; 0x06
    1dc2:	fd 80       	ldd	r15, Y+5	; 0x05
    1dc4:	0c 81       	ldd	r16, Y+4	; 0x04
    1dc6:	1b 81       	ldd	r17, Y+3	; 0x03
    1dc8:	aa 81       	ldd	r26, Y+2	; 0x02
    1dca:	b9 81       	ldd	r27, Y+1	; 0x01
    1dcc:	ce 0f       	add	r28, r30
    1dce:	d1 1d       	adc	r29, r1
    1dd0:	0f b6       	in	r0, 0x3f	; 63
    1dd2:	f8 94       	cli
    1dd4:	de bf       	out	0x3e, r29	; 62
    1dd6:	0f be       	out	0x3f, r0	; 63
    1dd8:	cd bf       	out	0x3d, r28	; 61
    1dda:	ed 01       	movw	r28, r26
    1ddc:	08 95       	ret

00001dde <__ftoa_engine>:
    1dde:	28 30       	cpi	r18, 0x08	; 8
    1de0:	08 f0       	brcs	.+2      	; 0x1de4 <__ftoa_engine+0x6>
    1de2:	27 e0       	ldi	r18, 0x07	; 7
    1de4:	33 27       	eor	r19, r19
    1de6:	da 01       	movw	r26, r20
    1de8:	99 0f       	add	r25, r25
    1dea:	31 1d       	adc	r19, r1
    1dec:	87 fd       	sbrc	r24, 7
    1dee:	91 60       	ori	r25, 0x01	; 1
    1df0:	00 96       	adiw	r24, 0x00	; 0
    1df2:	61 05       	cpc	r22, r1
    1df4:	71 05       	cpc	r23, r1
    1df6:	39 f4       	brne	.+14     	; 0x1e06 <__ftoa_engine+0x28>
    1df8:	32 60       	ori	r19, 0x02	; 2
    1dfa:	2e 5f       	subi	r18, 0xFE	; 254
    1dfc:	3d 93       	st	X+, r19
    1dfe:	30 e3       	ldi	r19, 0x30	; 48
    1e00:	2a 95       	dec	r18
    1e02:	e1 f7       	brne	.-8      	; 0x1dfc <__ftoa_engine+0x1e>
    1e04:	08 95       	ret
    1e06:	9f 3f       	cpi	r25, 0xFF	; 255
    1e08:	30 f0       	brcs	.+12     	; 0x1e16 <__ftoa_engine+0x38>
    1e0a:	80 38       	cpi	r24, 0x80	; 128
    1e0c:	71 05       	cpc	r23, r1
    1e0e:	61 05       	cpc	r22, r1
    1e10:	09 f0       	breq	.+2      	; 0x1e14 <__ftoa_engine+0x36>
    1e12:	3c 5f       	subi	r19, 0xFC	; 252
    1e14:	3c 5f       	subi	r19, 0xFC	; 252
    1e16:	3d 93       	st	X+, r19
    1e18:	91 30       	cpi	r25, 0x01	; 1
    1e1a:	08 f0       	brcs	.+2      	; 0x1e1e <__ftoa_engine+0x40>
    1e1c:	80 68       	ori	r24, 0x80	; 128
    1e1e:	91 1d       	adc	r25, r1
    1e20:	df 93       	push	r29
    1e22:	cf 93       	push	r28
    1e24:	1f 93       	push	r17
    1e26:	0f 93       	push	r16
    1e28:	ff 92       	push	r15
    1e2a:	ef 92       	push	r14
    1e2c:	19 2f       	mov	r17, r25
    1e2e:	98 7f       	andi	r25, 0xF8	; 248
    1e30:	96 95       	lsr	r25
    1e32:	e9 2f       	mov	r30, r25
    1e34:	96 95       	lsr	r25
    1e36:	96 95       	lsr	r25
    1e38:	e9 0f       	add	r30, r25
    1e3a:	ff 27       	eor	r31, r31
    1e3c:	e6 53       	subi	r30, 0x36	; 54
    1e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e40:	99 27       	eor	r25, r25
    1e42:	33 27       	eor	r19, r19
    1e44:	ee 24       	eor	r14, r14
    1e46:	ff 24       	eor	r15, r15
    1e48:	a7 01       	movw	r20, r14
    1e4a:	e7 01       	movw	r28, r14
    1e4c:	05 90       	lpm	r0, Z+
    1e4e:	08 94       	sec
    1e50:	07 94       	ror	r0
    1e52:	28 f4       	brcc	.+10     	; 0x1e5e <__ftoa_engine+0x80>
    1e54:	36 0f       	add	r19, r22
    1e56:	e7 1e       	adc	r14, r23
    1e58:	f8 1e       	adc	r15, r24
    1e5a:	49 1f       	adc	r20, r25
    1e5c:	51 1d       	adc	r21, r1
    1e5e:	66 0f       	add	r22, r22
    1e60:	77 1f       	adc	r23, r23
    1e62:	88 1f       	adc	r24, r24
    1e64:	99 1f       	adc	r25, r25
    1e66:	06 94       	lsr	r0
    1e68:	a1 f7       	brne	.-24     	; 0x1e52 <__ftoa_engine+0x74>
    1e6a:	05 90       	lpm	r0, Z+
    1e6c:	07 94       	ror	r0
    1e6e:	28 f4       	brcc	.+10     	; 0x1e7a <__ftoa_engine+0x9c>
    1e70:	e7 0e       	add	r14, r23
    1e72:	f8 1e       	adc	r15, r24
    1e74:	49 1f       	adc	r20, r25
    1e76:	56 1f       	adc	r21, r22
    1e78:	c1 1d       	adc	r28, r1
    1e7a:	77 0f       	add	r23, r23
    1e7c:	88 1f       	adc	r24, r24
    1e7e:	99 1f       	adc	r25, r25
    1e80:	66 1f       	adc	r22, r22
    1e82:	06 94       	lsr	r0
    1e84:	a1 f7       	brne	.-24     	; 0x1e6e <__ftoa_engine+0x90>
    1e86:	05 90       	lpm	r0, Z+
    1e88:	07 94       	ror	r0
    1e8a:	28 f4       	brcc	.+10     	; 0x1e96 <__ftoa_engine+0xb8>
    1e8c:	f8 0e       	add	r15, r24
    1e8e:	49 1f       	adc	r20, r25
    1e90:	56 1f       	adc	r21, r22
    1e92:	c7 1f       	adc	r28, r23
    1e94:	d1 1d       	adc	r29, r1
    1e96:	88 0f       	add	r24, r24
    1e98:	99 1f       	adc	r25, r25
    1e9a:	66 1f       	adc	r22, r22
    1e9c:	77 1f       	adc	r23, r23
    1e9e:	06 94       	lsr	r0
    1ea0:	a1 f7       	brne	.-24     	; 0x1e8a <__ftoa_engine+0xac>
    1ea2:	05 90       	lpm	r0, Z+
    1ea4:	07 94       	ror	r0
    1ea6:	20 f4       	brcc	.+8      	; 0x1eb0 <__ftoa_engine+0xd2>
    1ea8:	49 0f       	add	r20, r25
    1eaa:	56 1f       	adc	r21, r22
    1eac:	c7 1f       	adc	r28, r23
    1eae:	d8 1f       	adc	r29, r24
    1eb0:	99 0f       	add	r25, r25
    1eb2:	66 1f       	adc	r22, r22
    1eb4:	77 1f       	adc	r23, r23
    1eb6:	88 1f       	adc	r24, r24
    1eb8:	06 94       	lsr	r0
    1eba:	a9 f7       	brne	.-22     	; 0x1ea6 <__ftoa_engine+0xc8>
    1ebc:	84 91       	lpm	r24, Z
    1ebe:	10 95       	com	r17
    1ec0:	17 70       	andi	r17, 0x07	; 7
    1ec2:	41 f0       	breq	.+16     	; 0x1ed4 <__ftoa_engine+0xf6>
    1ec4:	d6 95       	lsr	r29
    1ec6:	c7 95       	ror	r28
    1ec8:	57 95       	ror	r21
    1eca:	47 95       	ror	r20
    1ecc:	f7 94       	ror	r15
    1ece:	e7 94       	ror	r14
    1ed0:	1a 95       	dec	r17
    1ed2:	c1 f7       	brne	.-16     	; 0x1ec4 <__ftoa_engine+0xe6>
    1ed4:	e0 e7       	ldi	r30, 0x70	; 112
    1ed6:	f0 e0       	ldi	r31, 0x00	; 0
    1ed8:	68 94       	set
    1eda:	15 90       	lpm	r1, Z+
    1edc:	15 91       	lpm	r17, Z+
    1ede:	35 91       	lpm	r19, Z+
    1ee0:	65 91       	lpm	r22, Z+
    1ee2:	95 91       	lpm	r25, Z+
    1ee4:	05 90       	lpm	r0, Z+
    1ee6:	7f e2       	ldi	r23, 0x2F	; 47
    1ee8:	73 95       	inc	r23
    1eea:	e1 18       	sub	r14, r1
    1eec:	f1 0a       	sbc	r15, r17
    1eee:	43 0b       	sbc	r20, r19
    1ef0:	56 0b       	sbc	r21, r22
    1ef2:	c9 0b       	sbc	r28, r25
    1ef4:	d0 09       	sbc	r29, r0
    1ef6:	c0 f7       	brcc	.-16     	; 0x1ee8 <__ftoa_engine+0x10a>
    1ef8:	e1 0c       	add	r14, r1
    1efa:	f1 1e       	adc	r15, r17
    1efc:	43 1f       	adc	r20, r19
    1efe:	56 1f       	adc	r21, r22
    1f00:	c9 1f       	adc	r28, r25
    1f02:	d0 1d       	adc	r29, r0
    1f04:	7e f4       	brtc	.+30     	; 0x1f24 <__ftoa_engine+0x146>
    1f06:	70 33       	cpi	r23, 0x30	; 48
    1f08:	11 f4       	brne	.+4      	; 0x1f0e <__ftoa_engine+0x130>
    1f0a:	8a 95       	dec	r24
    1f0c:	e6 cf       	rjmp	.-52     	; 0x1eda <__ftoa_engine+0xfc>
    1f0e:	e8 94       	clt
    1f10:	01 50       	subi	r16, 0x01	; 1
    1f12:	30 f0       	brcs	.+12     	; 0x1f20 <__ftoa_engine+0x142>
    1f14:	08 0f       	add	r16, r24
    1f16:	0a f4       	brpl	.+2      	; 0x1f1a <__ftoa_engine+0x13c>
    1f18:	00 27       	eor	r16, r16
    1f1a:	02 17       	cp	r16, r18
    1f1c:	08 f4       	brcc	.+2      	; 0x1f20 <__ftoa_engine+0x142>
    1f1e:	20 2f       	mov	r18, r16
    1f20:	23 95       	inc	r18
    1f22:	02 2f       	mov	r16, r18
    1f24:	7a 33       	cpi	r23, 0x3A	; 58
    1f26:	28 f0       	brcs	.+10     	; 0x1f32 <__ftoa_engine+0x154>
    1f28:	79 e3       	ldi	r23, 0x39	; 57
    1f2a:	7d 93       	st	X+, r23
    1f2c:	2a 95       	dec	r18
    1f2e:	e9 f7       	brne	.-6      	; 0x1f2a <__ftoa_engine+0x14c>
    1f30:	10 c0       	rjmp	.+32     	; 0x1f52 <__ftoa_engine+0x174>
    1f32:	7d 93       	st	X+, r23
    1f34:	2a 95       	dec	r18
    1f36:	89 f6       	brne	.-94     	; 0x1eda <__ftoa_engine+0xfc>
    1f38:	06 94       	lsr	r0
    1f3a:	97 95       	ror	r25
    1f3c:	67 95       	ror	r22
    1f3e:	37 95       	ror	r19
    1f40:	17 95       	ror	r17
    1f42:	17 94       	ror	r1
    1f44:	e1 18       	sub	r14, r1
    1f46:	f1 0a       	sbc	r15, r17
    1f48:	43 0b       	sbc	r20, r19
    1f4a:	56 0b       	sbc	r21, r22
    1f4c:	c9 0b       	sbc	r28, r25
    1f4e:	d0 09       	sbc	r29, r0
    1f50:	98 f0       	brcs	.+38     	; 0x1f78 <__ftoa_engine+0x19a>
    1f52:	23 95       	inc	r18
    1f54:	7e 91       	ld	r23, -X
    1f56:	73 95       	inc	r23
    1f58:	7a 33       	cpi	r23, 0x3A	; 58
    1f5a:	08 f0       	brcs	.+2      	; 0x1f5e <__ftoa_engine+0x180>
    1f5c:	70 e3       	ldi	r23, 0x30	; 48
    1f5e:	7c 93       	st	X, r23
    1f60:	20 13       	cpse	r18, r16
    1f62:	b8 f7       	brcc	.-18     	; 0x1f52 <__ftoa_engine+0x174>
    1f64:	7e 91       	ld	r23, -X
    1f66:	70 61       	ori	r23, 0x10	; 16
    1f68:	7d 93       	st	X+, r23
    1f6a:	30 f0       	brcs	.+12     	; 0x1f78 <__ftoa_engine+0x19a>
    1f6c:	83 95       	inc	r24
    1f6e:	71 e3       	ldi	r23, 0x31	; 49
    1f70:	7d 93       	st	X+, r23
    1f72:	70 e3       	ldi	r23, 0x30	; 48
    1f74:	2a 95       	dec	r18
    1f76:	e1 f7       	brne	.-8      	; 0x1f70 <__ftoa_engine+0x192>
    1f78:	11 24       	eor	r1, r1
    1f7a:	ef 90       	pop	r14
    1f7c:	ff 90       	pop	r15
    1f7e:	0f 91       	pop	r16
    1f80:	1f 91       	pop	r17
    1f82:	cf 91       	pop	r28
    1f84:	df 91       	pop	r29
    1f86:	99 27       	eor	r25, r25
    1f88:	87 fd       	sbrc	r24, 7
    1f8a:	90 95       	com	r25
    1f8c:	08 95       	ret

00001f8e <strnlen_P>:
    1f8e:	fc 01       	movw	r30, r24
    1f90:	05 90       	lpm	r0, Z+
    1f92:	61 50       	subi	r22, 0x01	; 1
    1f94:	70 40       	sbci	r23, 0x00	; 0
    1f96:	01 10       	cpse	r0, r1
    1f98:	d8 f7       	brcc	.-10     	; 0x1f90 <strnlen_P+0x2>
    1f9a:	80 95       	com	r24
    1f9c:	90 95       	com	r25
    1f9e:	8e 0f       	add	r24, r30
    1fa0:	9f 1f       	adc	r25, r31
    1fa2:	08 95       	ret

00001fa4 <strnlen>:
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	61 50       	subi	r22, 0x01	; 1
    1fa8:	70 40       	sbci	r23, 0x00	; 0
    1faa:	01 90       	ld	r0, Z+
    1fac:	01 10       	cpse	r0, r1
    1fae:	d8 f7       	brcc	.-10     	; 0x1fa6 <strnlen+0x2>
    1fb0:	80 95       	com	r24
    1fb2:	90 95       	com	r25
    1fb4:	8e 0f       	add	r24, r30
    1fb6:	9f 1f       	adc	r25, r31
    1fb8:	08 95       	ret

00001fba <fputc>:
    1fba:	0f 93       	push	r16
    1fbc:	1f 93       	push	r17
    1fbe:	cf 93       	push	r28
    1fc0:	df 93       	push	r29
    1fc2:	fb 01       	movw	r30, r22
    1fc4:	23 81       	ldd	r18, Z+3	; 0x03
    1fc6:	21 fd       	sbrc	r18, 1
    1fc8:	03 c0       	rjmp	.+6      	; 0x1fd0 <fputc+0x16>
    1fca:	8f ef       	ldi	r24, 0xFF	; 255
    1fcc:	9f ef       	ldi	r25, 0xFF	; 255
    1fce:	28 c0       	rjmp	.+80     	; 0x2020 <fputc+0x66>
    1fd0:	22 ff       	sbrs	r18, 2
    1fd2:	16 c0       	rjmp	.+44     	; 0x2000 <fputc+0x46>
    1fd4:	46 81       	ldd	r20, Z+6	; 0x06
    1fd6:	57 81       	ldd	r21, Z+7	; 0x07
    1fd8:	24 81       	ldd	r18, Z+4	; 0x04
    1fda:	35 81       	ldd	r19, Z+5	; 0x05
    1fdc:	42 17       	cp	r20, r18
    1fde:	53 07       	cpc	r21, r19
    1fe0:	44 f4       	brge	.+16     	; 0x1ff2 <fputc+0x38>
    1fe2:	a0 81       	ld	r26, Z
    1fe4:	b1 81       	ldd	r27, Z+1	; 0x01
    1fe6:	9d 01       	movw	r18, r26
    1fe8:	2f 5f       	subi	r18, 0xFF	; 255
    1fea:	3f 4f       	sbci	r19, 0xFF	; 255
    1fec:	31 83       	std	Z+1, r19	; 0x01
    1fee:	20 83       	st	Z, r18
    1ff0:	8c 93       	st	X, r24
    1ff2:	26 81       	ldd	r18, Z+6	; 0x06
    1ff4:	37 81       	ldd	r19, Z+7	; 0x07
    1ff6:	2f 5f       	subi	r18, 0xFF	; 255
    1ff8:	3f 4f       	sbci	r19, 0xFF	; 255
    1ffa:	37 83       	std	Z+7, r19	; 0x07
    1ffc:	26 83       	std	Z+6, r18	; 0x06
    1ffe:	10 c0       	rjmp	.+32     	; 0x2020 <fputc+0x66>
    2000:	eb 01       	movw	r28, r22
    2002:	09 2f       	mov	r16, r25
    2004:	18 2f       	mov	r17, r24
    2006:	00 84       	ldd	r0, Z+8	; 0x08
    2008:	f1 85       	ldd	r31, Z+9	; 0x09
    200a:	e0 2d       	mov	r30, r0
    200c:	09 95       	icall
    200e:	89 2b       	or	r24, r25
    2010:	e1 f6       	brne	.-72     	; 0x1fca <fputc+0x10>
    2012:	8e 81       	ldd	r24, Y+6	; 0x06
    2014:	9f 81       	ldd	r25, Y+7	; 0x07
    2016:	01 96       	adiw	r24, 0x01	; 1
    2018:	9f 83       	std	Y+7, r25	; 0x07
    201a:	8e 83       	std	Y+6, r24	; 0x06
    201c:	81 2f       	mov	r24, r17
    201e:	90 2f       	mov	r25, r16
    2020:	df 91       	pop	r29
    2022:	cf 91       	pop	r28
    2024:	1f 91       	pop	r17
    2026:	0f 91       	pop	r16
    2028:	08 95       	ret

0000202a <snprintf>:
    202a:	ae e0       	ldi	r26, 0x0E	; 14
    202c:	b0 e0       	ldi	r27, 0x00	; 0
    202e:	eb e1       	ldi	r30, 0x1B	; 27
    2030:	f0 e1       	ldi	r31, 0x10	; 16
    2032:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__prologue_saves__+0x1c>
    2036:	0d 89       	ldd	r16, Y+21	; 0x15
    2038:	1e 89       	ldd	r17, Y+22	; 0x16
    203a:	8f 89       	ldd	r24, Y+23	; 0x17
    203c:	98 8d       	ldd	r25, Y+24	; 0x18
    203e:	26 e0       	ldi	r18, 0x06	; 6
    2040:	2c 83       	std	Y+4, r18	; 0x04
    2042:	1a 83       	std	Y+2, r17	; 0x02
    2044:	09 83       	std	Y+1, r16	; 0x01
    2046:	97 ff       	sbrs	r25, 7
    2048:	02 c0       	rjmp	.+4      	; 0x204e <snprintf+0x24>
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	90 e8       	ldi	r25, 0x80	; 128
    204e:	01 97       	sbiw	r24, 0x01	; 1
    2050:	9e 83       	std	Y+6, r25	; 0x06
    2052:	8d 83       	std	Y+5, r24	; 0x05
    2054:	ae 01       	movw	r20, r28
    2056:	45 5e       	subi	r20, 0xE5	; 229
    2058:	5f 4f       	sbci	r21, 0xFF	; 255
    205a:	69 8d       	ldd	r22, Y+25	; 0x19
    205c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    205e:	ce 01       	movw	r24, r28
    2060:	01 96       	adiw	r24, 0x01	; 1
    2062:	0e 94 3c 0b 	call	0x1678	; 0x1678 <vfprintf>
    2066:	4d 81       	ldd	r20, Y+5	; 0x05
    2068:	5e 81       	ldd	r21, Y+6	; 0x06
    206a:	57 fd       	sbrc	r21, 7
    206c:	0a c0       	rjmp	.+20     	; 0x2082 <snprintf+0x58>
    206e:	2f 81       	ldd	r18, Y+7	; 0x07
    2070:	38 85       	ldd	r19, Y+8	; 0x08
    2072:	42 17       	cp	r20, r18
    2074:	53 07       	cpc	r21, r19
    2076:	0c f4       	brge	.+2      	; 0x207a <snprintf+0x50>
    2078:	9a 01       	movw	r18, r20
    207a:	f8 01       	movw	r30, r16
    207c:	e2 0f       	add	r30, r18
    207e:	f3 1f       	adc	r31, r19
    2080:	10 82       	st	Z, r1
    2082:	2e 96       	adiw	r28, 0x0e	; 14
    2084:	e4 e0       	ldi	r30, 0x04	; 4
    2086:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__epilogue_restores__+0x1c>

0000208a <__ultoa_invert>:
    208a:	fa 01       	movw	r30, r20
    208c:	aa 27       	eor	r26, r26
    208e:	28 30       	cpi	r18, 0x08	; 8
    2090:	51 f1       	breq	.+84     	; 0x20e6 <__ultoa_invert+0x5c>
    2092:	20 31       	cpi	r18, 0x10	; 16
    2094:	81 f1       	breq	.+96     	; 0x20f6 <__ultoa_invert+0x6c>
    2096:	e8 94       	clt
    2098:	6f 93       	push	r22
    209a:	6e 7f       	andi	r22, 0xFE	; 254
    209c:	6e 5f       	subi	r22, 0xFE	; 254
    209e:	7f 4f       	sbci	r23, 0xFF	; 255
    20a0:	8f 4f       	sbci	r24, 0xFF	; 255
    20a2:	9f 4f       	sbci	r25, 0xFF	; 255
    20a4:	af 4f       	sbci	r26, 0xFF	; 255
    20a6:	b1 e0       	ldi	r27, 0x01	; 1
    20a8:	3e d0       	rcall	.+124    	; 0x2126 <__ultoa_invert+0x9c>
    20aa:	b4 e0       	ldi	r27, 0x04	; 4
    20ac:	3c d0       	rcall	.+120    	; 0x2126 <__ultoa_invert+0x9c>
    20ae:	67 0f       	add	r22, r23
    20b0:	78 1f       	adc	r23, r24
    20b2:	89 1f       	adc	r24, r25
    20b4:	9a 1f       	adc	r25, r26
    20b6:	a1 1d       	adc	r26, r1
    20b8:	68 0f       	add	r22, r24
    20ba:	79 1f       	adc	r23, r25
    20bc:	8a 1f       	adc	r24, r26
    20be:	91 1d       	adc	r25, r1
    20c0:	a1 1d       	adc	r26, r1
    20c2:	6a 0f       	add	r22, r26
    20c4:	71 1d       	adc	r23, r1
    20c6:	81 1d       	adc	r24, r1
    20c8:	91 1d       	adc	r25, r1
    20ca:	a1 1d       	adc	r26, r1
    20cc:	20 d0       	rcall	.+64     	; 0x210e <__ultoa_invert+0x84>
    20ce:	09 f4       	brne	.+2      	; 0x20d2 <__ultoa_invert+0x48>
    20d0:	68 94       	set
    20d2:	3f 91       	pop	r19
    20d4:	2a e0       	ldi	r18, 0x0A	; 10
    20d6:	26 9f       	mul	r18, r22
    20d8:	11 24       	eor	r1, r1
    20da:	30 19       	sub	r19, r0
    20dc:	30 5d       	subi	r19, 0xD0	; 208
    20de:	31 93       	st	Z+, r19
    20e0:	de f6       	brtc	.-74     	; 0x2098 <__ultoa_invert+0xe>
    20e2:	cf 01       	movw	r24, r30
    20e4:	08 95       	ret
    20e6:	46 2f       	mov	r20, r22
    20e8:	47 70       	andi	r20, 0x07	; 7
    20ea:	40 5d       	subi	r20, 0xD0	; 208
    20ec:	41 93       	st	Z+, r20
    20ee:	b3 e0       	ldi	r27, 0x03	; 3
    20f0:	0f d0       	rcall	.+30     	; 0x2110 <__ultoa_invert+0x86>
    20f2:	c9 f7       	brne	.-14     	; 0x20e6 <__ultoa_invert+0x5c>
    20f4:	f6 cf       	rjmp	.-20     	; 0x20e2 <__ultoa_invert+0x58>
    20f6:	46 2f       	mov	r20, r22
    20f8:	4f 70       	andi	r20, 0x0F	; 15
    20fa:	40 5d       	subi	r20, 0xD0	; 208
    20fc:	4a 33       	cpi	r20, 0x3A	; 58
    20fe:	18 f0       	brcs	.+6      	; 0x2106 <__ultoa_invert+0x7c>
    2100:	49 5d       	subi	r20, 0xD9	; 217
    2102:	31 fd       	sbrc	r19, 1
    2104:	40 52       	subi	r20, 0x20	; 32
    2106:	41 93       	st	Z+, r20
    2108:	02 d0       	rcall	.+4      	; 0x210e <__ultoa_invert+0x84>
    210a:	a9 f7       	brne	.-22     	; 0x20f6 <__ultoa_invert+0x6c>
    210c:	ea cf       	rjmp	.-44     	; 0x20e2 <__ultoa_invert+0x58>
    210e:	b4 e0       	ldi	r27, 0x04	; 4
    2110:	a6 95       	lsr	r26
    2112:	97 95       	ror	r25
    2114:	87 95       	ror	r24
    2116:	77 95       	ror	r23
    2118:	67 95       	ror	r22
    211a:	ba 95       	dec	r27
    211c:	c9 f7       	brne	.-14     	; 0x2110 <__ultoa_invert+0x86>
    211e:	00 97       	sbiw	r24, 0x00	; 0
    2120:	61 05       	cpc	r22, r1
    2122:	71 05       	cpc	r23, r1
    2124:	08 95       	ret
    2126:	9b 01       	movw	r18, r22
    2128:	ac 01       	movw	r20, r24
    212a:	0a 2e       	mov	r0, r26
    212c:	06 94       	lsr	r0
    212e:	57 95       	ror	r21
    2130:	47 95       	ror	r20
    2132:	37 95       	ror	r19
    2134:	27 95       	ror	r18
    2136:	ba 95       	dec	r27
    2138:	c9 f7       	brne	.-14     	; 0x212c <__ultoa_invert+0xa2>
    213a:	62 0f       	add	r22, r18
    213c:	73 1f       	adc	r23, r19
    213e:	84 1f       	adc	r24, r20
    2140:	95 1f       	adc	r25, r21
    2142:	a0 1d       	adc	r26, r0
    2144:	08 95       	ret

00002146 <_exit>:
    2146:	f8 94       	cli

00002148 <__stop_program>:
    2148:	ff cf       	rjmp	.-2      	; 0x2148 <__stop_program>
